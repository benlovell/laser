---
http_interactions:
- request:
    method: get
    uri: https://rubygems.org/api/v1/gems/activesupport.yaml
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Gems 0.8.3
      - Ruby
      Authorization:
      - 1da62a2449ff2bdd425e9e82261f7b72
      Connection:
      - keep-alive
      Keep-Alive:
      - '30'
      Content-Type:
      - application/x-www-form-urlencoded
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - text/yaml
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
      Content-Disposition:
      - attachment
      Content-Transfer-Encoding:
      - binary
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET
      Access-Control-Max-Age:
      - '1728000'
      Cache-Control:
      - private
      X-Request-Id:
      - 7631c3b5-5d2c-496f-8c3b-0cc697e4ee37
      X-Runtime:
      - '0.012295'
      X-Ua-Compatible:
      - IE=Edge,chrome=1
      X-Backend:
      - F_Rails 54.186.104.15:443
      Transfer-Encoding:
      - chunked
      Accept-Ranges:
      - bytes
      Date:
      - Fri, 06 Jan 2017 17:09:58 GMT
      Via:
      - 1.1 varnish
      Age:
      - '0'
      Connection:
      - keep-alive
      X-Served-By:
      - cache-bma7020-BMA
      X-Cache:
      - MISS
      X-Cache-Hits:
      - '0'
      X-Timer:
      - S1483722598.554356,VS0,VE209
      Vary:
      - Accept-Encoding,Fastly-SSL
      Etag:
      - '"d9e3bdc86e76a091f25fe568596f3030"'
      Server:
      - RubyGems.org
    body:
      encoding: ASCII-8BIT
      string: "---\nname: activesupport\ndownloads: 113503049\nversion: 5.0.1\nversion_downloads:
        213886\nplatform: ruby\nauthors: David Heinemeier Hansson\ninfo: A toolkit
        of support libraries and Ruby core extensions extracted from the Rails\n  framework.
        Rich support for multibyte strings, internationalization, time zones,\n  and
        testing.\nlicenses:\n- MIT\nmetadata: {}\nsha: 2db4123e8ce82bb7c62f43d89a5db591b17c9e6fc875f3df7c52b3942da07621\nproject_uri:
        https://rubygems.org/gems/activesupport\ngem_uri: https://rubygems.org/gems/activesupport-5.0.1.gem\nhomepage_uri:
        http://rubyonrails.org\nwiki_uri: \ndocumentation_uri: http://www.rubydoc.info/gems/activesupport/5.0.1\nmailing_list_uri:
        \nsource_code_uri: \nbug_tracker_uri: \ndependencies:\n  development: []\n
        \ runtime:\n  - name: concurrent-ruby\n    requirements: \">= 1.0.2, ~> 1.0\"\n
        \ - name: i18n\n    requirements: \"~> 0.7\"\n  - name: minitest\n    requirements:
        \"~> 5.1\"\n  - name: tzinfo\n    requirements: \"~> 1.1\"\n"
    http_version: 
  recorded_at: Fri, 06 Jan 2017 17:09:58 GMT
- request:
    method: get
    uri: https://rubygems.org/api/v1/versions/activesupport.yaml
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Gems 0.8.3
      - Ruby
      Authorization:
      - 1da62a2449ff2bdd425e9e82261f7b72
      Connection:
      - keep-alive
      Keep-Alive:
      - '30'
      Content-Type:
      - application/x-www-form-urlencoded
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - text/yaml
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
      Etag:
      - '"02504bf3f890c4cd108158b45db032a6"'
      Last-Modified:
      - Wed, 21 Dec 2016 00:06:19 GMT
      Content-Disposition:
      - attachment
      Content-Transfer-Encoding:
      - binary
      Cache-Control:
      - max-age=0, public
      X-Request-Id:
      - 83f4c511-754c-42f5-bfca-1de983dc0187
      X-Runtime:
      - '0.399245'
      X-Ua-Compatible:
      - IE=Edge,chrome=1
      X-Backend:
      - F_Rails 54.186.104.15:443
      Content-Length:
      - '18679'
      Accept-Ranges:
      - bytes
      Date:
      - Fri, 06 Jan 2017 17:09:58 GMT
      Via:
      - 1.1 varnish
      Age:
      - '35'
      Connection:
      - keep-alive
      X-Served-By:
      - cache-bma7027-BMA
      X-Cache:
      - HIT
      X-Cache-Hits:
      - '1'
      X-Timer:
      - S1483722598.929254,VS0,VE0
      Vary:
      - Accept-Encoding,Fastly-SSL
      Server:
      - RubyGems.org
    body:
      encoding: ASCII-8BIT
      string: "---\n- authors: David Heinemeier Hansson\n  built_at: '2016-12-21T00:00:00.000Z'\n
        \ created_at: '2016-12-21T00:06:17.383Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 213886\n  metadata: {}\n  number: 5.0.1\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">=
        0\"\n  ruby_version: \">= 2.2.2\"\n  prerelease: false\n  licenses:\n  - MIT\n
        \ requirements: []\n  sha: 2db4123e8ce82bb7c62f43d89a5db591b17c9e6fc875f3df7c52b3942da07621\n-
        authors: David Heinemeier Hansson\n  built_at: '2016-12-09T00:00:00.000Z'\n
        \ created_at: '2016-12-09T19:11:39.354Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 3288\n  metadata: {}\n  number: 5.0.1.rc2\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">
        1.3.1\"\n  ruby_version: \">= 2.2.2\"\n  prerelease: true\n  licenses:\n  -
        MIT\n  requirements: []\n  sha: 48bb71297e47b710080ec8fcab6f7cf72439b63b7e1216df6256a1b333099549\n-
        authors: David Heinemeier Hansson\n  built_at: '2016-11-30T00:00:00.000Z'\n
        \ created_at: '2016-11-30T20:01:10.551Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 3204\n  metadata: {}\n  number: 5.0.1.rc1\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">
        1.3.1\"\n  ruby_version: \">= 2.2.2\"\n  prerelease: true\n  licenses:\n  -
        MIT\n  requirements: []\n  sha: 73a29a60febd91c1cb2dd776f25ceacbef74a7906516537e28fe3a82f3d07197\n-
        authors: David Heinemeier Hansson\n  built_at: '2016-08-10T00:00:00.000Z'\n
        \ created_at: '2016-08-11T17:34:49.640Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 1942653\n  metadata: {}\n  number: 5.0.0.1\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">=
        0\"\n  ruby_version: \">= 2.2.2\"\n  prerelease: false\n  licenses:\n  - MIT\n
        \ requirements: []\n  sha: 496670668a91e9f492830c105a0002ca921138525d5b017372dcfae811c9f2ed\n-
        authors: David Heinemeier Hansson\n  built_at: '2016-06-30T00:00:00.000Z'\n
        \ created_at: '2016-06-30T21:20:59.975Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 799141\n  metadata: {}\n  number: 5.0.0\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">=
        0\"\n  ruby_version: \">= 2.2.2\"\n  prerelease: false\n  licenses:\n  - MIT\n
        \ requirements: []\n  sha: ee3211f88b600a0876aa0e15d0f42e44c9905c4119040d2faa3e7005be85ff4c\n-
        authors: David Heinemeier Hansson\n  built_at: '2016-06-22T00:00:00.000Z'\n
        \ created_at: '2016-06-22T20:02:00.591Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 38441\n  metadata: {}\n  number: 5.0.0.rc2\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">
        1.3.1\"\n  ruby_version: \">= 2.2.2\"\n  prerelease: true\n  licenses:\n  -
        MIT\n  requirements: []\n  sha: fc596404beace3d18b0f0c26bc511c91c7afa938ed076c3e495aa4078e164c55\n-
        authors: David Heinemeier Hansson\n  built_at: '2016-05-06T00:00:00.000Z'\n
        \ created_at: '2016-05-06T21:55:37.707Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 114195\n  metadata: {}\n  number: 5.0.0.rc1\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">
        1.3.1\"\n  ruby_version: \">= 2.2.2\"\n  prerelease: true\n  licenses:\n  -
        MIT\n  requirements: []\n  sha: 5e5f61d906ad99f5b7b8ed475e709a867d5ce9cd3ab0f7d71353c528b3bdc894\n-
        authors: David Heinemeier Hansson\n  built_at: '2016-05-06T00:00:00.000Z'\n
        \ created_at: '2016-05-06T22:00:33.389Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 5294\n  metadata: {}\n  number: 5.0.0.racecar1\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">
        1.3.1\"\n  ruby_version: \">= 2.2.2\"\n  prerelease: true\n  licenses:\n  -
        MIT\n  requirements: []\n  sha: afdd880b807c5a0ec923f7003a507f48389a88e6070b71304d0c2bedd6808591\n-
        authors: David Heinemeier Hansson\n  built_at: '2016-04-27T00:00:00.000Z'\n
        \ created_at: '2016-04-27T20:53:57.833Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 21339\n  metadata: {}\n  number: 5.0.0.beta4\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">
        1.3.1\"\n  ruby_version: \">= 2.2.2\"\n  prerelease: true\n  licenses:\n  -
        MIT\n  requirements: []\n  sha: 3d5435bcea746bd383d04108173dcf65dba4fdf983935b9293ea1387feb0f812\n-
        authors: David Heinemeier Hansson\n  built_at: '2016-02-24T00:00:00.000Z'\n
        \ created_at: '2016-02-24T16:15:20.410Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 111895\n  metadata: {}\n  number: 5.0.0.beta3\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">
        1.3.1\"\n  ruby_version: \">= 2.2.2\"\n  prerelease: true\n  licenses:\n  -
        MIT\n  requirements: []\n  sha: f69835f168fca23cdbf1e108efef300c14bf548be65a77b0c4382d262940bc24\n-
        authors: David Heinemeier Hansson\n  built_at: '2016-02-01T00:00:00.000Z'\n
        \ created_at: '2016-02-01T22:05:13.759Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 35395\n  metadata: {}\n  number: 5.0.0.beta2\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">
        1.3.1\"\n  ruby_version: \">= 2.2.2\"\n  prerelease: true\n  licenses:\n  -
        MIT\n  requirements: []\n  sha: 3fa320f52ca65b853ace8dd44a7ed6d11bf1d26787225ee242490c6e7bc02a95\n-
        authors: David Heinemeier Hansson\n  built_at: '2016-01-25T00:00:00.000Z'\n
        \ created_at: '2016-01-25T19:26:05.132Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 8888\n  metadata: {}\n  number: 5.0.0.beta1.1\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">
        1.3.1\"\n  ruby_version: \">= 2.2.2\"\n  prerelease: true\n  licenses:\n  -
        MIT\n  requirements: []\n  sha: 7e7682dcd9c05bf9ba3a86cce238be00fdcd74ca37f715a028d8ab7d2ab937c8\n-
        authors: David Heinemeier Hansson\n  built_at: '2015-12-18T00:00:00.000Z'\n
        \ created_at: '2015-12-18T21:17:14.981Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 35264\n  metadata: {}\n  number: 5.0.0.beta1\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">
        1.3.1\"\n  ruby_version: \">= 2.2.2\"\n  prerelease: true\n  licenses:\n  -
        MIT\n  requirements: []\n  sha: 55cbb859b94743ad29cc22e7dc61f19c77615cc1b0119db8a6ee38d7e50a65fe\n-
        authors: David Heinemeier Hansson\n  built_at: '2016-08-10T00:00:00.000Z'\n
        \ created_at: '2016-08-11T17:34:37.485Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 2844296\n  metadata: {}\n  number: 4.2.7.1\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">=
        0\"\n  ruby_version: \">= 1.9.3\"\n  prerelease: false\n  licenses:\n  - MIT\n
        \ requirements: []\n  sha: 241bbcefbd472a2685e84952ca9c0dbec5665121ea88b312602c777ba608babd\n-
        authors: David Heinemeier Hansson\n  built_at: '2016-07-13T00:00:00.000Z'\n
        \ created_at: '2016-07-13T02:54:18.250Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 642047\n  metadata: {}\n  number: 4.2.7\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">=
        0\"\n  ruby_version: \">= 1.9.3\"\n  prerelease: false\n  licenses:\n  - MIT\n
        \ requirements: []\n  sha: d2ea67f810746429c07b940191aa981540e5bdda25a088ec1921e1e9097fa0de\n-
        authors: David Heinemeier Hansson\n  built_at: '2016-07-01T00:00:00.000Z'\n
        \ created_at: '2016-07-01T00:30:53.172Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 3209\n  metadata: {}\n  number: 4.2.7.rc1\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">
        1.3.1\"\n  ruby_version: \">= 1.9.3\"\n  prerelease: true\n  licenses:\n  -
        MIT\n  requirements: []\n  sha: 3b54a98c225b90106d54a2e2120e0d2bed4b60fd161df952fca636c3e5db5d46\n-
        authors: David Heinemeier Hansson\n  built_at: '2016-03-07T00:00:00.000Z'\n
        \ created_at: '2016-03-07T22:31:56.269Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 4990587\n  metadata: {}\n  number: 4.2.6\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">=
        0\"\n  ruby_version: \">= 1.9.3\"\n  prerelease: false\n  licenses:\n  - MIT\n
        \ requirements: []\n  sha: 18266df279215a84d4ae6545961c36d0ddc34bfb9a463eed1cded6dacfecc50f\n-
        authors: David Heinemeier Hansson\n  built_at: '2016-03-01T00:00:00.000Z'\n
        \ created_at: '2016-03-01T18:36:39.035Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 3048\n  metadata: {}\n  number: 4.2.6.rc1\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">
        1.3.1\"\n  ruby_version: \">= 1.9.3\"\n  prerelease: true\n  licenses:\n  -
        MIT\n  requirements: []\n  sha: 4eda146102ced8c7069241e99ee1029ed40d33cc211c9acc9f68ad56dce2373a\n-
        authors: David Heinemeier Hansson\n  built_at: '2016-02-29T00:00:00.000Z'\n
        \ created_at: '2016-02-29T19:15:47.889Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 849677\n  metadata: {}\n  number: 4.2.5.2\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">=
        0\"\n  ruby_version: \">= 1.9.3\"\n  prerelease: false\n  licenses:\n  - MIT\n
        \ requirements: []\n  sha: 80ad345adf7e2b72c5d90753c0df91eacc34f4de02b34cfbf60bcf6c83483031\n-
        authors: David Heinemeier Hansson\n  built_at: '2016-01-25T00:00:00.000Z'\n
        \ created_at: '2016-01-25T19:25:56.967Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 1830472\n  metadata: {}\n  number: 4.2.5.1\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">=
        0\"\n  ruby_version: \">= 1.9.3\"\n  prerelease: false\n  licenses:\n  - MIT\n
        \ requirements: []\n  sha: cd20d48479a755150816b3e46fbc9634345359039f8ac8fde89038ceffd6ef9b\n-
        authors: David Heinemeier Hansson\n  built_at: '2015-11-12T00:00:00.000Z'\n
        \ created_at: '2015-11-12T17:04:45.589Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 3120141\n  metadata: {}\n  number: 4.2.5\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">=
        0\"\n  ruby_version: \">= 1.9.3\"\n  prerelease: false\n  licenses:\n  - MIT\n
        \ requirements: []\n  sha: ab92026997b67187fc14710214250b92cd984bc00115709f1ef2bf2521b35ff0\n-
        authors: David Heinemeier Hansson\n  built_at: '2015-11-05T00:00:00.000Z'\n
        \ created_at: '2015-11-05T03:00:57.710Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 7001\n  metadata: {}\n  number: 4.2.5.rc2\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">
        1.3.1\"\n  ruby_version: \">= 1.9.3\"\n  prerelease: true\n  licenses:\n  -
        MIT\n  requirements: []\n  sha: a28749eba02baf2a87bd30332f4b41033d8c810f500677719923e8d3ebdfb28a\n-
        authors: David Heinemeier Hansson\n  built_at: '2015-10-30T00:00:00.000Z'\n
        \ created_at: '2015-10-30T20:46:40.664Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 5618\n  metadata: {}\n  number: 4.2.5.rc1\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">
        1.3.1\"\n  ruby_version: \">= 1.9.3\"\n  prerelease: true\n  licenses:\n  -
        MIT\n  requirements: []\n  sha: 12117749ec24d3670e15f09386228adc5bf101d67df8af13c487a021c3c92148\n-
        authors: David Heinemeier Hansson\n  built_at: '2015-08-24T00:00:00.000Z'\n
        \ created_at: '2015-08-24T18:24:52.463Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 3437240\n  metadata: {}\n  number: 4.2.4\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">=
        0\"\n  ruby_version: \">= 1.9.3\"\n  prerelease: false\n  licenses:\n  - MIT\n
        \ requirements: []\n  sha: cee4baf44852a17b01866fdca29055dc01457d671ba3a0e6ebfe856c6446c3a6\n-
        authors: David Heinemeier Hansson\n  built_at: '2015-08-14T00:00:00.000Z'\n
        \ created_at: '2015-08-14T15:19:27.067Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 6146\n  metadata: {}\n  number: 4.2.4.rc1\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">
        1.3.1\"\n  ruby_version: \">= 1.9.3\"\n  prerelease: true\n  licenses:\n  -
        MIT\n  requirements: []\n  sha: 9c3d9fa80983b4027eca2683eaa63ea8b9879753cb23edb5280ccba57f4d760b\n-
        authors: David Heinemeier Hansson\n  built_at: '2015-06-25T00:00:00.000Z'\n
        \ created_at: '2015-06-25T21:29:07.815Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 2969329\n  metadata: {}\n  number: 4.2.3\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">=
        0\"\n  ruby_version: \">= 1.9.3\"\n  prerelease: false\n  licenses:\n  - MIT\n
        \ requirements: []\n  sha: 33954b8af8de98c971250bee5344735123fd660e194010481c03f36bbf7bb65b\n-
        authors: David Heinemeier Hansson\n  built_at: '2015-06-22T00:00:00.000Z'\n
        \ created_at: '2015-06-22T14:22:02.339Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 2885\n  metadata: {}\n  number: 4.2.3.rc1\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">
        1.3.1\"\n  ruby_version: \">= 1.9.3\"\n  prerelease: true\n  licenses:\n  -
        MIT\n  requirements: []\n  sha: bb77cae773d8f490554a50d357ae8e6273e00763008a901a41e6605becf11f4e\n-
        authors: David Heinemeier Hansson\n  built_at: '2015-06-16T00:00:00.000Z'\n
        \ created_at: '2015-06-16T18:01:47.257Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 955870\n  metadata: {}\n  number: 4.2.2\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">=
        0\"\n  ruby_version: \">= 1.9.3\"\n  prerelease: false\n  licenses:\n  - MIT\n
        \ requirements: []\n  sha: b89c010393cda7ecffd755b8cdb7c742794b2d8fe260fb96ff9ca23d6c4b287a\n-
        authors: David Heinemeier Hansson\n  built_at: '2015-03-19T00:00:00.000Z'\n
        \ created_at: '2015-03-19T16:40:34.015Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 3258040\n  metadata: {}\n  number: 4.2.1\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">=
        0\"\n  ruby_version: \">= 1.9.3\"\n  prerelease: false\n  licenses:\n  - MIT\n
        \ requirements: []\n  sha: 36742443adbc7b4648b8674d119ac9dc446c3a555ce73a5a28b1fa029e8adad4\n-
        authors: David Heinemeier Hansson\n  built_at: '2015-03-12T00:00:00.000Z'\n
        \ created_at: '2015-03-12T21:24:40.483Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 6820\n  metadata: {}\n  number: 4.2.1.rc4\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">
        1.3.1\"\n  ruby_version: \">= 1.9.3\"\n  prerelease: true\n  licenses:\n  -
        MIT\n  requirements: []\n  sha: d62066327e4a7ecddfc8b6f43a996dbdc2de27eade12370ad16e5f58797ba9a8\n-
        authors: David Heinemeier Hansson\n  built_at: '2015-03-02T00:00:00.000Z'\n
        \ created_at: '2015-03-02T21:34:22.254Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 8451\n  metadata: {}\n  number: 4.2.1.rc3\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">
        1.3.1\"\n  ruby_version: \">= 1.9.3\"\n  prerelease: true\n  licenses:\n  -
        MIT\n  requirements: []\n  sha: 69704869beccae0694ba5f1e9179eaaa60b99b19adc9a48e890fe1b573894a82\n-
        authors: David Heinemeier Hansson\n  built_at: '2015-02-25T00:00:00.000Z'\n
        \ created_at: '2015-02-25T22:18:16.233Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 3964\n  metadata: {}\n  number: 4.2.1.rc2\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">
        1.3.1\"\n  ruby_version: \">= 1.9.3\"\n  prerelease: true\n  licenses:\n  -
        MIT\n  requirements: []\n  sha: 8f395875fa768792eda41e692c3b93bff40e50be6c0aee82bc94a1ca695517ed\n-
        authors: David Heinemeier Hansson\n  built_at: '2015-02-20T00:00:00.000Z'\n
        \ created_at: '2015-02-20T22:19:52.198Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 3959\n  metadata: {}\n  number: 4.2.1.rc1\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">
        1.3.1\"\n  ruby_version: \">= 1.9.3\"\n  prerelease: true\n  licenses:\n  -
        MIT\n  requirements: []\n  sha: 09f245aa0e448014f6644eff773139f4c7a1a57b9c46aabddd1900f4d846336d\n-
        authors: David Heinemeier Hansson\n  built_at: '2014-12-20T00:00:00.000Z'\n
        \ created_at: '2014-12-20T00:15:02.167Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 13079020\n  metadata: {}\n  number: 4.2.0\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">=
        0\"\n  ruby_version: \">= 1.9.3\"\n  prerelease: false\n  licenses:\n  - MIT\n
        \ requirements: []\n  sha: bb0b702706dd427f85e402adca75d3dd1d6adfb550c5d6b7f90f192d4366480c\n-
        authors: David Heinemeier Hansson\n  built_at: '2014-12-13T00:00:00.000Z'\n
        \ created_at: '2014-12-13T02:58:01.907Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 26674\n  metadata: {}\n  number: 4.2.0.rc3\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">
        1.3.1\"\n  ruby_version: \">= 1.9.3\"\n  prerelease: true\n  licenses:\n  -
        MIT\n  requirements: []\n  sha: 37d08739bf6c9d8b7f79aa364df7cf541973a109e795113081039a289464a8df\n-
        authors: David Heinemeier Hansson\n  built_at: '2014-12-05T00:00:00.000Z'\n
        \ created_at: '2014-12-05T23:19:20.932Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 21311\n  metadata: {}\n  number: 4.2.0.rc2\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">
        1.3.1\"\n  ruby_version: \">= 1.9.3\"\n  prerelease: true\n  licenses:\n  -
        MIT\n  requirements: []\n  sha: da2aa9c447849e94b41fd52c01facc46c6d4b1d48a7267d4c013d8fa842cef47\n-
        authors: David Heinemeier Hansson\n  built_at: '2014-11-28T00:00:00.000Z'\n
        \ created_at: '2014-11-28T17:52:17.873Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 22538\n  metadata: {}\n  number: 4.2.0.rc1\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">
        1.3.1\"\n  ruby_version: \">= 1.9.3\"\n  prerelease: true\n  licenses:\n  -
        MIT\n  requirements: []\n  sha: 9082276f0ffb8e009524dc17381fbb929f20299a6d471274dd32dfd35bb9cb52\n-
        authors: David Heinemeier Hansson\n  built_at: '2014-10-30T00:00:00.000Z'\n
        \ created_at: '2014-10-30T22:13:19.487Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 51403\n  metadata: {}\n  number: 4.2.0.beta4\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">
        1.3.1\"\n  ruby_version: \">= 1.9.3\"\n  prerelease: true\n  licenses:\n  -
        MIT\n  requirements: []\n  sha: 018bd7e9804a85592bf81e054948efcaba19595b93b130900cbb80b842cf2da0\n-
        authors: David Heinemeier Hansson\n  built_at: '2014-10-29T00:00:00.000Z'\n
        \ created_at: '2014-10-30T18:37:20.608Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 1316\n  metadata: {}\n  number: 4.2.0.beta3\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">
        1.3.1\"\n  ruby_version: \">= 1.9.3\"\n  prerelease: true\n  licenses:\n  -
        MIT\n  requirements: []\n  sha: 4353e86e3da47dc2b569b8e7aec59e16300827c2a63c76747a53aa6d0e96ea3d\n-
        authors: David Heinemeier Hansson\n  built_at: '2014-09-26T00:00:00.000Z'\n
        \ created_at: '2014-09-26T17:44:09.190Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 49829\n  metadata: {}\n  number: 4.2.0.beta2\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">
        1.3.1\"\n  ruby_version: \">= 1.9.3\"\n  prerelease: true\n  licenses:\n  -
        MIT\n  requirements: []\n  sha: dcd31d4a16c5f44fb066b7df880e5fc21d6491170b548d45ddb864eace91a7b4\n-
        authors: David Heinemeier Hansson\n  built_at: '2014-08-20T00:00:00.000Z'\n
        \ created_at: '2014-08-20T02:33:51.645Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 39585\n  metadata: {}\n  number: 4.2.0.beta1\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">
        1.3.1\"\n  ruby_version: \">= 1.9.3\"\n  prerelease: true\n  licenses:\n  -
        MIT\n  requirements: []\n  sha: df2c384c8d25912f41634e4017851101aa727174ea2d0537988d9a2b26196c63\n-
        authors: David Heinemeier Hansson\n  built_at: '2016-07-12T00:00:00.000Z'\n
        \ created_at: '2016-07-12T22:19:20.576Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 171217\n  metadata: {}\n  number: 4.1.16\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">=
        0\"\n  ruby_version: \">= 1.9.3\"\n  prerelease: false\n  licenses:\n  - MIT\n
        \ requirements: []\n  sha: 8dee13ebe51c4f024b645fb6f39fb1df0348df5f137203fa2eeced97d4b1cfe9\n-
        authors: David Heinemeier Hansson\n  built_at: '2016-07-02T00:00:00.000Z'\n
        \ created_at: '2016-07-02T02:13:40.521Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 545\n  metadata: {}\n  number: 4.1.16.rc1\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">
        1.3.1\"\n  ruby_version: \">= 1.9.3\"\n  prerelease: true\n  licenses:\n  -
        MIT\n  requirements: []\n  sha: fb048efec990b9a9ad1eae1459c0d374cc75b8c33ab2db341346aef8e7d0c2c5\n-
        authors: David Heinemeier Hansson\n  built_at: '2016-03-07T00:00:00.000Z'\n
        \ created_at: '2016-03-07T22:35:53.714Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 300264\n  metadata: {}\n  number: 4.1.15\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">=
        0\"\n  ruby_version: \">= 1.9.3\"\n  prerelease: false\n  licenses:\n  - MIT\n
        \ requirements: []\n  sha: d663568aa7e7b8e5d11ce6ac79c60fe73bd0641ebc6f6561d373b0ddbbe25828\n-
        authors: David Heinemeier Hansson\n  built_at: '2016-03-01T00:00:00.000Z'\n
        \ created_at: '2016-03-01T18:42:17.574Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 409\n  metadata: {}\n  number: 4.1.15.rc1\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">
        1.3.1\"\n  ruby_version: \">= 1.9.3\"\n  prerelease: true\n  licenses:\n  -
        MIT\n  requirements: []\n  sha: 1e74a2b64e9952356323ee0fd7b8b38e9be549a81a8d2f6e5da1fcb59480f3d8\n-
        authors: David Heinemeier Hansson\n  built_at: '2016-02-29T00:00:00.000Z'\n
        \ created_at: '2016-02-29T19:18:02.082Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 227204\n  metadata: {}\n  number: 4.1.14.2\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">=
        0\"\n  ruby_version: \">= 1.9.3\"\n  prerelease: false\n  licenses:\n  - MIT\n
        \ requirements: []\n  sha: cb8671d5c6828a5489ac41231f0d4401160f0cb9cf05302e8c3852d0119b5e98\n-
        authors: David Heinemeier Hansson\n  built_at: '2016-01-25T00:00:00.000Z'\n
        \ created_at: '2016-01-25T19:25:48.610Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 177591\n  metadata: {}\n  number: 4.1.14.1\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">=
        0\"\n  ruby_version: \">= 1.9.3\"\n  prerelease: false\n  licenses:\n  - MIT\n
        \ requirements: []\n  sha: e9106df0395eef977c6072bc8bd6c9ec6eb171925ef7e46f203034610d07b617\n-
        authors: David Heinemeier Hansson\n  built_at: '2015-11-12T00:00:00.000Z'\n
        \ created_at: '2015-11-12T17:20:15.367Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 210182\n  metadata: {}\n  number: 4.1.14\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">=
        0\"\n  ruby_version: \">= 1.9.3\"\n  prerelease: false\n  licenses:\n  - MIT\n
        \ requirements: []\n  sha: ce9fc3c4feba2008d43910d9a32f31b32fcc7743610866dd2c7fe25e572fcc59\n-
        authors: David Heinemeier Hansson\n  built_at: '2015-11-05T00:00:00.000Z'\n
        \ created_at: '2015-11-05T02:54:16.414Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 772\n  metadata: {}\n  number: 4.1.14.rc2\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">
        1.3.1\"\n  ruby_version: \">= 1.9.3\"\n  prerelease: true\n  licenses:\n  -
        MIT\n  requirements: []\n  sha: 962cf0dda841282397aeec2f67907b923041886133bb9657959ca1627279830d\n-
        authors: David Heinemeier Hansson\n  built_at: '2015-10-30T00:00:00.000Z'\n
        \ created_at: '2015-10-30T20:44:34.059Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 743\n  metadata: {}\n  number: 4.1.14.rc1\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">
        1.3.1\"\n  ruby_version: \">= 1.9.3\"\n  prerelease: true\n  licenses:\n  -
        MIT\n  requirements: []\n  sha: 30e92323a0bbf3f9d50caecce635bb4738ccc7b71ed7e5481428e62dcbff4bf0\n-
        authors: David Heinemeier Hansson\n  built_at: '2015-08-24T00:00:00.000Z'\n
        \ created_at: '2015-08-24T18:00:02.460Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 289178\n  metadata: {}\n  number: 4.1.13\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">=
        0\"\n  ruby_version: \">= 1.9.3\"\n  prerelease: false\n  licenses:\n  - MIT\n
        \ requirements: []\n  sha: 98e4b3ca1ad88a4655863fcdae842eff76248f7e4748af8a0c250988225c188f\n-
        authors: David Heinemeier Hansson\n  built_at: '2015-08-14T00:00:00.000Z'\n
        \ created_at: '2015-08-14T15:11:51.938Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 1565\n  metadata: {}\n  number: 4.1.13.rc1\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">
        1.3.1\"\n  ruby_version: \">= 1.9.3\"\n  prerelease: true\n  licenses:\n  -
        MIT\n  requirements: []\n  sha: 496c8bdb435cebc8cf6268233ba7e0847a19a652434aadc330ee242774ebbfa9\n-
        authors: David Heinemeier Hansson\n  built_at: '2015-06-25T00:00:00.000Z'\n
        \ created_at: '2015-06-25T21:24:39.595Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 361178\n  metadata: {}\n  number: 4.1.12\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">=
        0\"\n  ruby_version: \">= 1.9.3\"\n  prerelease: false\n  licenses:\n  - MIT\n
        \ requirements: []\n  sha: 1626c36f146c04a8800866a2c06c1f5b016f9ad0797cd2b265ca2bde6aded298\n-
        authors: David Heinemeier Hansson\n  built_at: '2015-06-22T00:00:00.000Z'\n
        \ created_at: '2015-06-22T14:03:58.573Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 4552\n  metadata: {}\n  number: 4.1.12.rc1\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">
        1.3.1\"\n  ruby_version: \">= 1.9.3\"\n  prerelease: true\n  licenses:\n  -
        MIT\n  requirements: []\n  sha: 1f793d3b9afde6403c565ad1af38590e8671a71ca4e61b71b7225a02cea762a7\n-
        authors: David Heinemeier Hansson\n  built_at: '2015-06-16T00:00:00.000Z'\n
        \ created_at: '2015-06-16T17:58:48.205Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 256870\n  metadata: {}\n  number: 4.1.11\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">=
        0\"\n  ruby_version: \">= 1.9.3\"\n  prerelease: false\n  licenses:\n  - MIT\n
        \ requirements: []\n  sha: 1b60a0e6dc9b3da592303bfdac0b31bd05a00f70d97d2403e002e2fc1c82bd9e\n-
        authors: David Heinemeier Hansson\n  built_at: '2015-03-19T00:00:00.000Z'\n
        \ created_at: '2015-03-19T16:49:13.428Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 501809\n  metadata: {}\n  number: 4.1.10\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">=
        0\"\n  ruby_version: \">= 1.9.3\"\n  prerelease: false\n  licenses:\n  - MIT\n
        \ requirements: []\n  sha: b495b8490a7f3a885c8d0868858cca5070be41a5001642d2eb83a2f2e794082a\n-
        authors: David Heinemeier Hansson\n  built_at: '2015-03-12T00:00:00.000Z'\n
        \ created_at: '2015-03-12T21:31:24.387Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 4472\n  metadata: {}\n  number: 4.1.10.rc4\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">
        1.3.1\"\n  ruby_version: \">= 1.9.3\"\n  prerelease: true\n  licenses:\n  -
        MIT\n  requirements: []\n  sha: fff8f641190860b4d22b2197f186a280574c7eaba3f1e57e0289d4114a3ef54c\n-
        authors: David Heinemeier Hansson\n  built_at: '2015-03-02T00:00:00.000Z'\n
        \ created_at: '2015-03-02T21:38:35.317Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 1258\n  metadata: {}\n  number: 4.1.10.rc3\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">
        1.3.1\"\n  ruby_version: \">= 1.9.3\"\n  prerelease: true\n  licenses:\n  -
        MIT\n  requirements: []\n  sha: efc14fb6fb046314e770f39702cebae5108abfe8a2f972baf503354b4d8962f6\n-
        authors: David Heinemeier Hansson\n  built_at: '2015-02-25T00:00:00.000Z'\n
        \ created_at: '2015-02-25T22:21:12.975Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 831\n  metadata: {}\n  number: 4.1.10.rc2\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">
        1.3.1\"\n  ruby_version: \">= 1.9.3\"\n  prerelease: true\n  licenses:\n  -
        MIT\n  requirements: []\n  sha: d70b7c2ad15a4c6cbd99a9fe4aefcaf450e7bfc8958bea72ce94781a761bbb87\n-
        authors: David Heinemeier Hansson\n  built_at: '2015-02-20T00:00:00.000Z'\n
        \ created_at: '2015-02-20T22:23:46.213Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 837\n  metadata: {}\n  number: 4.1.10.rc1\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">
        1.3.1\"\n  ruby_version: \">= 1.9.3\"\n  prerelease: true\n  licenses:\n  -
        MIT\n  requirements: []\n  sha: bddad2a28e2a6409a64d6c25b0ede8ef7572ab4646313873e7d95411dcf55caf\n-
        authors: David Heinemeier Hansson\n  built_at: '2015-01-06T00:00:00.000Z'\n
        \ created_at: '2015-01-06T20:03:13.838Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 526389\n  metadata: {}\n  number: 4.1.9\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">=
        0\"\n  ruby_version: \">= 1.9.3\"\n  prerelease: false\n  licenses:\n  - MIT\n
        \ requirements: []\n  sha: 7e2e1eb32e70381d772c89e4c6cb8a426c2b93beb4aea5d429be7149d0415804\n-
        authors: David Heinemeier Hansson\n  built_at: '2015-01-02T00:00:00.000Z'\n
        \ created_at: '2015-01-02T01:10:00.082Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 1024\n  metadata: {}\n  number: 4.1.9.rc1\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">
        1.3.1\"\n  ruby_version: \">= 1.9.3\"\n  prerelease: true\n  licenses:\n  -
        MIT\n  requirements: []\n  sha: 8b653dea02c962c3a0cfd9a0f58abf505d7fc5bfa95985386e93843a98eafb48\n-
        authors: David Heinemeier Hansson\n  built_at: '2014-11-16T00:00:00.000Z'\n
        \ created_at: '2014-11-17T16:00:36.368Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 1567431\n  metadata: {}\n  number: 4.1.8\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">=
        0\"\n  ruby_version: \">= 1.9.3\"\n  prerelease: false\n  licenses:\n  - MIT\n
        \ requirements: []\n  sha: 192ddc192011bdfc9a892eda806ceb19c6515aadacfe4ca06270ce8a25315c04\n-
        authors: David Heinemeier Hansson\n  built_at: '2014-11-19T00:00:00.000Z'\n
        \ created_at: '2014-11-19T19:11:16.977Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 18569\n  metadata: {}\n  number: 4.1.7.1\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">=
        0\"\n  ruby_version: \">= 1.9.3\"\n  prerelease: false\n  licenses:\n  - MIT\n
        \ requirements: []\n  sha: 879a2a1dcced1d662a3f6c0c6836645d1ba1691dabf50dc0ae38a96e7ad01461\n-
        authors: David Heinemeier Hansson\n  built_at: '2014-10-29T00:00:00.000Z'\n
        \ created_at: '2014-10-30T18:37:14.341Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 775023\n  metadata: {}\n  number: 4.1.7\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">=
        0\"\n  ruby_version: \">= 1.9.3\"\n  prerelease: false\n  licenses:\n  - MIT\n
        \ requirements: []\n  sha: 7a0d7b9c6e68b4cd01f9d686596aaf6671b0b16395cb97862f779666ccaf238e\n-
        authors: David Heinemeier Hansson\n  built_at: '2014-09-11T00:00:00.000Z'\n
        \ created_at: '2014-09-11T17:24:56.216Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 1299738\n  metadata: {}\n  number: 4.1.6\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">=
        0\"\n  ruby_version: \">= 1.9.3\"\n  prerelease: false\n  licenses:\n  - MIT\n
        \ requirements: []\n  sha: 42b09ee39730d302c938610f24e9b4483e1f0f9379b16df77665df4eb3a13c33\n-
        authors: David Heinemeier Hansson\n  built_at: '2014-09-08T00:00:00.000Z'\n
        \ created_at: '2014-09-08T18:11:34.130Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 1834\n  metadata: {}\n  number: 4.1.6.rc2\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">
        1.3.1\"\n  ruby_version: \">= 1.9.3\"\n  prerelease: true\n  licenses:\n  -
        MIT\n  requirements: []\n  sha: c2c570c2ad25cb5526ebdc3960d60ad944e53abb2ca10fc704af117131cab861\n-
        authors: David Heinemeier Hansson\n  built_at: '2014-08-19T00:00:00.000Z'\n
        \ created_at: '2014-08-19T20:51:49.143Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 3873\n  metadata: {}\n  number: 4.1.6.rc1\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">
        1.3.1\"\n  ruby_version: \">= 1.9.3\"\n  prerelease: true\n  licenses:\n  -
        MIT\n  requirements: []\n  sha: 37a565a7803fc98c3abb278603dbad31e590f65bd6945e185fc6d7f773305ee0\n-
        authors: David Heinemeier Hansson\n  built_at: '2014-08-18T00:00:00.000Z'\n
        \ created_at: '2014-08-18T16:59:25.062Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 860910\n  metadata: {}\n  number: 4.1.5\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">=
        0\"\n  ruby_version: \">= 1.9.3\"\n  prerelease: false\n  licenses:\n  - MIT\n
        \ requirements: []\n  sha: 138c8a87c5f73d535a3f6369e909eeea9dcc3b5e102650226bc91093302aae6e\n-
        authors: David Heinemeier Hansson\n  built_at: '2014-07-02T00:00:00.000Z'\n
        \ created_at: '2014-07-02T19:52:24.718Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 1300589\n  metadata: {}\n  number: 4.1.4\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">=
        0\"\n  ruby_version: \">= 1.9.3\"\n  prerelease: false\n  licenses:\n  - MIT\n
        \ requirements: []\n  sha: 163a7a04ae21ec83a31a7dfb63387d0a8d02a771f00898aa9b03c1c493f22b3e\n-
        authors: David Heinemeier Hansson\n  built_at: '2014-07-02T00:00:00.000Z'\n
        \ created_at: '2014-07-02T17:05:23.647Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 18421\n  metadata: {}\n  number: 4.1.3\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">=
        0\"\n  ruby_version: \">= 1.9.3\"\n  prerelease: false\n  licenses:\n  - MIT\n
        \ requirements: []\n  sha: d814f768bbac7d927bbef2388d331d551650068bfcbf489ba22f2f0ab115cf2f\n-
        authors: David Heinemeier Hansson\n  built_at: '2014-06-26T00:00:00.000Z'\n
        \ created_at: '2014-06-26T14:49:04.972Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 183576\n  metadata: {}\n  number: 4.1.2\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">=
        0\"\n  ruby_version: \">= 1.9.3\"\n  prerelease: false\n  licenses:\n  - MIT\n
        \ requirements: []\n  sha: cdff24a81fbe41b476df63526e8427f4d10bd55a3ed48e3584c4a180ba7f7f2a\n-
        authors: David Heinemeier Hansson\n  built_at: '2014-06-23T00:00:00.000Z'\n
        \ created_at: '2014-06-23T17:27:24.855Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 3677\n  metadata: {}\n  number: 4.1.2.rc3\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">
        1.3.1\"\n  ruby_version: \">= 1.9.3\"\n  prerelease: true\n  licenses:\n  -
        MIT\n  requirements: []\n  sha: d8fc7f8d3220dd5735c29b56f53f194f7d7b2991deb6ebf434036814ed6e0ebc\n-
        authors: David Heinemeier Hansson\n  built_at: '2014-06-16T00:00:00.000Z'\n
        \ created_at: '2014-06-16T16:29:30.474Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 23229\n  metadata: {}\n  number: 4.1.2.rc2\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">
        1.3.1\"\n  ruby_version: \">= 1.9.3\"\n  prerelease: true\n  licenses:\n  -
        MIT\n  requirements: []\n  sha: 3240e1dc40e44c985b7f014e1c30206151c555320ef3bd7fc16eb1f5a28235c8\n-
        authors: David Heinemeier Hansson\n  built_at: '2014-05-27T00:00:00.000Z'\n
        \ created_at: '2014-05-27T16:11:31.385Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 14365\n  metadata: {}\n  number: 4.1.2.rc1\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">
        1.3.1\"\n  ruby_version: \">= 1.9.3\"\n  prerelease: true\n  licenses:\n  -
        MIT\n  requirements: []\n  sha: 0b62445490e4785ba617581b4fef8df114de2bafc8b56179b063700b7391cf16\n-
        authors: David Heinemeier Hansson\n  built_at: '2014-05-06T00:00:00.000Z'\n
        \ created_at: '2014-05-06T16:10:07.253Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 1334183\n  metadata: {}\n  number: 4.1.1\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">=
        0\"\n  ruby_version: \">= 1.9.3\"\n  prerelease: false\n  licenses:\n  - MIT\n
        \ requirements: []\n  sha: 7342801d69c8ca68c9005cafbc4a8f67069d3b51c0a4f5e2bbd061dcb26bba85\n-
        authors: David Heinemeier Hansson\n  built_at: '2014-04-08T00:00:00.000Z'\n
        \ created_at: '2014-04-08T19:19:52.152Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 692291\n  metadata: {}\n  number: 4.1.0\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">=
        0\"\n  ruby_version: \">= 1.9.3\"\n  prerelease: false\n  licenses:\n  - MIT\n
        \ requirements: []\n  sha: a8038ce9c4e96dc21c09b7ba300a9a64af71194882936e78b7ce3eb3cd6ee946\n-
        authors: David Heinemeier Hansson\n  built_at: '2014-03-25T00:00:00.000Z'\n
        \ created_at: '2014-03-25T20:11:13.966Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 25810\n  metadata: {}\n  number: 4.1.0.rc2\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">
        1.3.1\"\n  ruby_version: \">= 1.9.3\"\n  prerelease: true\n  licenses:\n  -
        MIT\n  requirements: []\n  sha: 19f883f1aa81dba3b09f788fdbb819f13a29086a472924793fa04cfb025da469\n-
        authors: David Heinemeier Hansson\n  built_at: '2014-02-18T00:00:00.000Z'\n
        \ created_at: '2014-02-18T20:57:21.322Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 44262\n  metadata: {}\n  number: 4.1.0.rc1\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">
        1.3.1\"\n  ruby_version: \n  prerelease: true\n  licenses:\n  - MIT\n  requirements:
        []\n  sha: b4e11ff40aa347ffa49a620e88be30e39e0803d8489526a3409ebdad20b7284e\n-
        authors: David Heinemeier Hansson\n  built_at: '2014-02-18T00:00:00.000Z'\n
        \ created_at: '2014-02-18T18:46:12.075Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 2920\n  metadata: {}\n  number: 4.1.0.beta2\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">
        1.3.1\"\n  ruby_version: \n  prerelease: true\n  licenses:\n  - MIT\n  requirements:
        []\n  sha: 24b7803bc9c43e68920937cfe2f8d17325b7bf787d9be7c617b8a541b59b24ae\n-
        authors: David Heinemeier Hansson\n  built_at: '2013-12-18T00:00:00.000Z'\n
        \ created_at: '2013-12-18T00:14:22.802Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 42378\n  metadata: {}\n  number: 4.1.0.beta1\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">
        1.3.1\"\n  ruby_version: \n  prerelease: true\n  licenses:\n  - MIT\n  requirements:
        []\n  sha: 362a5b362364bd228d9417d688956734f2cddecef01aab1c86f9e77e871e57a5\n-
        authors: David Heinemeier Hansson\n  built_at: '2015-01-06T00:00:00.000Z'\n
        \ created_at: '2015-01-06T20:07:53.266Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 1020210\n  metadata: {}\n  number: 4.0.13\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">=
        0\"\n  ruby_version: \">= 1.9.3\"\n  prerelease: false\n  licenses:\n  - MIT\n
        \ requirements: []\n  sha: 0fcd111ced80b99339371a869dd187996349ab8ab5dfc08ee63730bdf66276d8\n-
        authors: David Heinemeier Hansson\n  built_at: '2015-01-02T00:00:00.000Z'\n
        \ created_at: '2015-01-02T00:53:40.842Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 956\n  metadata: {}\n  number: 4.0.13.rc1\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">
        1.3.1\"\n  ruby_version: \">= 1.9.3\"\n  prerelease: true\n  licenses:\n  -
        MIT\n  requirements: []\n  sha: 3029347a24f13a1b3e2fb90d2cb27ec7be31cd856e4b0c3634361f46db3efb05\n-
        authors: David Heinemeier Hansson\n  built_at: '2014-11-16T00:00:00.000Z'\n
        \ created_at: '2014-11-17T16:00:26.121Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 247114\n  metadata: {}\n  number: 4.0.12\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">=
        0\"\n  ruby_version: \">= 1.9.3\"\n  prerelease: false\n  licenses:\n  - MIT\n
        \ requirements: []\n  sha: 9eea3fcb65220f46053d007f8326239a991bb98586756f7ed586a3346adb676a\n-
        authors: David Heinemeier Hansson\n  built_at: '2014-11-19T00:00:00.000Z'\n
        \ created_at: '2014-11-19T19:08:47.273Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 14249\n  metadata: {}\n  number: 4.0.11.1\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">=
        0\"\n  ruby_version: \">= 1.9.3\"\n  prerelease: false\n  licenses:\n  - MIT\n
        \ requirements: []\n  sha: bb22f6354dc9c243df7b967fb9d3d501a10aaa90be6882b06a4dc0096a4c4c66\n-
        authors: David Heinemeier Hansson\n  built_at: '2014-10-29T00:00:00.000Z'\n
        \ created_at: '2014-10-30T18:37:08.005Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 64594\n  metadata: {}\n  number: 4.0.11\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">=
        0\"\n  ruby_version: \">= 1.9.3\"\n  prerelease: false\n  licenses:\n  - MIT\n
        \ requirements: []\n  sha: 91ad524fd3d87e5bc6b1da6d762a8dd7ab63bdeb999cb0960fb16be48b7a0373\n-
        authors: David Heinemeier Hansson\n  built_at: '2014-09-11T00:00:00.000Z'\n
        \ created_at: '2014-09-11T17:32:23.083Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 106552\n  metadata: {}\n  number: 4.0.10\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">=
        0\"\n  ruby_version: \">= 1.9.3\"\n  prerelease: false\n  licenses:\n  - MIT\n
        \ requirements: []\n  sha: edbc38cea3937f937e26cbae14f5e0b55e45388c6aa5a1b2bfc9b84ebf27a221\n-
        authors: David Heinemeier Hansson\n  built_at: '2014-09-08T00:00:00.000Z'\n
        \ created_at: '2014-09-08T17:54:44.960Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 1146\n  metadata: {}\n  number: 4.0.10.rc2\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">
        1.3.1\"\n  ruby_version: \">= 1.9.3\"\n  prerelease: true\n  licenses:\n  -
        MIT\n  requirements: []\n  sha: 01b2667a0a5141f3ac0bc483dfe2c37cca360acbec9559028ac2ff47e7cbdba0\n-
        authors: David Heinemeier Hansson\n  built_at: '2014-08-19T00:00:00.000Z'\n
        \ created_at: '2014-08-19T20:47:42.402Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 1841\n  metadata: {}\n  number: 4.0.10.rc1\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">
        1.3.1\"\n  ruby_version: \">= 1.9.3\"\n  prerelease: true\n  licenses:\n  -
        MIT\n  requirements: []\n  sha: 08c3c62e54202e76a7c7d669fee2cbe783b802a6ab1887d1699dbe50a80e9c30\n-
        authors: David Heinemeier Hansson\n  built_at: '2014-08-18T00:00:00.000Z'\n
        \ created_at: '2014-08-18T17:01:52.749Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 113722\n  metadata: {}\n  number: 4.0.9\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">=
        0\"\n  ruby_version: \">= 1.9.3\"\n  prerelease: false\n  licenses:\n  - MIT\n
        \ requirements: []\n  sha: 5fcb32d8e5851a61ff6ccdcf7160de0c167f5f80093ecbd73eae13e731629d4f\n-
        authors: David Heinemeier Hansson\n  built_at: '2014-07-02T00:00:00.000Z'\n
        \ created_at: '2014-07-02T19:41:31.654Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 207382\n  metadata: {}\n  number: 4.0.8\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">=
        0\"\n  ruby_version: \">= 1.9.3\"\n  prerelease: false\n  licenses:\n  - MIT\n
        \ requirements: []\n  sha: 6a2da31335d23218219d000ff0d136c80534a479f526e99df73471fefdc83d6f\n-
        authors: David Heinemeier Hansson\n  built_at: '2014-07-02T00:00:00.000Z'\n
        \ created_at: '2014-07-02T17:03:30.462Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 9643\n  metadata: {}\n  number: 4.0.7\n  summary:
        A toolkit of support libraries and Ruby core extensions extracted from\n    the
        Rails framework.\n  platform: ruby\n  rubygems_version: \">= 0\"\n  ruby_version:
        \">= 1.9.3\"\n  prerelease: false\n  licenses:\n  - MIT\n  requirements: []\n
        \ sha: 2c9b0524bc8b27a825779443b74807fb235e08bd9bb857bbeea76c20cef6b96c\n-
        authors: David Heinemeier Hansson\n  built_at: '2014-06-26T00:00:00.000Z'\n
        \ created_at: '2014-06-26T15:03:56.061Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 25637\n  metadata: {}\n  number: 4.0.6\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">=
        0\"\n  ruby_version: \">= 1.9.3\"\n  prerelease: false\n  licenses:\n  - MIT\n
        \ requirements: []\n  sha: 5db1aa1df0754e0fe066cc0d981da3e69afd4192e831e0700cf82cfedc15e500\n-
        authors: David Heinemeier Hansson\n  built_at: '2014-06-23T00:00:00.000Z'\n
        \ created_at: '2014-06-23T17:23:30.546Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 1138\n  metadata: {}\n  number: 4.0.6.rc3\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">
        1.3.1\"\n  ruby_version: \">= 1.9.3\"\n  prerelease: true\n  licenses:\n  -
        MIT\n  requirements: []\n  sha: b7074ed3f5b85b80324eefd9a97756a5556d1cbd4a9018b41999a3f81fad7e2c\n-
        authors: David Heinemeier Hansson\n  built_at: '2014-06-16T00:00:00.000Z'\n
        \ created_at: '2014-06-16T16:14:53.479Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 1075\n  metadata: {}\n  number: 4.0.6.rc2\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">
        1.3.1\"\n  ruby_version: \">= 1.9.3\"\n  prerelease: true\n  licenses:\n  -
        MIT\n  requirements: []\n  sha: 5bfdef264a806166bfe48b41a630624dc1fc19f7fa62543c315d466cf5ab2775\n-
        authors: David Heinemeier Hansson\n  built_at: '2014-05-27T00:00:00.000Z'\n
        \ created_at: '2014-05-27T16:05:40.215Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 2969\n  metadata: {}\n  number: 4.0.6.rc1\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">
        1.3.1\"\n  ruby_version: \">= 1.9.3\"\n  prerelease: true\n  licenses:\n  -
        MIT\n  requirements: []\n  sha: f54269e105f73cad2b7aa19dcd5728f3140e14883f1dc6c9aa3171b4255f26a5\n-
        authors: David Heinemeier Hansson\n  built_at: '2014-05-06T00:00:00.000Z'\n
        \ created_at: '2014-05-06T16:12:08.953Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 442357\n  metadata: {}\n  number: 4.0.5\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">=
        0\"\n  ruby_version: \">= 1.9.3\"\n  prerelease: false\n  licenses:\n  - MIT\n
        \ requirements: []\n  sha: bbb9f087ff28795a710b71ce3123a027fd035cf4b0c56467464a97adfe0dbcae\n-
        authors: David Heinemeier Hansson\n  built_at: '2014-03-14T00:00:00.000Z'\n
        \ created_at: '2014-03-14T17:36:08.491Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 780041\n  metadata: {}\n  number: 4.0.4\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">=
        0\"\n  ruby_version: \n  prerelease: false\n  licenses:\n  - MIT\n  requirements:
        []\n  sha: e4c8b12591e7d2b506a8bb12ad4a4b9f842b10284ca0d0fef4adfb097a8f6457\n-
        authors: David Heinemeier Hansson\n  built_at: '2014-03-11T00:00:00.000Z'\n
        \ created_at: '2014-03-11T17:30:09.461Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 2307\n  metadata: {}\n  number: 4.0.4.rc1\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">
        1.3.1\"\n  ruby_version: \n  prerelease: true\n  licenses:\n  - MIT\n  requirements:
        []\n  sha: f82117b51d762e72aa449c680c6d7d220727c1ff5ad26d885e427ea2d42f7986\n-
        authors: David Heinemeier Hansson\n  built_at: '2014-02-18T00:00:00.000Z'\n
        \ created_at: '2014-02-18T18:48:25.956Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 782351\n  metadata: {}\n  number: 4.0.3\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">=
        0\"\n  ruby_version: \n  prerelease: false\n  licenses:\n  - MIT\n  requirements:
        []\n  sha: 48b48e8ef52f65d9833a77d0a87063c4d7193fde63044eb90eec29ac2d729764\n-
        authors: David Heinemeier Hansson\n  built_at: '2013-12-03T00:00:00.000Z'\n
        \ created_at: '2013-12-03T19:01:13.855Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 1456950\n  metadata: {}\n  number: 4.0.2\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">=
        0\"\n  ruby_version: \n  prerelease: false\n  licenses:\n  - MIT\n  requirements:
        []\n  sha: 79909b41c560cbca4ba71e3d5a85c5e53e383592e55fa79fae74890328e81eda\n-
        authors: David Heinemeier Hansson\n  built_at: '2013-11-01T00:00:00.000Z'\n
        \ created_at: '2013-11-01T19:07:06.550Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 621242\n  metadata: {}\n  number: 4.0.1\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">=
        0\"\n  ruby_version: \n  prerelease: false\n  licenses:\n  - MIT\n  requirements:
        []\n  sha: e912af69fdadf66cdfbe198ba253471593e4d88e6e874756d5418eab2c178539\n-
        authors: David Heinemeier Hansson\n  built_at: '2013-10-30T00:00:00.000Z'\n
        \ created_at: '2013-10-30T20:49:05.979Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 2148\n  metadata: {}\n  number: 4.0.1.rc4\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">
        1.3.1\"\n  ruby_version: \n  prerelease: true\n  licenses:\n  - MIT\n  requirements:
        []\n  sha: 162545ed45cb9bfa669489e4c9f6e8668298d66bcbe04277dbccffaa924b8f93\n-
        authors: David Heinemeier Hansson\n  built_at: '2013-10-23T00:00:00.000Z'\n
        \ created_at: '2013-10-23T21:40:57.271Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 3532\n  metadata: {}\n  number: 4.0.1.rc3\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">
        1.3.1\"\n  ruby_version: \n  prerelease: true\n  licenses:\n  - MIT\n  requirements:
        []\n  sha: b6052b062923ab3bbc0f916087c6d4deeca0f85164639d7773ddc7f27985e64a\n-
        authors: David Heinemeier Hansson\n  built_at: '2013-10-21T00:00:00.000Z'\n
        \ created_at: '2013-10-21T21:56:02.663Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 2360\n  metadata: {}\n  number: 4.0.1.rc2\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">
        1.3.1\"\n  ruby_version: \n  prerelease: true\n  licenses:\n  - MIT\n  requirements:
        []\n  sha: bbac4bd5bee9040f079ce9fc5f0dbf6441b6c2e5e165ba1d3840a324c25b1565\n-
        authors: David Heinemeier Hansson\n  built_at: '2013-10-17T00:00:00.000Z'\n
        \ created_at: '2013-10-17T16:46:09.922Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 3517\n  metadata: {}\n  number: 4.0.1.rc1\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">
        1.3.1\"\n  ruby_version: \n  prerelease: true\n  licenses:\n  - MIT\n  requirements:
        []\n  sha: fd0472a49d43bbc0d82930f896ea0082b9438893773f1f24e42d720e33521f50\n-
        authors: David Heinemeier Hansson\n  built_at: '2013-06-25T00:00:00.000Z'\n
        \ created_at: '2013-06-25T14:31:23.132Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 3062961\n  metadata: {}\n  number: 4.0.0\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">=
        0\"\n  ruby_version: \n  prerelease: false\n  licenses:\n  - MIT\n  requirements:
        \n  sha: bac5915af0e0bb115f36443f0a378431584dbc958f51506f4ed96c08e59efd29\n-
        authors: David Heinemeier Hansson\n  built_at: '2013-06-11T00:00:00.000Z'\n
        \ created_at: '2013-06-11T20:24:21.771Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 66916\n  metadata: {}\n  number: 4.0.0.rc2\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">
        1.3.1\"\n  ruby_version: \n  prerelease: true\n  licenses:\n  - MIT\n  requirements:
        \n  sha: b7176293ef4b7bbb4822e977028615811511b55175a52f35d13c4937eac462e3\n-
        authors: David Heinemeier Hansson\n  built_at: '2013-04-29T00:00:00.000Z'\n
        \ created_at: '2013-04-29T15:38:27.737Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 108542\n  metadata: {}\n  number: 4.0.0.rc1\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">
        1.3.1\"\n  ruby_version: \n  prerelease: true\n  licenses:\n  - MIT\n  requirements:
        \n  sha: c440c04baef0083d2c3befe16c9d7468cf0c70287aa0992fa5318339491ff8a9\n-
        authors: David Heinemeier Hansson\n  built_at: '2013-02-26T00:00:00.000Z'\n
        \ created_at: '2013-02-26T00:04:59.274Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 79280\n  metadata: {}\n  number: 4.0.0.beta1\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">
        1.3.1\"\n  ruby_version: \n  prerelease: true\n  licenses:\n  - MIT\n  requirements:
        \n  sha: db81e6a3541510d730b9df5c3e4cb054eb8dfe4a8fdcaa3d160ecc4f598e9ac2\n-
        authors: David Heinemeier Hansson\n  built_at: '2016-09-14T00:00:00.000Z'\n
        \ created_at: '2016-09-14T21:18:51.526Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 256501\n  metadata: {}\n  number: 3.2.22.5\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">=
        0\"\n  ruby_version: \">= 1.8.7\"\n  prerelease: false\n  licenses:\n  - MIT\n
        \ requirements: []\n  sha: 39310c2a67c9db06bc7b0b5c32e5b1f644c517b81fb3353f25fd12cde7c4dd3b\n-
        authors: David Heinemeier Hansson\n  built_at: '2016-08-11T00:00:00.000Z'\n
        \ created_at: '2016-08-11T19:20:34.001Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 213975\n  metadata: {}\n  number: 3.2.22.4\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">=
        0\"\n  ruby_version: \">= 1.8.7\"\n  prerelease: false\n  licenses:\n  - MIT\n
        \ requirements: []\n  sha: 1387dfde385c4375e0f8a9f3f5a2ddab3a46c15520ac18d4042897c66233cf07\n-
        authors: David Heinemeier Hansson\n  built_at: '2016-08-10T00:00:00.000Z'\n
        \ created_at: '2016-08-11T17:34:24.351Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 22499\n  metadata: {}\n  number: 3.2.22.3\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">=
        0\"\n  ruby_version: \">= 1.8.7\"\n  prerelease: false\n  licenses:\n  - MIT\n
        \ requirements: []\n  sha: 8be5ee28ccf0947c1971be22a5187b592e8b2e547b07990754c36da1e4bd02dc\n-
        authors: David Heinemeier Hansson\n  built_at: '2016-02-29T00:00:00.000Z'\n
        \ created_at: '2016-02-29T19:22:07.300Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 923102\n  metadata: {}\n  number: 3.2.22.2\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">=
        0\"\n  ruby_version: \">= 1.8.7\"\n  prerelease: false\n  licenses:\n  - MIT\n
        \ requirements: []\n  sha: 8b05e387fec6710146c7774ec6ae0f36535c00498d45cc99f42c80224056d735\n-
        authors: David Heinemeier Hansson\n  built_at: '2016-01-25T00:00:00.000Z'\n
        \ created_at: '2016-01-25T19:25:38.620Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 366588\n  metadata: {}\n  number: 3.2.22.1\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">=
        0\"\n  ruby_version: \">= 1.8.7\"\n  prerelease: false\n  licenses:\n  - MIT\n
        \ requirements: []\n  sha: 68944a9409cd991444f87d63e4deb5417c3a43001f072e6096a3bc4a27020e6e\n-
        authors: David Heinemeier Hansson\n  built_at: '2015-06-16T00:00:00.000Z'\n
        \ created_at: '2015-06-16T18:05:18.203Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 1344727\n  metadata: {}\n  number: 3.2.22\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">=
        0\"\n  ruby_version: \">= 1.8.7\"\n  prerelease: false\n  licenses:\n  - MIT\n
        \ requirements: []\n  sha: b2c2a9f038ea1b05fd755bf2b81c70b4e9d188a233570cd51047d6dd9ee947e7\n-
        authors: David Heinemeier Hansson\n  built_at: '2014-11-16T00:00:00.000Z'\n
        \ created_at: '2014-11-17T16:00:16.710Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 1618309\n  metadata: {}\n  number: 3.2.21\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">=
        0\"\n  ruby_version: \">= 1.8.7\"\n  prerelease: false\n  licenses:\n  - MIT\n
        \ requirements: []\n  sha: 31602f2e9353434b3a9cd9e59b33048738b2096bfd35c1f02ba35673a45e5440\n-
        authors: David Heinemeier Hansson\n  built_at: '2014-10-29T00:00:00.000Z'\n
        \ created_at: '2014-10-30T18:37:01.493Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 273172\n  metadata: {}\n  number: 3.2.20\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">=
        0\"\n  ruby_version: \">= 1.8.7\"\n  prerelease: false\n  licenses:\n  - MIT\n
        \ requirements: []\n  sha: 9e938d07e3137be72e1dcbfde7f57e1e9ccf599697837b959f030049d72eb92e\n-
        authors: David Heinemeier Hansson\n  built_at: '2014-07-02T03:00:00.000Z'\n
        \ created_at: '2014-07-02T17:01:44.858Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 1546662\n  metadata: {}\n  number: 3.2.19\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">=
        0\"\n  ruby_version: \">= 1.8.7\"\n  prerelease: false\n  licenses:\n  - MIT\n
        \ requirements: []\n  sha: 2c837a59250da14b12a6b0cfb6774f0afae90aa749fd96ad4347344d8417ad3d\n-
        authors: David Heinemeier Hansson\n  built_at: '2014-05-06T00:00:00.000Z'\n
        \ created_at: '2014-05-06T16:15:22.611Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 1435624\n  metadata: {}\n  number: 3.2.18\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">=
        0\"\n  ruby_version: \">= 1.8.7\"\n  prerelease: false\n  licenses:\n  - MIT\n
        \ requirements: []\n  sha: 1123a68404905d118ae5c1cdfd669b28e03a5693b769a3613a974cef5d2e3f4d\n-
        authors: David Heinemeier Hansson\n  built_at: '2014-02-18T03:00:00.000Z'\n
        \ created_at: '2014-02-18T18:54:41.035Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 1875409\n  metadata: {}\n  number: 3.2.17\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">=
        0\"\n  ruby_version: \n  prerelease: false\n  licenses:\n  - MIT\n  requirements:
        []\n  sha: e0cc4b452f8cd1350f16017965ebcfe5010a2a699a34d5e8485d214905766b87\n-
        authors: David Heinemeier Hansson\n  built_at: '2013-12-03T00:00:00.000Z'\n
        \ created_at: '2013-12-03T19:01:08.291Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 1308858\n  metadata: {}\n  number: 3.2.16\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">=
        0\"\n  ruby_version: \n  prerelease: false\n  licenses:\n  - MIT\n  requirements:
        []\n  sha: c9f447d9c5ebb9caee05bc063daeeb6f3cc8307e9dcbf66c3006877def994d94\n-
        authors: David Heinemeier Hansson\n  built_at: '2013-10-16T00:00:00.000Z'\n
        \ created_at: '2013-10-16T17:23:05.154Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 667695\n  metadata: {}\n  number: 3.2.15\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">=
        0\"\n  ruby_version: \n  prerelease: false\n  licenses:\n  - MIT\n  requirements:
        []\n  sha: 54a1981d918cb35f7d8f8f432b447c71a1685851ca50d2388c94001cd5064e7b\n-
        authors: David Heinemeier Hansson\n  built_at: '2013-10-11T00:00:00.000Z'\n
        \ created_at: '2013-10-11T21:17:12.916Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 2060\n  metadata: {}\n  number: 3.2.15.rc3\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">
        1.3.1\"\n  ruby_version: \n  prerelease: true\n  licenses:\n  - MIT\n  requirements:
        []\n  sha: e0b7a15a7599e24e5a9386907e68c5120edd90b600fe257eb1ab05915990af74\n-
        authors: David Heinemeier Hansson\n  built_at: '2013-10-04T00:00:00.000Z'\n
        \ created_at: '2013-10-04T20:48:40.579Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 1310\n  metadata: {}\n  number: 3.2.15.rc2\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">
        1.3.1\"\n  ruby_version: \n  prerelease: true\n  licenses:\n  - MIT\n  requirements:
        []\n  sha: abc4b9ad687154d82c7c87fd40a126f36920ffb0e87b6b6021002081dde879ff\n-
        authors: David Heinemeier Hansson\n  built_at: '2013-10-03T00:00:00.000Z'\n
        \ created_at: '2013-10-03T18:54:03.865Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 934\n  metadata: {}\n  number: 3.2.15.rc1\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">
        1.3.1\"\n  ruby_version: \n  prerelease: true\n  licenses:\n  - MIT\n  requirements:
        []\n  sha: bb23c7a551f3794863147dcaf64455140ccd149c9dd82ea04146fbd9ff58e9a4\n-
        authors: David Heinemeier Hansson\n  built_at: '2013-07-22T03:00:00.000Z'\n
        \ created_at: '2013-07-22T16:44:40.394Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 1303485\n  metadata: {}\n  number: 3.2.14\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">=
        0\"\n  ruby_version: \n  prerelease: false\n  licenses:\n  - MIT\n  requirements:
        []\n  sha: 4fa214290ce320e7b63c88a0e7f384bc773e3067bed8095683cd401628868891\n-
        authors: David Heinemeier Hansson\n  built_at: '2013-07-16T03:00:00.000Z'\n
        \ created_at: '2013-07-16T16:13:22.693Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 2377\n  metadata: {}\n  number: 3.2.14.rc2\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">
        1.3.1\"\n  ruby_version: \n  prerelease: true\n  licenses:\n  - MIT\n  requirements:
        \n  sha: 7e7fdd80ff539e6251d48f0cb7ccf1799ff29305fb8d99886f246d461c743611\n-
        authors: David Heinemeier Hansson\n  built_at: '2013-07-12T03:00:00.000Z'\n
        \ created_at: '2013-07-13T00:25:31.012Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 1171\n  metadata: {}\n  number: 3.2.14.rc1\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">
        1.3.1\"\n  ruby_version: \n  prerelease: true\n  licenses:\n  - MIT\n  requirements:
        \n  sha: ed760e9b9e2a9c700a268abfc4224a8d7840894765a13fdaf831fa9831fb5418\n-
        authors: David Heinemeier Hansson\n  built_at: '2013-03-18T00:00:00.000Z'\n
        \ created_at: '2013-03-18T17:13:20.119Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 6255524\n  metadata: {}\n  number: 3.2.13\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">=
        0\"\n  ruby_version: \n  prerelease: false\n  licenses: []\n  requirements:
        \n  sha: 1e39ca69876634a38e344dd079d92b3ab27e1bde0b979b04d0e3252591a451ed\n-
        authors: David Heinemeier Hansson\n  built_at: '2013-03-06T00:00:00.000Z'\n
        \ created_at: '2013-03-06T23:06:14.412Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 5211\n  metadata: {}\n  number: 3.2.13.rc2\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">
        1.3.1\"\n  ruby_version: \n  prerelease: true\n  licenses: []\n  requirements:
        \n  sha: 7f9abf0af5544309bad33c85f6e1780d845191b5a331413383c2273b4754ad4d\n-
        authors: David Heinemeier Hansson\n  built_at: '2013-02-27T00:00:00.000Z'\n
        \ created_at: '2013-02-27T20:25:31.222Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 7281\n  metadata: {}\n  number: 3.2.13.rc1\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">
        1.3.1\"\n  ruby_version: \n  prerelease: true\n  licenses: []\n  requirements:
        \n  sha: 066c0f57ec0972df468c6bcf30aa5edf29a7b452227603a606624e75bd925073\n-
        authors: David Heinemeier Hansson\n  built_at: '2013-02-11T00:00:00.000Z'\n
        \ created_at: '2013-02-11T18:17:26.263Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 2372099\n  metadata: {}\n  number: 3.2.12\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">=
        0\"\n  ruby_version: \n  prerelease: false\n  licenses: []\n  requirements:
        \n  sha: 4f53fa55e0aeb00f40c677c29e23da23bea2104edf160bbdf3af38d9f39d38be\n-
        authors: David Heinemeier Hansson\n  built_at: '2013-01-08T00:00:00.000Z'\n
        \ created_at: '2013-01-08T20:08:24.411Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 1881364\n  metadata: {}\n  number: 3.2.11\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">=
        0\"\n  ruby_version: \n  prerelease: false\n  licenses: []\n  requirements:
        \n  sha: 3ae175b724405597b3055cab020a52d3e8c2877734bfee10aa0ea210f82ed1b7\n-
        authors: David Heinemeier Hansson\n  built_at: '2012-12-23T00:00:00.000Z'\n
        \ created_at: '2013-01-02T21:19:47.582Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 279687\n  metadata: {}\n  number: 3.2.10\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">=
        0\"\n  ruby_version: \n  prerelease: false\n  licenses: []\n  requirements:
        \n  sha: 94125fc1083012f751e62d94980ecead458d98a09a4538919bf773629749656e\n-
        authors: David Heinemeier Hansson\n  built_at: '2012-11-12T00:00:00.000Z'\n
        \ created_at: '2012-11-12T15:21:25.780Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 1309269\n  metadata: {}\n  number: 3.2.9\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">=
        0\"\n  ruby_version: \n  prerelease: false\n  licenses: \n  requirements:
        \n  sha: b16fcf684865def24aff6f3d49b59a3ce4ff8369488e9f35468af2cdee336291\n-
        authors: David Heinemeier Hansson\n  built_at: '2012-11-09T00:00:00.000Z'\n
        \ created_at: '2012-11-09T18:00:37.143Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 5102\n  metadata: {}\n  number: 3.2.9.rc3\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">
        1.3.1\"\n  ruby_version: \n  prerelease: true\n  licenses: \n  requirements:
        \n  sha: 01963c623a4295ab87601b5fec6f75e69394b311637aebc49e03fafbb0253554\n-
        authors: David Heinemeier Hansson\n  built_at: '2012-11-01T00:00:00.000Z'\n
        \ created_at: '2012-11-01T17:39:33.248Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 3634\n  metadata: {}\n  number: 3.2.9.rc2\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">
        1.3.1\"\n  ruby_version: \n  prerelease: true\n  licenses: \n  requirements:
        \n  sha: 34f1979092d7103ce520480cf151fb2ea99af876ed704f5b561b039210cb30d1\n-
        authors: David Heinemeier Hansson\n  built_at: '2012-10-29T00:00:00.000Z'\n
        \ created_at: '2012-10-29T17:07:02.323Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 2096\n  metadata: {}\n  number: 3.2.9.rc1\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">
        1.3.1\"\n  ruby_version: \n  prerelease: true\n  licenses: \n  requirements:
        \n  sha: f53a1db3ae1e42113e766cb34ca3bb2fd124556a5fc72f34f567b8f8362389b7\n-
        authors: David Heinemeier Hansson\n  built_at: '2012-08-09T00:00:00.000Z'\n
        \ created_at: '2012-08-09T21:23:24.281Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 2095908\n  metadata: {}\n  number: 3.2.8\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">=
        0\"\n  ruby_version: \n  prerelease: false\n  licenses: \n  requirements:
        \n  sha: 708b2067c4a50a1118fcae61e008741fcd37d0d9faadab433f8760ee67524aef\n-
        authors: David Heinemeier Hansson\n  built_at: '2012-08-03T00:00:00.000Z'\n
        \ created_at: '2012-08-03T14:28:55.715Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 6039\n  metadata: {}\n  number: 3.2.8.rc2\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">
        1.3.1\"\n  ruby_version: \n  prerelease: true\n  licenses: \n  requirements:
        \n  sha: 54ef07ffab79136850da3959b5123834718a60e702145a73b900e033f0ff00c1\n-
        authors: David Heinemeier Hansson\n  built_at: '2012-08-01T00:00:00.000Z'\n
        \ created_at: '2012-08-01T20:57:40.795Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 1853\n  metadata: {}\n  number: 3.2.8.rc1\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">
        1.3.1\"\n  ruby_version: \n  prerelease: true\n  licenses: \n  requirements:
        \n  sha: f6a97af95f20cd0bf4bf546492f7a246f3cc0730ec24f0dca5bf01d002d1daee\n-
        authors: David Heinemeier Hansson\n  built_at: '2012-07-26T00:00:00.000Z'\n
        \ created_at: '2012-07-26T22:08:45.946Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 414813\n  metadata: {}\n  number: 3.2.7\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">=
        0\"\n  ruby_version: \n  prerelease: false\n  licenses: \n  requirements:
        \n  sha: 57ead42bd8d4405d2f180436a47059f13f586f7034a25d03614735d151f7ad67\n-
        authors: David Heinemeier Hansson\n  built_at: '2012-07-23T00:00:00.000Z'\n
        \ created_at: '2012-07-23T21:45:47.908Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 2306\n  metadata: {}\n  number: 3.2.7.rc1\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">
        1.3.1\"\n  ruby_version: \n  prerelease: true\n  licenses: \n  requirements:
        \n  sha: c2e142aad253478bae5ae5abaca56b9059548227d83941999823a835287aae14\n-
        authors: David Heinemeier Hansson\n  built_at: '2012-06-12T00:00:00.000Z'\n
        \ created_at: '2012-06-12T21:26:03.190Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 1047771\n  metadata: {}\n  number: 3.2.6\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">=
        0\"\n  ruby_version: \n  prerelease: false\n  licenses: \n  requirements:
        \n  sha: 429e8ab817a7c1b449bc4cc21fe5903f66d4afefafcaf9da8c2ece7b588f5402\n-
        authors: David Heinemeier Hansson\n  built_at: '2012-06-01T00:00:00.000Z'\n
        \ created_at: '2012-06-01T03:39:00.001Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 246688\n  metadata: {}\n  number: 3.2.5\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">=
        0\"\n  ruby_version: \n  prerelease: false\n  licenses: \n  requirements:
        \n  sha: 50ef84ea1cf0ebc8cffc6a044754d709f01c4f1d925ed08045fbc286776da3ec\n-
        authors: David Heinemeier Hansson\n  built_at: '2012-05-31T00:00:00.000Z'\n
        \ created_at: '2012-05-31T18:24:53.478Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 16206\n  metadata: {}\n  number: 3.2.4\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">=
        0\"\n  ruby_version: \n  prerelease: false\n  licenses: \n  requirements:
        \n  sha: 02a6d6435b0f06a718a3ee4b65731a1e9f370055cb45f902e17d512542c9af59\n-
        authors: David Heinemeier Hansson\n  built_at: '2012-05-28T00:00:00.000Z'\n
        \ created_at: '2012-05-28T19:01:43.457Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 4708\n  metadata: {}\n  number: 3.2.4.rc1\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">
        1.3.1\"\n  ruby_version: \n  prerelease: true\n  licenses: \n  requirements:
        \n  sha: 89eea1d5802150913e302391337df276ce442b2ac53e95683b51483a35231b82\n-
        authors: David Heinemeier Hansson\n  built_at: '2012-03-30T03:00:00.000Z'\n
        \ created_at: '2012-03-30T22:26:17.675Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 1039795\n  metadata: {}\n  number: 3.2.3\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">=
        0\"\n  ruby_version: \n  prerelease: false\n  licenses: \n  requirements:
        \n  sha: 8fc01d8b63f4d277b3b640d295acacdc47bb16993ff722e59db4473b5937c514\n-
        authors: David Heinemeier Hansson\n  built_at: '2012-03-29T03:00:00.000Z'\n
        \ created_at: '2012-03-29T16:14:11.129Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 5126\n  metadata: {}\n  number: 3.2.3.rc2\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">
        1.3.1\"\n  ruby_version: \n  prerelease: true\n  licenses: \n  requirements:
        \n  sha: 6faeed80922c44c285741bb6449e8f17f3b61683127b1a556914828e82d5a531\n-
        authors: David Heinemeier Hansson\n  built_at: '2012-03-27T03:00:00.000Z'\n
        \ created_at: '2012-03-27T17:11:20.128Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 2119\n  metadata: {}\n  number: 3.2.3.rc1\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">
        1.3.1\"\n  ruby_version: \n  prerelease: true\n  licenses: \n  requirements:
        \n  sha: 6d4d50a0ce8abcce306e4bf2cd08e455cc2117d8fe1c9c7f4d2537ce98868478\n-
        authors: David Heinemeier Hansson\n  built_at: '2012-03-01T00:00:00.000Z'\n
        \ created_at: '2012-03-01T17:52:09.234Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 541996\n  metadata: {}\n  number: 3.2.2\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">=
        0\"\n  ruby_version: \n  prerelease: false\n  licenses: \n  requirements:
        \n  sha: b0ab18b139678a0fa9c1d2eee0c0a7a84304646dd0bb578396b8ec2c9afcf934\n-
        authors: David Heinemeier Hansson\n  built_at: '2012-02-22T00:00:00.000Z'\n
        \ created_at: '2012-02-22T21:39:12.920Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 7443\n  metadata: {}\n  number: 3.2.2.rc1\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">
        1.3.1\"\n  ruby_version: \n  prerelease: true\n  licenses: \n  requirements:
        \n  sha: d325826b453190447c922ad4b13085aa37c6717986d40456815b82ab8f1315dd\n-
        authors: David Heinemeier Hansson\n  built_at: '2012-01-26T08:00:00.000Z'\n
        \ created_at: '2012-01-26T23:09:32.630Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 607864\n  metadata: {}\n  number: 3.2.1\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">=
        0\"\n  ruby_version: \n  prerelease: false\n  licenses: \n  requirements:
        \n  sha: 9b90635d70c8012de9f5592402414b7c4f6c49a29ac9d7e9b9f2187294fe532a\n-
        authors: David Heinemeier Hansson\n  built_at: '2012-01-20T00:00:00.000Z'\n
        \ created_at: '2012-01-20T16:46:24.120Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 529478\n  metadata: {}\n  number: 3.2.0\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">=
        0\"\n  ruby_version: \n  prerelease: false\n  licenses: \n  requirements:
        \n  sha: ab722c71508aedd85053befee44ba1c51c4f3fb6b2f2e51c5df149eb0895a01f\n-
        authors: David Heinemeier Hansson\n  built_at: '2012-01-04T02:00:00.000Z'\n
        \ created_at: '2012-01-04T21:05:24.350Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 32490\n  metadata: {}\n  number: 3.2.0.rc2\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">
        1.3.1\"\n  ruby_version: \n  prerelease: true\n  licenses: \n  requirements:
        \n  sha: 51cfe7fc91719dff4944ec858d01d734927a0326987107485431f58cf29942a4\n-
        authors: David Heinemeier Hansson\n  built_at: '2011-12-20T00:00:00.000Z'\n
        \ created_at: '2011-12-20T00:40:45.746Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 15555\n  metadata: {}\n  number: 3.2.0.rc1\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">
        1.3.1\"\n  ruby_version: \n  prerelease: true\n  licenses: \n  requirements:
        \n  sha: 5f8868848282f134ea919bab4281d53c7bcc9e3c35ce587806049d4b092fe71a\n-
        authors: David Heinemeier Hansson\n  built_at: '2013-03-18T00:00:00.000Z'\n
        \ created_at: '2013-03-18T17:13:15.584Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 1022061\n  metadata: {}\n  number: 3.1.12\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">=
        0\"\n  ruby_version: \n  prerelease: false\n  licenses: []\n  requirements:
        \n  sha: 2c6e08f1650bae4ccb34800fedfbb775ce61df0d4aa635dbd91eb5b738e6716b\n-
        authors: David Heinemeier Hansson\n  built_at: '2013-02-11T00:00:00.000Z'\n
        \ created_at: '2013-02-11T18:17:21.238Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 78834\n  metadata: {}\n  number: 3.1.11\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">=
        0\"\n  ruby_version: \n  prerelease: false\n  licenses: []\n  requirements:
        \n  sha: 68a4d79f230b49b8052155c57e130084915d17395efc98d6e0c1b96b9ef5781b\n-
        authors: David Heinemeier Hansson\n  built_at: '2013-01-08T00:00:00.000Z'\n
        \ created_at: '2013-01-08T20:08:17.561Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 591261\n  metadata: {}\n  number: 3.1.10\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">=
        0\"\n  ruby_version: \n  prerelease: false\n  licenses: []\n  requirements:
        \n  sha: 7d44ee8a20e2cc3c1bc1f372e9ae1f2ef9e1de7f2e6c321c02ef5baa8372f150\n-
        authors: David Heinemeier Hansson\n  built_at: '2012-12-23T00:00:00.000Z'\n
        \ created_at: '2013-01-02T21:19:42.784Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 12939\n  metadata: {}\n  number: 3.1.9\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">=
        0\"\n  ruby_version: \n  prerelease: false\n  licenses: []\n  requirements:
        \n  sha: 01c07779dbae5a7598ef2014a68fdad9c3a48da6ef1620bf74e2f3db3a92aec9\n-
        authors: David Heinemeier Hansson\n  built_at: '2012-08-09T00:00:00.000Z'\n
        \ created_at: '2012-08-09T21:20:06.526Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 111371\n  metadata: {}\n  number: 3.1.8\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">=
        0\"\n  ruby_version: \n  prerelease: false\n  licenses: \n  requirements:
        \n  sha: d08fb7ded95df9dffca1a65cae8f7449e13fe52ece4da1ed6f2c947f2836bc05\n-
        authors: David Heinemeier Hansson\n  built_at: '2012-07-26T00:00:00.000Z'\n
        \ created_at: '2012-07-26T22:08:35.986Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 20805\n  metadata: {}\n  number: 3.1.7\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">=
        0\"\n  ruby_version: \n  prerelease: false\n  licenses: \n  requirements:
        \n  sha: 6fc78110bcf571f410e601047bada38e8c948e0d71f54073f438befaedcd0bf1\n-
        authors: David Heinemeier Hansson\n  built_at: '2012-06-12T00:00:00.000Z'\n
        \ created_at: '2012-06-12T21:25:53.797Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 51312\n  metadata: {}\n  number: 3.1.6\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">=
        0\"\n  ruby_version: \n  prerelease: false\n  licenses: \n  requirements:
        \n  sha: 479e848fa6ac295d3c84b31f7ceeccc8eb085c72c790badcd5105e8a9f8af394\n-
        authors: David Heinemeier Hansson\n  built_at: '2012-05-31T00:00:00.000Z'\n
        \ created_at: '2012-05-31T18:24:46.209Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 19989\n  metadata: {}\n  number: 3.1.5\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">=
        0\"\n  ruby_version: \n  prerelease: false\n  licenses: \n  requirements:
        \n  sha: 1ec894b8090cb2c9393153552be2f3b6b1975265cbc1e0a3c6b28ebfea7e76a1\n-
        authors: David Heinemeier Hansson\n  built_at: '2012-05-28T00:00:00.000Z'\n
        \ created_at: '2012-05-28T19:01:36.386Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 2124\n  metadata: {}\n  number: 3.1.5.rc1\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">
        1.3.1\"\n  ruby_version: \n  prerelease: true\n  licenses: \n  requirements:
        \n  sha: 07037a44d5054cbfc5594255614c7d57d0a30368f65bd60871e3dc4729c30517\n-
        authors: David Heinemeier Hansson\n  built_at: '2012-03-01T00:00:00.000Z'\n
        \ created_at: '2012-03-01T17:52:01.118Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 174348\n  metadata: {}\n  number: 3.1.4\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">=
        0\"\n  ruby_version: \n  prerelease: false\n  licenses: \n  requirements:
        \n  sha: 56275158f5f8baca6bb254d06099848c29931b9ed8a8eb95a419909c3c73c00f\n-
        authors: David Heinemeier Hansson\n  built_at: '2012-02-22T00:00:00.000Z'\n
        \ created_at: '2012-02-22T21:39:01.338Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 1726\n  metadata: {}\n  number: 3.1.4.rc1\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">
        1.3.1\"\n  ruby_version: \n  prerelease: true\n  licenses: \n  requirements:
        \n  sha: e531cbb07bc9923c366f07d54b55c26c19bd0cd358a9e5609714ba73b908e290\n-
        authors: David Heinemeier Hansson\n  built_at: '2011-11-20T00:00:00.000Z'\n
        \ created_at: '2011-11-20T22:50:39.562Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 866329\n  metadata: {}\n  number: 3.1.3\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">=
        0\"\n  ruby_version: \n  prerelease: false\n  licenses: \n  requirements:
        \n  sha: 3fadc77e40a498c6343a767c00c2b305a50c869fcf3fcdb56e5037750a3acaa6\n-
        authors: David Heinemeier Hansson\n  built_at: '2011-11-18T00:00:00.000Z'\n
        \ created_at: '2011-11-18T01:31:53.794Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 59356\n  metadata: {}\n  number: 3.1.2\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">=
        0\"\n  ruby_version: \n  prerelease: false\n  licenses: \n  requirements:
        \n  sha: 98657af2149068337221b10ccd0f57e3ad74e26d43ceb7f84fec2d5982f87187\n-
        authors: David Heinemeier Hansson\n  built_at: '2011-11-14T00:00:00.000Z'\n
        \ created_at: '2011-11-14T15:47:13.196Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 5041\n  metadata: {}\n  number: 3.1.2.rc2\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">
        1.3.1\"\n  ruby_version: \n  prerelease: true\n  licenses: \n  requirements:
        \n  sha: 9950e77132bb761349bee6ff2e14ec675da6d0201f5a4aa9fc4c00ed1965cb7e\n-
        authors: David Heinemeier Hansson\n  built_at: '2011-11-14T00:00:00.000Z'\n
        \ created_at: '2011-11-14T14:15:10.952Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 1084\n  metadata: {}\n  number: 3.1.2.rc1\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">
        1.3.1\"\n  ruby_version: \n  prerelease: true\n  licenses: \n  requirements:
        \n  sha: a13bb585ca35f750fd85080cb9efb5a6b5a847329f7cb4ddde9c9aa3c5d5307a\n-
        authors: David Heinemeier Hansson\n  built_at: '2011-10-07T02:00:00.000Z'\n
        \ created_at: '2011-10-07T15:29:56.685Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 722925\n  metadata: {}\n  number: 3.1.1\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">=
        0\"\n  ruby_version: \n  prerelease: false\n  licenses: \n  requirements:
        \n  sha: c2255766aad9f8a392367702e6bc889f7784e9177a4b5956d4e73eab71042cb5\n-
        authors: David Heinemeier Hansson\n  built_at: '2011-10-05T02:00:00.000Z'\n
        \ created_at: '2011-10-06T02:30:49.560Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 6425\n  metadata: {}\n  number: 3.1.1.rc3\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">
        1.3.1\"\n  ruby_version: \n  prerelease: true\n  licenses: \n  requirements:
        \n  sha: c4cc060116182ebba4b8e486a6add05675c0e01edecc2bdd253dba8820b1d0cd\n-
        authors: David Heinemeier Hansson\n  built_at: '2011-09-29T03:00:00.000Z'\n
        \ created_at: '2011-09-29T22:16:53.214Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 7242\n  metadata: {}\n  number: 3.1.1.rc2\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">
        1.3.1\"\n  ruby_version: \n  prerelease: true\n  licenses: \n  requirements:
        \n  sha: 5bb7b402b627a2b02d706ce14b36c29d763f01dabaf127029b93be805ced697e\n-
        authors: David Heinemeier Hansson\n  built_at: '2011-09-14T07:00:00.000Z'\n
        \ created_at: '2011-09-15T00:26:50.347Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 12394\n  metadata: {}\n  number: 3.1.1.rc1\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">
        1.3.1\"\n  ruby_version: \n  prerelease: true\n  licenses: \n  requirements:
        \n  sha: aa5f59008a77df29dfd42e9e05efa3f25f08a7a180784f1300c8802accc8e5fe\n-
        authors: David Heinemeier Hansson\n  built_at: '2011-08-31T00:00:00.000Z'\n
        \ created_at: '2011-08-31T02:18:18.409Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 777632\n  metadata: {}\n  number: 3.1.0\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">=
        0\"\n  ruby_version: \n  prerelease: false\n  licenses: \n  requirements:
        \n  sha: 2084c39f717837f3ed51c3e965ebd952fcc7b6f4a9a190c858bdab9bc9543643\n-
        authors: David Heinemeier Hansson\n  built_at: '2011-08-29T03:00:00.000Z'\n
        \ created_at: '2011-08-29T03:27:09.213Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 15985\n  metadata: {}\n  number: 3.1.0.rc8\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">
        1.3.1\"\n  ruby_version: \n  prerelease: true\n  licenses: \n  requirements:
        \n  sha: 8aa4e5803a71492c6dd7a614d02ac300a8066e608466254b8a066ef8f112ca29\n-
        authors: David Heinemeier Hansson\n  built_at: '2011-08-16T00:00:00.000Z'\n
        \ created_at: '2011-08-16T22:33:14.613Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 25391\n  metadata: {}\n  number: 3.1.0.rc6\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">
        1.3.1\"\n  ruby_version: \n  prerelease: true\n  licenses: \n  requirements:
        \n  sha: c24b282d388a48390dac4f835459d07ad094d3af1bac8d42cf4ece800289b826\n-
        authors: David Heinemeier Hansson\n  built_at: '2011-07-25T07:00:00.000Z'\n
        \ created_at: '2011-07-25T23:05:10.043Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 47311\n  metadata: {}\n  number: 3.1.0.rc5\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">
        1.3.1\"\n  ruby_version: \n  prerelease: true\n  licenses: \n  requirements:
        \n  sha: dace28ecc78f948195559004da5d674966fdcba838a8d4af43a44323fd4519cd\n-
        authors: David Heinemeier Hansson\n  built_at: '2011-06-09T00:00:00.000Z'\n
        \ created_at: '2011-06-09T22:54:24.170Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 60805\n  metadata: {}\n  number: 3.1.0.rc4\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">
        1.3.1\"\n  ruby_version: \n  prerelease: true\n  licenses: \n  requirements:
        \n  sha: de9d8a82c8cdffcbed7032dad1016387d478acd0999332e42bc14b1b40562212\n-
        authors: David Heinemeier Hansson\n  built_at: '2011-06-08T00:00:00.000Z'\n
        \ created_at: '2011-06-08T21:27:13.923Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 4307\n  metadata: {}\n  number: 3.1.0.rc3\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">
        1.3.1\"\n  ruby_version: \n  prerelease: true\n  licenses: \n  requirements:
        \n  sha: 895c10adfd9927c6da735859a0f07f444ba5e7e31c618a2f0dc37dc4d2e1d47c\n-
        authors: David Heinemeier Hansson\n  built_at: '2011-06-07T00:00:00.000Z'\n
        \ created_at: '2011-06-08T00:16:33.377Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 3026\n  metadata: {}\n  number: 3.1.0.rc2\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">
        1.3.1\"\n  ruby_version: \n  prerelease: true\n  licenses: \n  requirements:
        \n  sha: 7f18a27c98859bc66ce80af95915060d744d17d49d6f97c8ba3528db25324fdf\n-
        authors: David Heinemeier Hansson\n  built_at: '2011-05-21T05:00:00.000Z'\n
        \ created_at: '2011-05-22T02:25:02.343Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 24800\n  metadata: {}\n  number: 3.1.0.rc1\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">
        1.3.1\"\n  ruby_version: \n  prerelease: true\n  licenses: \n  requirements:
        \n  sha: edab67ccb0a5b7216b96300f5f4f5043b690b7448d6f14f140f23b209d965895\n-
        authors: David Heinemeier Hansson\n  built_at: '2011-05-04T05:00:00.000Z'\n
        \ created_at: '2011-05-05T01:21:49.942Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 11493\n  metadata: {}\n  number: 3.1.0.beta1\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">
        1.3.1\"\n  ruby_version: \n  prerelease: true\n  licenses: \n  requirements:
        \n  sha: afa9a2cf1a2f6c7077d3f6c4599c77b35ee45aaf834e95a56849740b0e8876ad\n-
        authors: David Heinemeier Hansson\n  built_at: '2013-01-28T00:00:00.000Z'\n
        \ created_at: '2013-01-28T21:01:24.972Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 598774\n  metadata: {}\n  number: 3.0.20\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">=
        0\"\n  ruby_version: \n  prerelease: false\n  licenses: []\n  requirements:
        \n  sha: 924b9a087d252eeff343a8a275aa0acbc030ebd3e247905b938738ab18b2d855\n-
        authors: David Heinemeier Hansson\n  built_at: '2013-01-08T00:00:00.000Z'\n
        \ created_at: '2013-01-08T20:08:11.664Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 112549\n  metadata: {}\n  number: 3.0.19\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">=
        0\"\n  ruby_version: \n  prerelease: false\n  licenses: []\n  requirements:
        \n  sha: e87e0ad0d58940243065934bf381db7cf3dea4fa28bb45f0fd4307f33407f422\n-
        authors: David Heinemeier Hansson\n  built_at: '2012-12-23T00:00:00.000Z'\n
        \ created_at: '2013-01-02T21:19:36.253Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 15386\n  metadata: {}\n  number: 3.0.18\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">=
        0\"\n  ruby_version: \n  prerelease: false\n  licenses: []\n  requirements:
        \n  sha: 0d0d1fe83a62433b6930e375107ef044a95ffe8fc59800faaa819d49f9dc5258\n-
        authors: David Heinemeier Hansson\n  built_at: '2012-08-09T00:00:00.000Z'\n
        \ created_at: '2012-08-09T21:16:30.962Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 104603\n  metadata: {}\n  number: 3.0.17\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">=
        0\"\n  ruby_version: \n  prerelease: false\n  licenses: \n  requirements:
        \n  sha: aae6e74e4305d377d8faabda6513985ffead726175384facb4066e0ecf88f36b\n-
        authors: David Heinemeier Hansson\n  built_at: '2012-07-26T00:00:00.000Z'\n
        \ created_at: '2012-07-26T22:08:26.479Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 21629\n  metadata: {}\n  number: 3.0.16\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">=
        0\"\n  ruby_version: \n  prerelease: false\n  licenses: \n  requirements:
        \n  sha: a918a285e5e8331518393df4df23f52369814c53f9fbdbfce24be88016216180\n-
        authors: David Heinemeier Hansson\n  built_at: '2012-06-13T00:00:00.000Z'\n
        \ created_at: '2012-06-13T03:06:58.436Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 53040\n  metadata: {}\n  number: 3.0.15\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">=
        0\"\n  ruby_version: \n  prerelease: false\n  licenses: \n  requirements:
        \n  sha: 2fa0d20b339a7ba2e2eb37ab3d8fe76d8ee933225ebe7974aac0a70f31641bde\n-
        authors: David Heinemeier Hansson\n  built_at: '2012-06-12T00:00:00.000Z'\n
        \ created_at: '2012-06-12T21:25:47.714Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 40754\n  metadata: {}\n  number: 3.0.14\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">=
        0\"\n  ruby_version: \n  prerelease: false\n  licenses: \n  requirements:
        \n  sha: 33dc40c3c8f935179d7c062f1dcd59a935deca92cc40fcfcab63a9ddedcc71d9\n-
        authors: David Heinemeier Hansson\n  built_at: '2012-05-31T00:00:00.000Z'\n
        \ created_at: '2012-05-31T18:24:39.878Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 36326\n  metadata: {}\n  number: 3.0.13\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">=
        0\"\n  ruby_version: \n  prerelease: false\n  licenses: \n  requirements:
        \n  sha: 9625ed985ae892b12ec23e40e13c2d9f9a6102477227066e2685bbabbb825ca1\n-
        authors: David Heinemeier Hansson\n  built_at: '2012-05-28T00:00:00.000Z'\n
        \ created_at: '2012-05-28T19:01:30.831Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 1618\n  metadata: {}\n  number: 3.0.13.rc1\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">
        1.3.1\"\n  ruby_version: \n  prerelease: true\n  licenses: \n  requirements:
        \n  sha: 042238d3b922ef5e5bd69235b8936671507ddde6c7920ba4395748bd4879e90b\n-
        authors: David Heinemeier Hansson\n  built_at: '2012-03-01T00:00:00.000Z'\n
        \ created_at: '2012-03-01T17:51:47.575Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 90399\n  metadata: {}\n  number: 3.0.12\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">=
        0\"\n  ruby_version: \n  prerelease: false\n  licenses: \n  requirements:
        \n  sha: 6079fd46e8e3169a852417876027b2698854fb8778e35cdfcee32deae5e15464\n-
        authors: David Heinemeier Hansson\n  built_at: '2012-02-22T00:00:00.000Z'\n
        \ created_at: '2012-02-22T21:38:51.442Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 1212\n  metadata: {}\n  number: 3.0.12.rc1\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">
        1.3.1\"\n  ruby_version: \n  prerelease: true\n  licenses: \n  requirements:
        \n  sha: 6da6188b02110e15639e3d3a1e5605e5d660514fd168435d8d2d7c9d07cdb74c\n-
        authors: David Heinemeier Hansson\n  built_at: '2011-11-18T00:00:00.000Z'\n
        \ created_at: '2011-11-18T01:21:51.667Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 180827\n  metadata: {}\n  number: 3.0.11\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">=
        0\"\n  ruby_version: \n  prerelease: false\n  licenses: \n  requirements:
        \n  sha: 42ea7007f89b4df31f85a214c036eca35c6ae7f0d1c5cc9060ac859e4803a1c9\n-
        authors: David Heinemeier Hansson\n  built_at: '2011-08-16T00:00:00.000Z'\n
        \ created_at: '2011-08-16T22:14:03.359Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 597848\n  metadata: {}\n  number: 3.0.10\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">=
        0\"\n  ruby_version: \n  prerelease: false\n  licenses: \n  requirements:
        \n  sha: 11ae3ec8d14ceaea52d8d5d0325f46f697ca23c6ae9c1946601d3a1720d3cf8a\n-
        authors: David Heinemeier Hansson\n  built_at: '2011-08-04T07:00:00.000Z'\n
        \ created_at: '2011-08-05T00:11:56.865Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 1858\n  metadata: {}\n  number: 3.0.10.rc1\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">
        1.3.1\"\n  ruby_version: \n  prerelease: true\n  licenses: \n  requirements:
        \n  sha: 40cdee0f18ce88cd22176706b05b5b538d7b29e2d0742fce321199b5d0e4a7e2\n-
        authors: David Heinemeier Hansson\n  built_at: '2011-06-16T00:00:00.000Z'\n
        \ created_at: '2011-06-16T10:03:17.472Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 824102\n  metadata: {}\n  number: 3.0.9\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">=
        0\"\n  ruby_version: \n  prerelease: false\n  licenses: \n  requirements:
        \n  sha: 33407e483e78457fdf7e526c2005ad9dbfda0236f05e267ce356f95f32e178d1\n-
        authors: David Heinemeier Hansson\n  built_at: '2011-06-12T00:00:00.000Z'\n
        \ created_at: '2011-06-12T21:28:27.584Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 2479\n  metadata: {}\n  number: 3.0.9.rc5\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">
        1.3.1\"\n  ruby_version: \n  prerelease: true\n  licenses: \n  requirements:
        \n  sha: 5d1ca358648655d5195cfc9e8b5bc713bef1be382a182c8ceab2fb39cd867f00\n-
        authors: David Heinemeier Hansson\n  built_at: '2011-06-12T00:00:00.000Z'\n
        \ created_at: '2011-06-12T21:22:49.376Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 1066\n  metadata: {}\n  number: 3.0.9.rc4\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">
        1.3.1\"\n  ruby_version: \n  prerelease: true\n  licenses: \n  requirements:
        \n  sha: 60788e2719b4a9f9dd40ff294cc5edefe70558d5adc3d520d60bc5a09ee3210a\n-
        authors: David Heinemeier Hansson\n  built_at: '2011-06-09T00:00:00.000Z'\n
        \ created_at: '2011-06-09T22:49:17.849Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 1580\n  metadata: {}\n  number: 3.0.9.rc3\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">
        1.3.1\"\n  ruby_version: \n  prerelease: true\n  licenses: \n  requirements:
        \n  sha: 5d9cfb3ea1def0525eeaf8578ae862cd281b5baf1475d28d6ffa1752f3be210a\n-
        authors: David Heinemeier Hansson\n  built_at: '2011-06-08T00:00:00.000Z'\n
        \ created_at: '2011-06-08T21:20:03.789Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 1279\n  metadata: {}\n  number: 3.0.9.rc1\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">
        1.3.1\"\n  ruby_version: \n  prerelease: true\n  licenses: \n  requirements:
        \n  sha: 441bb9b451c61eca689bbd45479a589fbf8eb156f65a53fee0db0a2d08c10e1d\n-
        authors: David Heinemeier Hansson\n  built_at: '2011-06-07T00:00:00.000Z'\n
        \ created_at: '2011-06-08T00:16:19.242Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 107534\n  metadata: {}\n  number: 3.0.8\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">=
        0\"\n  ruby_version: \n  prerelease: false\n  licenses: \n  requirements:
        \n  sha: 8ebb2f660495b611c49b5d470c1cf8fb4e50aaa48105fc1e17c79d408d3ac100\n-
        authors: David Heinemeier Hansson\n  built_at: '2011-05-31T00:00:00.000Z'\n
        \ created_at: '2011-05-31T00:08:05.402Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 2029\n  metadata: {}\n  number: 3.0.8.rc4\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">
        1.3.1\"\n  ruby_version: \n  prerelease: true\n  licenses: \n  requirements:
        \n  sha: 2452cc4a6544943d233e9892be43f69c713b669c19c97e44af4c9e267ca167cf\n-
        authors: David Heinemeier Hansson\n  built_at: '2011-05-27T00:00:00.000Z'\n
        \ created_at: '2011-05-27T16:32:08.231Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 2497\n  metadata: {}\n  number: 3.0.8.rc2\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">
        1.3.1\"\n  ruby_version: \n  prerelease: true\n  licenses: \n  requirements:
        \n  sha: 265db1f3cad6857954c36b7bf0ec4feaa38157fc1338731b8a3873d619bd5967\n-
        authors: David Heinemeier Hansson\n  built_at: '2011-05-25T00:00:00.000Z'\n
        \ created_at: '2011-05-26T00:11:21.573Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 1702\n  metadata: {}\n  number: 3.0.8.rc1\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">
        1.3.1\"\n  ruby_version: \n  prerelease: true\n  licenses: \n  requirements:
        \n  sha: 04aa7faeafdc10c4ef1bf8448848fb7fe2aa22bad33858f561a563221fe3dbb4\n-
        authors: David Heinemeier Hansson\n  built_at: '2011-04-18T00:00:00.000Z'\n
        \ created_at: '2011-04-18T21:05:39.584Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 756557\n  metadata: {}\n  number: 3.0.7\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">=
        0\"\n  ruby_version: \n  prerelease: false\n  licenses: \n  requirements:
        \n  sha: 7d3098bf78a82373059282ae6f48795ba3fed0f8dcbf5eb5085d5e8558f9e2db\n-
        authors: David Heinemeier Hansson\n  built_at: '2011-04-15T03:00:00.000Z'\n
        \ created_at: '2011-04-15T17:33:36.635Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 3902\n  metadata: {}\n  number: 3.0.7.rc2\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">
        1.3.1\"\n  ruby_version: \n  prerelease: true\n  licenses: \n  requirements:
        \n  sha: e26ab64fcee9d70edb811fc075a21f2eb22026b8aa5149bc1e89056ca2ee568c\n-
        authors: David Heinemeier Hansson\n  built_at: '2011-04-14T03:00:00.000Z'\n
        \ created_at: '2011-04-14T21:56:46.047Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 1626\n  metadata: {}\n  number: 3.0.7.rc1\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">
        1.3.1\"\n  ruby_version: \n  prerelease: true\n  licenses: \n  requirements:
        \n  sha: c516a30a42c069541b29e249d85767ce258306da99c70c88b213a573b6865e0e\n-
        authors: David Heinemeier Hansson\n  built_at: '2011-04-05T07:00:00.000Z'\n
        \ created_at: '2011-04-05T23:04:58.083Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 235722\n  metadata: {}\n  number: 3.0.6\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">=
        0\"\n  ruby_version: \n  prerelease: false\n  licenses: \n  requirements:
        \n  sha: 4350256b2d6f715e907c83b52728c3a86738669cf0cfd0d628d714ef8836bdaa\n-
        authors: David Heinemeier Hansson\n  built_at: '2011-03-30T07:00:00.000Z'\n
        \ created_at: '2011-03-31T05:28:37.517Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 2725\n  metadata: {}\n  number: 3.0.6.rc2\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">
        1.3.1\"\n  ruby_version: \n  prerelease: true\n  licenses: \n  requirements:
        \n  sha: 86b749af75beb9d485c0b97f4601b46f2bf99b13ed29d5fecce9ee151ca3a6c2\n-
        authors: David Heinemeier Hansson\n  built_at: '2011-03-29T07:00:00.000Z'\n
        \ created_at: '2011-03-29T20:46:40.617Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 1717\n  metadata: {}\n  number: 3.0.6.rc1\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">
        1.3.1\"\n  ruby_version: \n  prerelease: true\n  licenses: \n  requirements:
        \n  sha: ddbb9e3a5a1bc628a9f166b70cf47803a78e8137fd5826110355c507f6a792ad\n-
        authors: David Heinemeier Hansson\n  built_at: '2011-02-26T08:00:00.000Z'\n
        \ created_at: '2011-02-27T02:30:43.966Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 630061\n  metadata: {}\n  number: 3.0.5\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">=
        0\"\n  ruby_version: \n  prerelease: false\n  licenses: \n  requirements:
        \n  sha: aeaac630df1ca0306cedbbf40d4524b3a18f12db65815e00cae49dce2c4fbfcd\n-
        authors: David Heinemeier Hansson\n  built_at: '2011-02-22T08:00:00.000Z'\n
        \ created_at: '2011-02-23T19:08:24.376Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 5051\n  metadata: {}\n  number: 3.0.5.rc1\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">
        1.3.1\"\n  ruby_version: \n  prerelease: true\n  licenses: \n  requirements:
        \n  sha: 9cfea80a4f9069c234784338e63239c4f05569d924f345ae200e75125fe7bab8\n-
        authors: David Heinemeier Hansson\n  built_at: '2011-02-08T11:00:00.000Z'\n
        \ created_at: '2011-02-08T21:13:44.156Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 281758\n  metadata: {}\n  number: 3.0.4\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">=
        0\"\n  ruby_version: \n  prerelease: false\n  licenses: \n  requirements:
        \n  sha: e8fb327e062211d1cdaae74f7e9c0e8dcda057f783eaf235618c5460dfff9d93\n-
        authors: David Heinemeier Hansson\n  built_at: '2011-01-30T11:00:00.000Z'\n
        \ created_at: '2011-01-30T23:00:26.025Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 5084\n  metadata: {}\n  number: 3.0.4.rc1\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">
        1.3.1\"\n  ruby_version: \n  prerelease: true\n  licenses: \n  requirements:
        \n  sha: c6bc8285f7bc394f6020171f51e72d813c674ed7237a63afa3f175dcd50027ad\n-
        authors: David Heinemeier Hansson\n  built_at: '2010-11-16T06:00:00.000Z'\n
        \ created_at: '2010-11-16T16:27:52.794Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 1984202\n  metadata: {}\n  number: 3.0.3\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">=
        0\"\n  ruby_version: \n  prerelease: false\n  licenses: \n  requirements:
        \n  sha: 0d7b52544b82fbd2238c3f3913101c9605d3e4e7ce45acad1da83367c01542ed\n-
        authors: David Heinemeier Hansson\n  built_at: '2010-11-15T06:00:00.000Z'\n
        \ created_at: '2010-11-15T19:29:44.813Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 22405\n  metadata: {}\n  number: 3.0.2\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">=
        0\"\n  ruby_version: \n  prerelease: false\n  licenses: \n  requirements:
        \n  sha: 673ecd607a8735eefb5cd6649753c936e5729a681a82a17ed4d3cbfc734e9802\n-
        authors: David Heinemeier Hansson\n  built_at: '2010-10-14T11:00:00.000Z'\n
        \ created_at: '2010-10-14T20:55:41.657Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 365436\n  metadata: {}\n  number: 3.0.1\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">=
        0\"\n  ruby_version: \n  prerelease: false\n  licenses: \n  requirements:
        \n  sha: df670e7d678ed9c8e8890377ec98676d1e3232b71450cfef5afb879298d0aa06\n-
        authors: David Heinemeier Hansson\n  built_at: '2010-08-29T05:00:00.000Z'\n
        \ created_at: '2010-08-29T23:10:55.645Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 1016781\n  metadata: {}\n  number: 3.0.0\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">=
        0\"\n  ruby_version: \n  prerelease: false\n  licenses: \n  requirements:
        \n  sha: 7d57a36ab037e1e7bdb11e467c8e23f83b461ad011123f83f19f4a8571344d2d\n-
        authors: David Heinemeier Hansson\n  built_at: '2010-08-23T05:00:00.000Z'\n
        \ created_at: '2010-08-24T03:04:29.945Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 36283\n  metadata: {}\n  number: 3.0.0.rc2\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">
        1.3.1\"\n  ruby_version: \n  prerelease: true\n  licenses: \n  requirements:
        \n  sha: 610007da90ef83065ff517d72d10fb8752ac841c3e8a467c84453f7dde1cf97b\n-
        authors: David Heinemeier Hansson\n  built_at: '2010-07-26T05:00:00.000Z'\n
        \ created_at: '2010-07-26T21:42:57.000Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 68027\n  metadata: {}\n  number: 3.0.0.rc\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">
        1.3.1\"\n  ruby_version: \n  prerelease: true\n  licenses: \n  requirements:
        \n  sha: 5edeec9b84a08762a7cada6f69117965db3f33fae621d983c15c8be647bc4791\n-
        authors: David Heinemeier Hansson\n  built_at: '2010-06-08T04:00:00.000Z'\n
        \ created_at: '2010-06-08T22:30:10.376Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 61540\n  metadata: {}\n  number: 3.0.0.beta4\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">
        1.3.1\"\n  ruby_version: \n  prerelease: true\n  licenses: \n  requirements:
        \n  sha: 0683489f9b9c5654bba1a349db57041a18a1435f25fd6872034ec86552f5a6f3\n-
        authors: David Heinemeier Hansson\n  built_at: '2010-04-13T07:00:00.000Z'\n
        \ created_at: '2010-04-13T19:22:40.080Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 41049\n  metadata: {}\n  number: 3.0.0.beta3\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">
        1.3.1\"\n  ruby_version: \n  prerelease: true\n  licenses: \n  requirements:
        \n  sha: bf10169f70f274af083a0c913a94c1f35ca6a5748c192f47b2d5181def167631\n-
        authors: David Heinemeier Hansson\n  built_at: '2010-04-01T07:00:00.000Z'\n
        \ created_at: '2010-04-01T21:23:35.159Z'\n  description: A toolkit of support
        libraries and Ruby core extensions extracted from\n    the Rails framework.
        Rich support for multibyte strings, internationalization,\n    time zones,
        and testing.\n  downloads_count: 10143\n  metadata: {}\n  number: 3.0.0.beta2\n
        \ summary: A toolkit of support libraries and Ruby core extensions extracted
        from\n    the Rails framework.\n  platform: ruby\n  rubygems_version: \">
        1.3.1\"\n  ruby_version: \n  prerelease: true\n  licenses: \n  requirements:
        \n  sha: a075695a1a14fe2efe7de98e018328f77e7e92166eab61994c23861372eeb7f1\n-
        authors: David Heinemeier Hansson\n  built_at: '2010-02-04T08:00:00.000Z'\n
        \ created_at: '2010-02-05T02:55:58.454Z'\n  description: Support and utility
        classes used by the Rails framework.\n  downloads_count: 40980\n  metadata:
        {}\n  number: 3.0.0.beta\n  summary: Support and utility classes used by the
        Rails framework.\n  platform: ruby\n  rubygems_version: \"> 1.3.1\"\n  ruby_version:
        \n  prerelease: true\n  licenses: \n  requirements: \n  sha: c3f84e14561e7527d1bd4ce8a2b94ef2e7ae219a99384a60ad08ae9e9073c4dd\n-
        authors: David Heinemeier Hansson\n  built_at: '2009-09-01T08:00:00.000Z'\n
        \ created_at: '2009-10-16T22:14:43.878Z'\n  description: Utility library which
        carries commonly used classes and goodies from\n    the Rails framework\n
        \ downloads_count: 4879\n  metadata: {}\n  number: 3.0.pre\n  summary: Support
        and utility classes used by the Rails framework.\n  platform: ruby\n  rubygems_version:
        \"> 1.3.1\"\n  ruby_version: \n  prerelease: true\n  licenses: \n  requirements:
        \n  sha: ac1fa4ecd9869e104ef89cf5c05ead720e68322db06f83dd6d35019f8efa3d36\n-
        authors: David Heinemeier Hansson\n  built_at: '2013-03-18T07:00:00.000Z'\n
        \ created_at: '2013-03-18T17:13:10.617Z'\n  description: Utility library which
        carries commonly used classes and goodies from\n    the Rails framework\n
        \ downloads_count: 639221\n  metadata: {}\n  number: 2.3.18\n  summary: Support
        and utility classes used by the Rails framework.\n  platform: ruby\n  rubygems_version:
        \">= 0\"\n  ruby_version: \n  prerelease: false\n  licenses: []\n  requirements:
        \n  sha: 65b009c10c9c1fe298b04dfc428db7311f1dfbdcafc6c9429517651a679dd36b\n-
        authors: David Heinemeier Hansson\n  built_at: '2013-02-11T00:00:00.000Z'\n
        \ created_at: '2013-02-11T18:17:14.242Z'\n  description: Utility library which
        carries commonly used classes and goodies from\n    the Rails framework\n
        \ downloads_count: 151219\n  metadata: {}\n  number: 2.3.17\n  summary: Support
        and utility classes used by the Rails framework.\n  platform: ruby\n  rubygems_version:
        \">= 0\"\n  ruby_version: \n  prerelease: false\n  licenses: []\n  requirements:
        \n  sha: 8ea5d5ead4684f12e2ee35ed2b59c1b37739ea7b0e344f9d9b238801e807cb33\n-
        authors: David Heinemeier Hansson\n  built_at: '2013-01-28T00:00:00.000Z'\n
        \ created_at: '2013-01-28T21:01:18.731Z'\n  description: Utility library which
        carries commonly used classes and goodies from\n    the Rails framework\n
        \ downloads_count: 67398\n  metadata: {}\n  number: 2.3.16\n  summary: Support
        and utility classes used by the Rails framework.\n  platform: ruby\n  rubygems_version:
        \">= 0\"\n  ruby_version: \n  prerelease: false\n  licenses: []\n  requirements:
        \n  sha: 9f79ec4160f24f875357632a71efdd0257ae5dcca31f3aef99e0d470ce0ec5af\n-
        authors: David Heinemeier Hansson\n  built_at: '2013-01-08T08:00:00.000Z'\n
        \ created_at: '2013-01-08T20:08:06.653Z'\n  description: Utility library which
        carries commonly used classes and goodies from\n    the Rails framework\n
        \ downloads_count: 102573\n  metadata: {}\n  number: 2.3.15\n  summary: Support
        and utility classes used by the Rails framework.\n  platform: ruby\n  rubygems_version:
        \">= 0\"\n  ruby_version: \n  prerelease: false\n  licenses: []\n  requirements:
        \n  sha: 2528988dba42992c61f0c55935a840bee782418adc18f8ce67d0a80cf1f437bc\n-
        authors: David Heinemeier Hansson\n  built_at: '2011-08-16T00:00:00.000Z'\n
        \ created_at: '2011-08-16T22:01:06.716Z'\n  description: Utility library which
        carries commonly used classes and goodies from\n    the Rails framework\n
        \ downloads_count: 547636\n  metadata: {}\n  number: 2.3.14\n  summary: Support
        and utility classes used by the Rails framework.\n  platform: ruby\n  rubygems_version:
        \">= 0\"\n  ruby_version: \n  prerelease: false\n  licenses: \n  requirements:
        \n  sha: c5affddb549fa05415f0e467a17bd0fa02925b414d1a5e2835270d7064b455fe\n-
        authors: David Heinemeier Hansson\n  built_at: '2011-06-08T00:00:00.000Z'\n
        \ created_at: '2011-06-08T00:21:53.197Z'\n  description: Utility library which
        carries commonly used classes and goodies from\n    the Rails framework\n
        \ downloads_count: 87923\n  metadata: {}\n  number: 2.3.12\n  summary: Support
        and utility classes used by the Rails framework.\n  platform: ruby\n  rubygems_version:
        \">= 0\"\n  ruby_version: \n  prerelease: false\n  licenses: \n  requirements:
        \n  sha: e40df3ebabf26534b36bc2a9380ed7124b95b5454e4fd3cecc2aec38eade17a9\n-
        authors: David Heinemeier Hansson\n  built_at: '2011-02-08T11:00:00.000Z'\n
        \ created_at: '2011-02-08T21:13:15.958Z'\n  description: Utility library which
        carries commonly used classes and goodies from\n    the Rails framework\n
        \ downloads_count: 373702\n  metadata: {}\n  number: 2.3.11\n  summary: Support
        and utility classes used by the Rails framework.\n  platform: ruby\n  rubygems_version:
        \">= 0\"\n  ruby_version: \n  prerelease: false\n  licenses: \n  requirements:
        \n  sha: d4c27d1207d6780e261c9773efc824c4a33136dc73a599256684eaba4818cd4f\n-
        authors: David Heinemeier Hansson\n  built_at: '2010-10-14T11:00:00.000Z'\n
        \ created_at: '2010-10-14T20:52:56.057Z'\n  description: Utility library which
        carries commonly used classes and goodies from\n    the Rails framework\n
        \ downloads_count: 210648\n  metadata: {}\n  number: 2.3.10\n  summary: Support
        and utility classes used by the Rails framework.\n  platform: ruby\n  rubygems_version:
        \">= 0\"\n  ruby_version: \n  prerelease: false\n  licenses: \n  requirements:
        \n  sha: c55de8ea74fea54b6374523923089235b5b4786b2b8ffb4c956e56e476730602\n-
        authors: David Heinemeier Hansson\n  built_at: '2010-09-04T07:00:00.000Z'\n
        \ created_at: '2010-09-04T21:53:58.640Z'\n  description: Utility library which
        carries commonly used classes and goodies from\n    the Rails framework\n
        \ downloads_count: 137296\n  metadata: {}\n  number: 2.3.9\n  summary: Support
        and utility classes used by the Rails framework.\n  platform: ruby\n  rubygems_version:
        \">= 0\"\n  ruby_version: \n  prerelease: false\n  licenses: \n  requirements:
        \n  sha: c740e35e15e1e43837baec1cc5545cff445eaedfec994a017282478d0c8d4d4f\n-
        authors: David Heinemeier Hansson\n  built_at: '2010-08-29T07:00:00.000Z'\n
        \ created_at: '2010-08-30T03:30:45.689Z'\n  description: Utility library which
        carries commonly used classes and goodies from\n    the Rails framework\n
        \ downloads_count: 2045\n  metadata: {}\n  number: 2.3.9.pre\n  summary: Support
        and utility classes used by the Rails framework.\n  platform: ruby\n  rubygems_version:
        \"> 1.3.1\"\n  ruby_version: \n  prerelease: true\n  licenses: \n  requirements:
        \n  sha: 7f9582d3b2f252795e9eb80820bb086b60e04f38906be2989ff48e878c01ae08\n-
        authors: David Heinemeier Hansson\n  built_at: '2010-05-24T07:00:00.000Z'\n
        \ created_at: '2010-05-25T04:52:52.783Z'\n  description: Utility library which
        carries commonly used classes and goodies from\n    the Rails framework\n
        \ downloads_count: 1380703\n  metadata: {}\n  number: 2.3.8\n  summary: Support
        and utility classes used by the Rails framework.\n  platform: ruby\n  rubygems_version:
        \">= 0\"\n  ruby_version: \n  prerelease: false\n  licenses: \n  requirements:
        \n  sha: 89a7587b25bc312aa07638543f42ef34c974d026c4ccdc0367e9376e3233f661\n-
        authors: David Heinemeier Hansson\n  built_at: '2010-05-24T07:00:00.000Z'\n
        \ created_at: '2010-05-24T21:17:13.720Z'\n  description: Utility library which
        carries commonly used classes and goodies from\n    the Rails framework\n
        \ downloads_count: 1907\n  metadata: {}\n  number: 2.3.8.pre1\n  summary:
        Support and utility classes used by the Rails framework.\n  platform: ruby\n
        \ rubygems_version: \"> 1.3.1\"\n  ruby_version: \n  prerelease: true\n  licenses:
        \n  requirements: \n  sha: 715f1ebdca4f03ea78580ceb67a2f03bec2933e562c53a12f2bac54e53589d5f\n-
        authors: David Heinemeier Hansson\n  built_at: '2010-05-24T07:00:00.000Z'\n
        \ created_at: '2010-05-24T08:21:11.097Z'\n  description: Utility library which
        carries commonly used classes and goodies from\n    the Rails framework\n
        \ downloads_count: 17892\n  metadata: {}\n  number: 2.3.7\n  summary: Support
        and utility classes used by the Rails framework.\n  platform: ruby\n  rubygems_version:
        \">= 0\"\n  ruby_version: \n  prerelease: false\n  licenses: \n  requirements:
        \n  sha: edbfd490ac86b62588e28f12f1f4de494e3ca2baf1c4a85e80fa0f8fd13947eb\n-
        authors: David Heinemeier Hansson\n  built_at: '2010-05-23T07:00:00.000Z'\n
        \ created_at: '2010-05-23T07:44:08.043Z'\n  description: Utility library which
        carries commonly used classes and goodies from\n    the Rails framework\n
        \ downloads_count: 25368\n  metadata: {}\n  number: 2.3.6\n  summary: Support
        and utility classes used by the Rails framework.\n  platform: ruby\n  rubygems_version:
        \">= 0\"\n  ruby_version: \n  prerelease: false\n  licenses: \n  requirements:
        \n  sha: db5dfba171a1acdb98543aef639874fdb2f4110e18a739543a74e09a1793d69d\n-
        authors: David Heinemeier Hansson\n  built_at: '2010-03-07T08:00:00.000Z'\n
        \ created_at: '2010-03-08T00:12:55.875Z'\n  description: Utility library which
        carries commonly used classes and goodies from\n    the Rails framework\n
        \ downloads_count: 1899\n  metadata: {}\n  number: 2.3.6.pre\n  summary: Support
        and utility classes used by the Rails framework.\n  platform: ruby\n  rubygems_version:
        \"> 1.3.1\"\n  ruby_version: \n  prerelease: true\n  licenses: \n  requirements:
        \n  sha: 88057b5330ce3304ae8226d2b12ad5273444a33b018258ced10b6403ec3cc29d\n-
        authors: David Heinemeier Hansson\n  built_at: '2009-11-26T11:00:00.000Z'\n
        \ created_at: '2009-11-27T00:11:38.877Z'\n  description: Utility library which
        carries commonly used classes and goodies from\n    the Rails framework\n
        \ downloads_count: 1336380\n  metadata: {}\n  number: 2.3.5\n  summary: Support
        and utility classes used by the Rails framework.\n  platform: ruby\n  rubygems_version:
        \">= 0\"\n  ruby_version: \n  prerelease: false\n  licenses: \n  requirements:
        \n  sha: 9a2502e629388ac325f52e98fbb39d6ed12f79eaf38d9125565cd32e8dc9a9a2\n-
        authors: David Heinemeier Hansson\n  built_at: '2009-09-03T15:00:00.000Z'\n
        \ created_at: '2009-09-04T17:32:55.000Z'\n  description: Utility library which
        carries commonly used classes and goodies from\n    the Rails framework\n
        \ downloads_count: 291540\n  metadata: {}\n  number: 2.3.4\n  summary: Support
        and utility classes used by the Rails framework.\n  platform: ruby\n  rubygems_version:
        \">= 0\"\n  ruby_version: \n  prerelease: false\n  licenses: \n  requirements:
        \n  sha: b1523d3fecd3cca0515d89c9bd7924ae6a2d8be66dbca190d58a386738f771c7\n-
        authors: David Heinemeier Hansson\n  built_at: '2009-07-20T05:00:00.000Z'\n
        \ created_at: '2009-08-04T23:45:37.000Z'\n  description: Utility library which
        carries commonly used classes and goodies from\n    the Rails framework\n
        \ downloads_count: 41374\n  metadata: {}\n  number: 2.3.3\n  summary: Support
        and utility classes used by the Rails framework.\n  platform: ruby\n  rubygems_version:
        \">= 0\"\n  ruby_version: \n  prerelease: false\n  licenses: \n  requirements:
        \n  sha: 2ba27f5140dc6af4ce11d21157dbf677d350c124589a847c9503d1e657c9a38c\n-
        authors: David Heinemeier Hansson\n  built_at: '2009-03-15T05:00:00.000Z'\n
        \ created_at: '2009-07-25T18:35:19.000Z'\n  description: Utility library which
        carries commonly used classes and goodies from\n    the Rails framework\n
        \ downloads_count: 245167\n  metadata: {}\n  number: 2.3.2\n  summary: Support
        and utility classes used by the Rails framework.\n  platform: ruby\n  rubygems_version:
        \">= 0\"\n  ruby_version: \n  prerelease: false\n  licenses: \n  requirements:
        \n  sha: c626bef2386b041a9b8368a8c4e7ce2142fa81937d8b220c9b911f0f614ffa37\n-
        authors: David Heinemeier Hansson\n  built_at: '2009-09-27T14:00:00.000Z'\n
        \ created_at: '2009-09-28T09:22:37.870Z'\n  description: Utility library which
        carries commonly used classes and goodies from\n    the Rails framework\n
        \ downloads_count: 48653\n  metadata: {}\n  number: 2.2.3\n  summary: Support
        and utility classes used by the Rails framework.\n  platform: ruby\n  rubygems_version:
        \">= 0\"\n  ruby_version: \n  prerelease: false\n  licenses: \n  requirements:
        \n  sha: 8b5fcec82a49853ddde1208a2a8b005a8c6d2e103895b28b94e243397e03522e\n-
        authors: David Heinemeier Hansson\n  built_at: '2008-11-20T23:00:00.000Z'\n
        \ created_at: '2009-07-25T18:35:19.000Z'\n  description: Utility library which
        carries commonly used classes and goodies from\n    the Rails framework\n
        \ downloads_count: 147070\n  metadata: {}\n  number: 2.2.2\n  summary: Support
        and utility classes used by the Rails framework.\n  platform: ruby\n  rubygems_version:
        \">= 0\"\n  ruby_version: \n  prerelease: false\n  licenses: \n  requirements:
        \n  sha: 4fbf1c10220bfa4cc641196b264b5f61f8a6b83dfaa9f0355832a93577d32a53\n-
        authors: David Heinemeier Hansson\n  built_at: '2008-10-22T22:00:00.000Z'\n
        \ created_at: '2009-07-25T18:35:19.000Z'\n  description: Utility library which
        carries commonly used classes and goodies from\n    the Rails framework\n
        \ downloads_count: 75167\n  metadata: {}\n  number: 2.1.2\n  summary: Support
        and utility classes used by the Rails framework.\n  platform: ruby\n  rubygems_version:
        \">= 0\"\n  ruby_version: \n  prerelease: false\n  licenses: \n  requirements:
        \n  sha: bbf837f45c3f3e528ff90c68979e6550c5da24a6b354daede9a79a87a7cc61ad\n-
        authors: David Heinemeier Hansson\n  built_at: '2008-09-03T22:00:00.000Z'\n
        \ created_at: '2009-07-25T18:35:19.000Z'\n  description: Utility library which
        carries commonly used classes and goodies from\n    the Rails framework\n
        \ downloads_count: 25867\n  metadata: {}\n  number: 2.1.1\n  summary: Support
        and utility classes used by the Rails framework.\n  platform: ruby\n  rubygems_version:
        \">= 0\"\n  ruby_version: \n  prerelease: false\n  licenses: \n  requirements:
        \n  sha: 6998f941718fd9b47d606b7d57aa538da72c9c7e9aab8cc7bb5725c99b75d36e\n-
        authors: David Heinemeier Hansson\n  built_at: '2008-05-31T07:00:00.000Z'\n
        \ created_at: '2009-07-25T18:35:19.000Z'\n  description: Utility library which
        carries commonly used classes and goodies from\n    the Rails framework\n
        \ downloads_count: 113417\n  metadata: {}\n  number: 2.1.0\n  summary: Support
        and utility classes used by the Rails framework.\n  platform: ruby\n  rubygems_version:
        \">= 0\"\n  ruby_version: \n  prerelease: false\n  licenses: \n  requirements:
        \n  sha: ddb63b960219cf3ca14ffd3d231d032d81769572766b3563fb51594e69425fa4\n-
        authors: David Heinemeier Hansson\n  built_at: '2008-10-18T22:00:00.000Z'\n
        \ created_at: '2009-07-25T18:35:19.000Z'\n  description: Utility library which
        carries commonly used classes and goodies from\n    the Rails framework\n
        \ downloads_count: 16695\n  metadata: {}\n  number: 2.0.5\n  summary: Support
        and utility classes used by the Rails framework.\n  platform: ruby\n  rubygems_version:
        \">= 0\"\n  ruby_version: \n  prerelease: false\n  licenses: \n  requirements:
        \n  sha: 5131fa6fbec7c5bd750819df39a4205d5c5b5c848c36627f30d6b1b790c5c5c3\n-
        authors: David Heinemeier Hansson\n  built_at: '2008-09-02T22:00:00.000Z'\n
        \ created_at: '2009-07-25T18:35:19.000Z'\n  description: Utility library which
        carries commonly used classes and goodies from\n    the Rails framework\n
        \ downloads_count: 7856\n  metadata: {}\n  number: 2.0.4\n  summary: Support
        and utility classes used by the Rails framework.\n  platform: ruby\n  rubygems_version:
        \">= 0\"\n  ruby_version: \n  prerelease: false\n  licenses: \n  requirements:
        \n  sha: 0ab5a390bc9d486ce706f013b56a164e11153bad96d848823cd1701793f3afde\n-
        authors: David Heinemeier Hansson\n  built_at: '2007-12-20T06:00:00.000Z'\n
        \ created_at: '2009-07-25T18:35:19.000Z'\n  description: Utility library which
        carries commonly used classes and goodies from\n    the Rails framework\n
        \ downloads_count: 50810\n  metadata: {}\n  number: 2.0.2\n  summary: Support
        and utility classes used by the Rails framework.\n  platform: ruby\n  rubygems_version:
        \">= 0\"\n  ruby_version: \n  prerelease: false\n  licenses: \n  requirements:
        \n  sha: 5cfdaf6d6ae7287d46430f1a23c33c0362da69ad66fcb18926bf6cf403ed14ad\n-
        authors: David Heinemeier Hansson\n  built_at: '2007-12-07T06:00:00.000Z'\n
        \ created_at: '2009-07-25T18:35:20.000Z'\n  description: Utility library which
        carries commonly used classes and goodies from\n    the Rails framework\n
        \ downloads_count: 9322\n  metadata: {}\n  number: 2.0.1\n  summary: Support
        and utility classes used by the Rails framework.\n  platform: ruby\n  rubygems_version:
        \">= 0\"\n  ruby_version: \n  prerelease: false\n  licenses: \n  requirements:
        \n  sha: cffb8ed073cb049653a7e2db001c02e1814a847d5fdc82db45e3df48afe806c0\n-
        authors: David Heinemeier Hansson\n  built_at: '2007-12-06T06:00:00.000Z'\n
        \ created_at: '2009-07-25T18:35:20.000Z'\n  description: Utility library which
        carries commonly used classes and goodies from\n    the Rails framework\n
        \ downloads_count: 10355\n  metadata: {}\n  number: 2.0.0\n  summary: Support
        and utility classes used by the Rails framework.\n  platform: ruby\n  rubygems_version:
        \">= 0\"\n  ruby_version: \n  prerelease: false\n  licenses: \n  requirements:
        \n  sha: 38ce61e0d768203ed63414bb254fb372ef7d9127d2773504113be276dc4a7276\n-
        authors: David Heinemeier Hansson\n  built_at: '2007-10-12T05:00:00.000Z'\n
        \ created_at: '2009-07-25T18:35:20.000Z'\n  description: Utility library which
        carries commonly used classes and goodies from\n    the Rails framework\n
        \ downloads_count: 77208\n  metadata: {}\n  number: 1.4.4\n  summary: Support
        and utility classes used by the Rails framework.\n  platform: ruby\n  rubygems_version:
        \">= 0\"\n  ruby_version: \n  prerelease: false\n  licenses: \n  requirements:
        \n  sha: c627bdc02c16d7972a4f7dfade5774c5435fa59e1edb63826cc7301659ee9280\n-
        authors: David Heinemeier Hansson\n  built_at: '2007-10-04T05:00:00.000Z'\n
        \ created_at: '2009-07-25T18:35:20.000Z'\n  description: Utility library which
        carries commonly used classes and goodies from\n    the Rails framework\n
        \ downloads_count: 7907\n  metadata: {}\n  number: 1.4.3\n  summary: Support
        and utility classes used by the Rails framework.\n  platform: ruby\n  rubygems_version:
        \">= 0\"\n  ruby_version: \n  prerelease: false\n  licenses: \n  requirements:
        \n  sha: 0c96cfd2aa832f41aacf1cdeea6a07f40f26cd3cc69945a46e8d4fe063374403\n-
        authors: David Heinemeier Hansson\n  built_at: '2007-03-13T05:00:00.000Z'\n
        \ created_at: '2009-07-25T18:35:20.000Z'\n  description: Utility library which
        carries commonly used classes and goodies from\n    the Rails framework\n
        \ downloads_count: 32958\n  metadata: {}\n  number: 1.4.2\n  summary: Support
        and utility classes used by the Rails framework.\n  platform: ruby\n  rubygems_version:
        \">= 0\"\n  ruby_version: \n  prerelease: false\n  licenses: \n  requirements:
        \n  sha: cc0e51ee3f8a52ebc96928b5072302f7897d40e5c9c7d18679cb7fe35a5ceb03\n-
        authors: David Heinemeier Hansson\n  built_at: '2007-02-05T06:00:00.000Z'\n
        \ created_at: '2009-07-25T18:35:20.000Z'\n  description: Utility library which
        carries commonly used classes and goodies from\n    the Rails framework\n
        \ downloads_count: 15007\n  metadata: {}\n  number: 1.4.1\n  summary: Support
        and utility classes used by the Rails framework.\n  platform: ruby\n  rubygems_version:
        \">= 0\"\n  ruby_version: \n  prerelease: false\n  licenses: \n  requirements:
        \n  sha: 7a49947f04eb4e0a48888914bdaae2939c8c2d5acd6b3c99a7d31b8d4bfb8298\n-
        authors: David Heinemeier Hansson\n  built_at: '2007-01-17T06:00:00.000Z'\n
        \ created_at: '2009-07-25T18:35:20.000Z'\n  description: Utility library which
        carries commonly used classes and goodies from\n    the Rails framework\n
        \ downloads_count: 9050\n  metadata: {}\n  number: 1.4.0\n  summary: Support
        and utility classes used by the Rails framework.\n  platform: ruby\n  rubygems_version:
        \">= 0\"\n  ruby_version: \n  prerelease: false\n  licenses: \n  requirements:
        \n  sha: 932e830fa0f6ba7e2166294811f5451d826409d31befbcbe1ccae27416f988d2\n-
        authors: David Heinemeier Hansson\n  built_at: '2006-04-06T05:00:00.000Z'\n
        \ created_at: '2009-07-25T18:35:20.000Z'\n  description: Utility library which
        carries commonly used classes and goodies from\n    the Rails framework\n
        \ downloads_count: 17696\n  metadata: {}\n  number: 1.3.1\n  summary: Support
        and utility classes used by the Rails framework.\n  platform: ruby\n  rubygems_version:
        \">= 0\"\n  ruby_version: \n  prerelease: false\n  licenses: \n  requirements:
        \n  sha: cc4edf9eaec23b14d6348feabb0f94980b70ef77d5107fc9dfa291cf5a3e40cb\n-
        authors: David Heinemeier Hansson\n  built_at: '2006-03-27T06:00:00.000Z'\n
        \ created_at: '2009-07-25T18:35:20.000Z'\n  description: Utility library which
        carries commonly used classes and goodies from\n    the Rails framework\n
        \ downloads_count: 7501\n  metadata: {}\n  number: 1.3.0\n  summary: Support
        and utility classes used by the Rails framework.\n  platform: ruby\n  rubygems_version:
        \">= 0\"\n  ruby_version: \n  prerelease: false\n  licenses: \n  requirements:
        \n  sha: 627991c2fdb321dfba24b3c01067f069b2a86676a8b37a16097accccd22a7057\n-
        authors: David Heinemeier Hansson\n  built_at: '2005-12-13T06:00:00.000Z'\n
        \ created_at: '2009-07-25T18:35:20.000Z'\n  description: Utility library which
        carries commonly used classes and goodies from\n    the Rails framework\n
        \ downloads_count: 8823\n  metadata: {}\n  number: 1.2.5\n  summary: Support
        and utility classes used by the Rails framework.\n  platform: ruby\n  rubygems_version:
        \">= 0\"\n  ruby_version: \n  prerelease: false\n  licenses: \n  requirements:
        \n  sha: 7de43e9d688b0fb164918449567ece2706827a64df9f55a5655178ec6f7419c7\n-
        authors: David Heinemeier Hansson\n  built_at: '2005-12-07T06:00:00.000Z'\n
        \ created_at: '2009-07-25T18:35:20.000Z'\n  description: Utility library which
        carries commonly used classes and goodies from\n    the Rails framework\n
        \ downloads_count: 7177\n  metadata: {}\n  number: 1.2.4\n  summary: Support
        and utility classes used by the Rails framework.\n  platform: ruby\n  rubygems_version:
        \">= 0\"\n  ruby_version: \n  prerelease: false\n  licenses: \n  requirements:
        \n  sha: 1bec1012728ed538ce73300706558694dc68d15442327fd7c26544bee26477cc\n-
        authors: David Heinemeier Hansson\n  built_at: '2005-11-06T23:00:00.000Z'\n
        \ created_at: '2009-07-25T18:35:20.000Z'\n  description: Utility library which
        carries commonly used classes and goodies from\n    the Rails framework\n
        \ downloads_count: 7242\n  metadata: {}\n  number: 1.2.3\n  summary: Support
        and utility classes used by the Rails framework.\n  platform: ruby\n  rubygems_version:
        \">= 0\"\n  ruby_version: \n  prerelease: false\n  licenses: \n  requirements:
        \n  sha: 865ceaeebd4196ea8b02a77830435545a453b7a963a3b67eb9e1cfd01c1d4574\n-
        authors: David Heinemeier Hansson\n  built_at: '2005-10-25T22:00:00.000Z'\n
        \ created_at: '2009-07-25T18:35:20.000Z'\n  description: Utility library which
        carries commonly used classes and goodies from\n    the Rails framework\n
        \ downloads_count: 7207\n  metadata: {}\n  number: 1.2.2\n  summary: Support
        and utility classes used by the Rails framework.\n  platform: ruby\n  rubygems_version:
        \">= 0\"\n  ruby_version: \n  prerelease: false\n  licenses: \n  requirements:
        \n  sha: 6fa4b574d2e7ee3f91d6ae30253f5ee56a998001b10b212ed2e87515b547198d\n-
        authors: David Heinemeier Hansson\n  built_at: '2005-10-19T04:00:00.000Z'\n
        \ created_at: '2009-07-25T18:35:20.000Z'\n  description: Utility library which
        carries commonly used classes and goodies from\n    the Rails framework\n
        \ downloads_count: 7327\n  metadata: {}\n  number: 1.2.1\n  summary: Support
        and utility classes used by the Rails framework.\n  platform: ruby\n  rubygems_version:
        \">= 0\"\n  ruby_version: \n  prerelease: false\n  licenses: \n  requirements:
        \n  sha: 0c7fe16d4165b341a4438e78e125f04fd5183f03f04761241268e05ec02b91ce\n-
        authors: David Heinemeier Hansson\n  built_at: '2005-07-11T04:00:00.000Z'\n
        \ created_at: '2009-07-25T18:35:20.000Z'\n  description: Utility library which
        carries commonly used classes and goodies from\n    the Rails framework\n
        \ downloads_count: 8962\n  metadata: {}\n  number: 1.1.1\n  summary: Support
        and utility classes used by the Rails framework.\n  platform: ruby\n  rubygems_version:
        \">= 0\"\n  ruby_version: \n  prerelease: false\n  licenses: \n  requirements:
        \n  sha: aca687b70e03175a9a91094969b8e4186851ebf7850e17efc0ab9cf0e4cfe449\n-
        authors: David Heinemeier Hansson\n  built_at: '2005-07-06T04:00:00.000Z'\n
        \ created_at: '2009-07-25T18:35:20.000Z'\n  description: Utility library which
        carries commonly used classes and goodies from\n    the Rails framework\n
        \ downloads_count: 7087\n  metadata: {}\n  number: 1.1.0\n  summary: Support
        and utility classes used by the Rails framework.\n  platform: ruby\n  rubygems_version:
        \">= 0\"\n  ruby_version: \n  prerelease: false\n  licenses: \n  requirements:
        \n  sha: 6279a1af3616b39e8193b9471a62a41df5356753013a7d9fe2aea3f36d30a05e\n-
        authors: David Heinemeier Hansson\n  built_at: '2005-04-19T04:00:00.000Z'\n
        \ created_at: '2009-07-25T18:35:21.000Z'\n  description: Utility library which
        carries commonly used classes and goodies from\n    the Rails framework\n
        \ downloads_count: 7679\n  metadata: {}\n  number: 1.0.4\n  summary: Support
        and utility classes used by the Rails framework.\n  platform: ruby\n  rubygems_version:
        \">= 0\"\n  ruby_version: \n  prerelease: false\n  licenses: \n  requirements:
        \n  sha: d756598b94c4171f345a23fafde81af978b2c34d7894d070ead55002716a8738\n-
        authors: David Heinemeier Hansson\n  built_at: '2005-03-27T05:00:00.000Z'\n
        \ created_at: '2009-07-25T18:35:21.000Z'\n  description: Utility library which
        carries commonly used classes and goodies from\n    the Rails framework\n
        \ downloads_count: 7065\n  metadata: {}\n  number: 1.0.3\n  summary: Support
        and utility classes used by the Rails framework.\n  platform: ruby\n  rubygems_version:
        \">= 0\"\n  ruby_version: \n  prerelease: false\n  licenses: \n  requirements:
        \n  sha: c8e028d89b85c15edde3be59021c002e12cc1f288edda33864d9b31e28451e98\n-
        authors: David Heinemeier Hansson\n  built_at: '2005-03-22T05:00:00.000Z'\n
        \ created_at: '2009-07-25T18:35:21.000Z'\n  description: Utility library which
        carries commonly used classes and goodies from\n    the Rails framework\n
        \ downloads_count: 7168\n  metadata: {}\n  number: 1.0.2\n  summary: Support
        and utility classes used by the Rails framework.\n  platform: ruby\n  rubygems_version:
        \">= 0\"\n  ruby_version: \n  prerelease: false\n  licenses: \n  requirements:
        \n  sha: 4279fc78861eb5e15488b7dc4519e115a69db57709228aac87d7bbd282cb6261\n-
        authors: David Heinemeier Hansson\n  built_at: '2005-03-07T05:00:00.000Z'\n
        \ created_at: '2009-07-25T18:35:21.000Z'\n  description: Utility library which
        carries commonly used classes and goodies from\n    the Rails framework\n
        \ downloads_count: 7330\n  metadata: {}\n  number: 1.0.1\n  summary: Support
        and utility classes used by the Rails framework.\n  platform: ruby\n  rubygems_version:
        \">= 0\"\n  ruby_version: \n  prerelease: false\n  licenses: \n  requirements:
        \n  sha: 8ed328af5d52fcde8db1c638b04f6c0f20aefd71e482901c287ddc74df5d3294\n-
        authors: David Heinemeier Hansson\n  built_at: '2005-02-24T05:00:00.000Z'\n
        \ created_at: '2009-07-25T18:35:21.000Z'\n  description: Utility library which
        carries commonly used classes and goodies from\n    the Rails framework\n
        \ downloads_count: 7485\n  metadata: {}\n  number: 1.0.0\n  summary: Support
        and utility classes used by the Rails framework.\n  platform: ruby\n  rubygems_version:
        \">= 0\"\n  ruby_version: \n  prerelease: false\n  licenses: \n  requirements:
        \n  sha: 96587e6ca04fb49be8770fdd0558c700c8b7c385021148756fa30e9d3024f600\n"
    http_version: 
  recorded_at: Fri, 06 Jan 2017 17:09:58 GMT
- request:
    method: get
    uri: https://rubygems.org/api/v1/gems/activesupport/owners.yaml
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Gems 0.8.3
      - Ruby
      Authorization:
      - 1da62a2449ff2bdd425e9e82261f7b72
      Connection:
      - keep-alive
      Keep-Alive:
      - '30'
      Content-Type:
      - application/x-www-form-urlencoded
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - text/yaml
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
      Content-Disposition:
      - attachment
      Content-Transfer-Encoding:
      - binary
      Cache-Control:
      - private
      X-Request-Id:
      - 5cfeedf5-7d27-4000-96c9-674cf33708b9
      X-Runtime:
      - '0.007542'
      X-Ua-Compatible:
      - IE=Edge,chrome=1
      X-Backend:
      - F_Rails 54.186.104.15:443
      Transfer-Encoding:
      - chunked
      Accept-Ranges:
      - bytes
      Date:
      - Fri, 06 Jan 2017 17:09:59 GMT
      Via:
      - 1.1 varnish
      Age:
      - '0'
      Connection:
      - keep-alive
      X-Served-By:
      - cache-bma7025-BMA
      X-Cache:
      - MISS
      X-Cache-Hits:
      - '0'
      X-Timer:
      - S1483722599.159504,VS0,VE203
      Vary:
      - Accept-Encoding,Fastly-SSL
      Etag:
      - '"304767835361b2e7fd454f784c9bc7fa"'
      Server:
      - RubyGems.org
    body:
      encoding: ASCII-8BIT
      string: "---\n- id: 71398\n  handle: kaspth\n  email: kaspth@gmail.com\n- id:
        528\n  handle: matthewd\n  email: matthew@trebex.net\n- id: 939\n  handle:
        senny\n  email: yves.senn@gmail.com\n- id: 59702\n  handle: chancancode\n
        \ email: godfreykfc@gmail.com\n- id: 662\n  handle: pixeltrix\n  email: andyw@pixeltrix.co.uk\n-
        id: 337\n  handle: \n  email: jeremy@bitsweat.net\n- id: 1550\n  handle: webster132\n
        \ email: david@loudthinking.com\n- id: 32977\n  handle: fxn\n  email: fxn@hashref.com\n-
        id: 207\n  handle: tenderlove\n  email: aaron.patterson@gmail.com\n- id: 840\n
        \ handle: spastorino\n  email: santiago@wyeworks.com\n- id: 43998\n  handle:
        guilleiguaran\n  email: guilleiguaran@gmail.com\n- id: 47349\n  handle: rafaelfranca\n
        \ email: rafaelmfranca@gmail.com\n- id: 429\n  handle: cantoniodasilva\n  email:
        carlosantoniodasilva@gmail.com\n"
    http_version: 
  recorded_at: Fri, 06 Jan 2017 17:09:59 GMT
- request:
    method: get
    uri: https://rubygems.org/api/v1/gems/concurrent-ruby.yaml
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Gems 0.8.3
      - Ruby
      Authorization:
      - 1da62a2449ff2bdd425e9e82261f7b72
      Connection:
      - keep-alive
      Keep-Alive:
      - '30'
      Content-Type:
      - application/x-www-form-urlencoded
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - text/yaml
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
      Content-Disposition:
      - attachment
      Content-Transfer-Encoding:
      - binary
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET
      Access-Control-Max-Age:
      - '1728000'
      Cache-Control:
      - private
      X-Request-Id:
      - 59c8f9c3-af52-4167-bb2f-1ededce6d2fe
      X-Runtime:
      - '0.015485'
      X-Ua-Compatible:
      - IE=Edge,chrome=1
      X-Backend:
      - F_Rails 54.186.104.15:443
      Transfer-Encoding:
      - chunked
      Accept-Ranges:
      - bytes
      Date:
      - Fri, 06 Jan 2017 17:09:59 GMT
      Via:
      - 1.1 varnish
      Connection:
      - keep-alive
      X-Served-By:
      - cache-bma7023-BMA
      X-Cache:
      - MISS
      X-Cache-Hits:
      - '0'
      X-Timer:
      - S1483722599.563334,VS0,VE207
      Vary:
      - Accept-Encoding,Fastly-SSL
      Etag:
      - '"677bc923318c971a0ca26644916f0a7a"'
      Server:
      - RubyGems.org
    body:
      encoding: ASCII-8BIT
      string: |
        ---
        name: concurrent-ruby
        downloads: 13499595
        version: 1.0.4
        version_downloads: 220073
        platform: ruby
        authors: Jerry D'Antonio, Petr Chalupa, The Ruby Concurrency Team
        info: |
          Modern concurrency tools including agents, futures, promises, thread pools, actors, supervisors, and more.
          Inspired by Erlang, Clojure, Go, JavaScript, actors, and classic concurrency patterns.
        licenses:
        - MIT
        metadata: {}
        sha: ebd266064280cf52fab521ddd369d51a95f6aff664119e229b07101a6088f25c
        project_uri: https://rubygems.org/gems/concurrent-ruby
        gem_uri: https://rubygems.org/gems/concurrent-ruby-1.0.4.gem
        homepage_uri: http://www.concurrent-ruby.com
        wiki_uri: ''
        documentation_uri: http://ruby-concurrency.github.io/concurrent-ruby/frames.html
        mailing_list_uri: https://groups.google.com/forum/#!forum/concurrent-ruby
        source_code_uri: https://github.com/ruby-concurrency/concurrent-ruby
        bug_tracker_uri: https://github.com/ruby-concurrency/concurrent-ruby/issues
        dependencies:
          development: []
          runtime: []
    http_version: 
  recorded_at: Fri, 06 Jan 2017 17:09:59 GMT
- request:
    method: get
    uri: https://rubygems.org/api/v1/versions/concurrent-ruby.yaml
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Gems 0.8.3
      - Ruby
      Authorization:
      - 1da62a2449ff2bdd425e9e82261f7b72
      Connection:
      - keep-alive
      Keep-Alive:
      - '30'
      Content-Type:
      - application/x-www-form-urlencoded
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - text/yaml
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
      Etag:
      - '"bb4030b9f36419af88615021440d5013"'
      Last-Modified:
      - Tue, 27 Dec 2016 02:10:19 GMT
      Content-Disposition:
      - attachment
      Content-Transfer-Encoding:
      - binary
      Cache-Control:
      - max-age=0, public
      X-Request-Id:
      - c274e287-dde4-4c9e-a78c-ad94989b281b
      X-Runtime:
      - '0.173670'
      X-Ua-Compatible:
      - IE=Edge,chrome=1
      X-Backend:
      - F_Rails 54.186.104.15:443
      Content-Length:
      - '7731'
      Accept-Ranges:
      - bytes
      Date:
      - Fri, 06 Jan 2017 17:09:59 GMT
      Via:
      - 1.1 varnish
      Age:
      - '35'
      Connection:
      - keep-alive
      X-Served-By:
      - cache-bma7026-BMA
      X-Cache:
      - HIT
      X-Cache-Hits:
      - '1'
      X-Timer:
      - S1483722599.944423,VS0,VE0
      Vary:
      - Accept-Encoding,Fastly-SSL
      Server:
      - RubyGems.org
    body:
      encoding: ASCII-8BIT
      string: "---\n- authors: Jerry D'Antonio, Petr Chalupa, The Ruby Concurrency
        Team\n  built_at: '2016-12-27T00:00:00.000Z'\n  created_at: '2016-12-27T02:10:18.233Z'\n
        \ description: |\n    Modern concurrency tools including agents, futures,
        promises, thread pools, actors, supervisors, and more.\n    Inspired by Erlang,
        Clojure, Go, JavaScript, actors, and classic concurrency patterns.\n  downloads_count:
        3562\n  metadata: {}\n  number: 1.0.4\n  summary: Modern concurrency tools
        for Ruby. Inspired by Erlang, Clojure, Scala,\n    Haskell, F#, C#, Java,
        and classic concurrency patterns.\n  platform: java\n  rubygems_version: \">=
        0\"\n  ruby_version: \">= 1.9.3\"\n  prerelease: false\n  licenses:\n  - MIT\n
        \ requirements: []\n  sha: 2da72c7f85e5c258b1d9e203ddd008ac9ad8e6114c0c905047dbca5a810bd48e\n-
        authors: Jerry D'Antonio, Petr Chalupa, The Ruby Concurrency Team\n  built_at:
        '2016-12-27T00:00:00.000Z'\n  created_at: '2016-12-27T02:10:10.447Z'\n  description:
        |\n    Modern concurrency tools including agents, futures, promises, thread
        pools, actors, supervisors, and more.\n    Inspired by Erlang, Clojure, Go,
        JavaScript, actors, and classic concurrency patterns.\n  downloads_count:
        220073\n  metadata: {}\n  number: 1.0.4\n  summary: Modern concurrency tools
        for Ruby. Inspired by Erlang, Clojure, Scala,\n    Haskell, F#, C#, Java,
        and classic concurrency patterns.\n  platform: ruby\n  rubygems_version: \">=
        0\"\n  ruby_version: \">= 1.9.3\"\n  prerelease: false\n  licenses:\n  - MIT\n
        \ requirements: []\n  sha: ebd266064280cf52fab521ddd369d51a95f6aff664119e229b07101a6088f25c\n-
        authors: Jerry D'Antonio, Petr Chalupa, The Ruby Concurrency Team\n  built_at:
        '2016-12-17T00:00:00.000Z'\n  created_at: '2016-12-17T19:21:22.242Z'\n  description:
        |\n    Modern concurrency tools including agents, futures, promises, thread
        pools, actors, supervisors, and more.\n    Inspired by Erlang, Clojure, Go,
        JavaScript, actors, and classic concurrency patterns.\n  downloads_count:
        3105\n  metadata: {}\n  number: 1.0.3\n  summary: Modern concurrency tools
        for Ruby. Inspired by Erlang, Clojure, Scala,\n    Haskell, F#, C#, Java,
        and classic concurrency patterns.\n  platform: java\n  rubygems_version: \">=
        0\"\n  ruby_version: \">= 1.9.3\"\n  prerelease: false\n  licenses:\n  - MIT\n
        \ requirements: []\n  sha: 64cd678add8d7f9796afc88ea2abeead1f4eca845f6b9a19a7770dad41917f95\n-
        authors: Jerry D'Antonio, Petr Chalupa, The Ruby Concurrency Team\n  built_at:
        '2016-12-17T00:00:00.000Z'\n  created_at: '2016-12-17T19:21:10.513Z'\n  description:
        |\n    Modern concurrency tools including agents, futures, promises, thread
        pools, actors, supervisors, and more.\n    Inspired by Erlang, Clojure, Go,
        JavaScript, actors, and classic concurrency patterns.\n  downloads_count:
        216554\n  metadata: {}\n  number: 1.0.3\n  summary: Modern concurrency tools
        for Ruby. Inspired by Erlang, Clojure, Scala,\n    Haskell, F#, C#, Java,
        and classic concurrency patterns.\n  platform: ruby\n  rubygems_version: \">=
        0\"\n  ruby_version: \">= 1.9.3\"\n  prerelease: false\n  licenses:\n  - MIT\n
        \ requirements: []\n  sha: f147ee7b088953d964f09b12c8c99cbed839426747dbbb22e48f16edf47a8dea\n-
        authors: Jerry D'Antonio, The Ruby Concurrency Team\n  built_at: '2016-06-23T00:00:00.000Z'\n
        \ created_at: '2016-06-23T16:35:12.031Z'\n  description: |\n    Modern concurrency
        tools including agents, futures, promises, thread pools, actors, supervisors,
        and more.\n    Inspired by Erlang, Clojure, Go, JavaScript, actors, and classic
        concurrency patterns.\n  downloads_count: 739\n  metadata: {}\n  number: 1.0.3.pre3\n
        \ summary: Modern concurrency tools for Ruby. Inspired by Erlang, Clojure,
        Scala,\n    Haskell, F#, C#, Java, and classic concurrency patterns.\n  platform:
        java\n  rubygems_version: \"> 1.3.1\"\n  ruby_version: \">= 1.9.3\"\n  prerelease:
        true\n  licenses:\n  - MIT\n  requirements: []\n  sha: 79a2f686973e1b514aff7be39539a18a4625f6355d7d696b31fb31f103ea681d\n-
        authors: Jerry D'Antonio, The Ruby Concurrency Team\n  built_at: '2016-06-23T00:00:00.000Z'\n
        \ created_at: '2016-06-23T16:35:03.811Z'\n  description: |\n    Modern concurrency
        tools including agents, futures, promises, thread pools, actors, supervisors,
        and more.\n    Inspired by Erlang, Clojure, Go, JavaScript, actors, and classic
        concurrency patterns.\n  downloads_count: 64084\n  metadata: {}\n  number:
        1.0.3.pre3\n  summary: Modern concurrency tools for Ruby. Inspired by Erlang,
        Clojure, Scala,\n    Haskell, F#, C#, Java, and classic concurrency patterns.\n
        \ platform: ruby\n  rubygems_version: \"> 1.3.1\"\n  ruby_version: \">= 1.9.3\"\n
        \ prerelease: true\n  licenses:\n  - MIT\n  requirements: []\n  sha: ed6c87dad91a37649ed6d80d31b8747d2de90ca763ee2b0cec33960b512037fd\n-
        authors: Jerry D'Antonio, The Ruby Concurrency Team\n  built_at: '2016-05-02T00:00:00.000Z'\n
        \ created_at: '2016-05-02T14:36:22.154Z'\n  description: |\n    Modern concurrency
        tools including agents, futures, promises, thread pools, actors, supervisors,
        and more.\n    Inspired by Erlang, Clojure, Go, JavaScript, actors, and classic
        concurrency patterns.\n  downloads_count: 133226\n  metadata: {}\n  number:
        1.0.2\n  summary: Modern concurrency tools for Ruby. Inspired by Erlang, Clojure,
        Scala,\n    Haskell, F#, C#, Java, and classic concurrency patterns.\n  platform:
        java\n  rubygems_version: \">= 0\"\n  ruby_version: \">= 1.9.3\"\n  prerelease:
        false\n  licenses:\n  - MIT\n  requirements: []\n  sha: 6496a7f5671ef84f386a45c623a5dc4fe1694e0042d0d720a6f4363dff342091\n-
        authors: Jerry D'Antonio, The Ruby Concurrency Team\n  built_at: '2016-05-02T00:00:00.000Z'\n
        \ created_at: '2016-05-02T14:36:15.905Z'\n  description: |\n    Modern concurrency
        tools including agents, futures, promises, thread pools, actors, supervisors,
        and more.\n    Inspired by Erlang, Clojure, Go, JavaScript, actors, and classic
        concurrency patterns.\n  downloads_count: 7308621\n  metadata: {}\n  number:
        1.0.2\n  summary: Modern concurrency tools for Ruby. Inspired by Erlang, Clojure,
        Scala,\n    Haskell, F#, C#, Java, and classic concurrency patterns.\n  platform:
        ruby\n  rubygems_version: \">= 0\"\n  ruby_version: \">= 1.9.3\"\n  prerelease:
        false\n  licenses:\n  - MIT\n  requirements: []\n  sha: 5c4b4cce37fc538660fae3b9fb7b51a2bc443eda4c5394e51521527fb6d264cd\n-
        authors: Jerry D'Antonio, The Ruby Concurrency Team\n  built_at: '2016-02-27T00:00:00.000Z'\n
        \ created_at: '2016-02-27T14:03:29.042Z'\n  description: |\n    Modern concurrency
        tools including agents, futures, promises, thread pools, actors, supervisors,
        and more.\n    Inspired by Erlang, Clojure, Go, JavaScript, actors, and classic
        concurrency patterns.\n  downloads_count: 49450\n  metadata: {}\n  number:
        1.0.1\n  summary: Modern concurrency tools for Ruby. Inspired by Erlang, Clojure,
        Scala,\n    Haskell, F#, C#, Java, and classic concurrency patterns.\n  platform:
        java\n  rubygems_version: \">= 0\"\n  ruby_version: \">= 1.9.3\"\n  prerelease:
        false\n  licenses:\n  - MIT\n  requirements: []\n  sha: a59dba6a9ad1fb0e0b73be6a803912d20407136135bfc97659e1eef41c3fd2ca\n-
        authors: Jerry D'Antonio, The Ruby Concurrency Team\n  built_at: '2016-02-27T00:00:00.000Z'\n
        \ created_at: '2016-02-27T14:03:24.023Z'\n  description: |\n    Modern concurrency
        tools including agents, futures, promises, thread pools, actors, supervisors,
        and more.\n    Inspired by Erlang, Clojure, Go, JavaScript, actors, and classic
        concurrency patterns.\n  downloads_count: 2469810\n  metadata: {}\n  number:
        1.0.1\n  summary: Modern concurrency tools for Ruby. Inspired by Erlang, Clojure,
        Scala,\n    Haskell, F#, C#, Java, and classic concurrency patterns.\n  platform:
        ruby\n  rubygems_version: \">= 0\"\n  ruby_version: \">= 1.9.3\"\n  prerelease:
        false\n  licenses:\n  - MIT\n  requirements: []\n  sha: 565616a4e5551162cae01b71ea262afa354c5bd23dd300ff0ee060bd1ebf2f8e\n-
        authors: Jerry D'Antonio, The Ruby Concurrency Team\n  built_at: '2015-11-13T00:00:00.000Z'\n
        \ created_at: '2015-11-13T15:15:26.002Z'\n  description: |\n    Modern concurrency
        tools including agents, futures, promises, thread pools, actors, supervisors,
        and more.\n    Inspired by Erlang, Clojure, Go, JavaScript, actors, and classic
        concurrency patterns.\n  downloads_count: 84629\n  metadata: {}\n  number:
        1.0.0\n  summary: Modern concurrency tools for Ruby. Inspired by Erlang, Clojure,
        Scala,\n    Haskell, F#, C#, Java, and classic concurrency patterns.\n  platform:
        java\n  rubygems_version: \">= 0\"\n  ruby_version: \">= 1.9.3\"\n  prerelease:
        false\n  licenses:\n  - MIT\n  requirements: []\n  sha: 7c95f74662623b4cb582deb110180115fb290c4220b66fcda19f4922191ccb81\n-
        authors: Jerry D'Antonio, The Ruby Concurrency Team\n  built_at: '2015-11-13T00:00:00.000Z'\n
        \ created_at: '2015-11-13T15:15:21.071Z'\n  description: |\n    Modern concurrency
        tools including agents, futures, promises, thread pools, actors, supervisors,
        and more.\n    Inspired by Erlang, Clojure, Go, JavaScript, actors, and classic
        concurrency patterns.\n  downloads_count: 2530318\n  metadata: {}\n  number:
        1.0.0\n  summary: Modern concurrency tools for Ruby. Inspired by Erlang, Clojure,
        Scala,\n    Haskell, F#, C#, Java, and classic concurrency patterns.\n  platform:
        ruby\n  rubygems_version: \">= 0\"\n  ruby_version: \">= 1.9.3\"\n  prerelease:
        false\n  licenses:\n  - MIT\n  requirements: []\n  sha: bba0491c25d791fa8ada675b8818f938f6f21e1b6feb9bedb720ed3f1d7b0d63\n-
        authors: Jerry D'Antonio, The Ruby Concurrency Team\n  built_at: '2015-11-04T00:00:00.000Z'\n
        \ created_at: '2015-11-05T01:05:00.641Z'\n  description: |\n    Modern concurrency
        tools including agents, futures, promises, thread pools, actors, supervisors,
        and more.\n    Inspired by Erlang, Clojure, Go, JavaScript, actors, and classic
        concurrency patterns.\n  downloads_count: 623\n  metadata: {}\n  number: 1.0.0.pre5\n
        \ summary: Modern concurrency tools for Ruby. Inspired by Erlang, Clojure,
        Scala,\n    Haskell, F#, C#, Java, and classic concurrency patterns.\n  platform:
        java\n  rubygems_version: \"> 1.3.1\"\n  ruby_version: \">= 1.9.3\"\n  prerelease:
        true\n  licenses:\n  - MIT\n  requirements: []\n  sha: 509af3def4b0769ac3c5348a049fa0c4a3343b7036b44deff6e54d6f2194da70\n-
        authors: Jerry D'Antonio, The Ruby Concurrency Team\n  built_at: '2015-11-04T00:00:00.000Z'\n
        \ created_at: '2015-11-05T01:04:55.685Z'\n  description: |\n    Modern concurrency
        tools including agents, futures, promises, thread pools, actors, supervisors,
        and more.\n    Inspired by Erlang, Clojure, Go, JavaScript, actors, and classic
        concurrency patterns.\n  downloads_count: 4821\n  metadata: {}\n  number:
        1.0.0.pre5\n  summary: Modern concurrency tools for Ruby. Inspired by Erlang,
        Clojure, Scala,\n    Haskell, F#, C#, Java, and classic concurrency patterns.\n
        \ platform: ruby\n  rubygems_version: \"> 1.3.1\"\n  ruby_version: \">= 1.9.3\"\n
        \ prerelease: true\n  licenses:\n  - MIT\n  requirements: []\n  sha: cf179a0ed3d05747fcadd83ffacac3f4d250ef7afb97bfb774f0537613c5fe4c\n-
        authors: Jerry D'Antonio, The Ruby Concurrency Team\n  built_at: '2015-10-08T00:00:00.000Z'\n
        \ created_at: '2015-10-08T23:38:01.155Z'\n  description: |\n    Modern concurrency
        tools including agents, futures, promises, thread pools, actors, supervisors,
        and more.\n    Inspired by Erlang, Clojure, Go, JavaScript, actors, and classic
        concurrency patterns.\n  downloads_count: 1367\n  metadata: {}\n  number:
        1.0.0.pre4\n  summary: Modern concurrency tools for Ruby. Inspired by Erlang,
        Clojure, Scala,\n    Haskell, F#, C#, Java, and classic concurrency patterns.\n
        \ platform: java\n  rubygems_version: \"> 1.3.1\"\n  ruby_version: \">= 1.9.3\"\n
        \ prerelease: true\n  licenses:\n  - MIT\n  requirements: []\n  sha: a527c10e6657541c0b34be4eeac754aa9625d9e6bf5a9fadbd3aa2e1eea17c04\n-
        authors: Jerry D'Antonio, The Ruby Concurrency Team\n  built_at: '2015-10-08T00:00:00.000Z'\n
        \ created_at: '2015-10-08T23:37:55.458Z'\n  description: |\n    Modern concurrency
        tools including agents, futures, promises, thread pools, actors, supervisors,
        and more.\n    Inspired by Erlang, Clojure, Go, JavaScript, actors, and classic
        concurrency patterns.\n  downloads_count: 11786\n  metadata: {}\n  number:
        1.0.0.pre4\n  summary: Modern concurrency tools for Ruby. Inspired by Erlang,
        Clojure, Scala,\n    Haskell, F#, C#, Java, and classic concurrency patterns.\n
        \ platform: ruby\n  rubygems_version: \"> 1.3.1\"\n  ruby_version: \">= 1.9.3\"\n
        \ prerelease: true\n  licenses:\n  - MIT\n  requirements: []\n  sha: a62a8794f352a5f1cc10886f21feeab42b92986c1697ab85a36fa0a831bafe8a\n-
        authors: Jerry D'Antonio, The Ruby Concurrency Team\n  built_at: '2015-09-29T00:00:00.000Z'\n
        \ created_at: '2015-09-30T01:23:34.130Z'\n  description: |\n    Modern concurrency
        tools including agents, futures, promises, thread pools, actors, supervisors,
        and more.\n    Inspired by Erlang, Clojure, Go, JavaScript, actors, and classic
        concurrency patterns.\n  downloads_count: 512\n  metadata: {}\n  number: 1.0.0.pre3\n
        \ summary: Modern concurrency tools for Ruby. Inspired by Erlang, Clojure,
        Scala,\n    Haskell, F#, C#, Java, and classic concurrency patterns.\n  platform:
        java\n  rubygems_version: \"> 1.3.1\"\n  ruby_version: \">= 1.9.3\"\n  prerelease:
        true\n  licenses:\n  - MIT\n  requirements: []\n  sha: 38d6bdd4b587cba4b230dfa4640f819d8c3982435a6e4e467dccd1c2ec8d80b3\n-
        authors: Jerry D'Antonio, The Ruby Concurrency Team\n  built_at: '2015-09-29T00:00:00.000Z'\n
        \ created_at: '2015-09-30T01:23:29.196Z'\n  description: |\n    Modern concurrency
        tools including agents, futures, promises, thread pools, actors, supervisors,
        and more.\n    Inspired by Erlang, Clojure, Go, JavaScript, actors, and classic
        concurrency patterns.\n  downloads_count: 2987\n  metadata: {}\n  number:
        1.0.0.pre3\n  summary: Modern concurrency tools for Ruby. Inspired by Erlang,
        Clojure, Scala,\n    Haskell, F#, C#, Java, and classic concurrency patterns.\n
        \ platform: ruby\n  rubygems_version: \"> 1.3.1\"\n  ruby_version: \">= 1.9.3\"\n
        \ prerelease: true\n  licenses:\n  - MIT\n  requirements: []\n  sha: 8d7dc826bacb55f3218dafa41d1b6954bfc4662431b3f2586dd801284fe17da5\n-
        authors: Jerry D'Antonio, The Ruby Concurrency Team\n  built_at: '2015-09-19T00:00:00.000Z'\n
        \ created_at: '2015-09-19T06:40:53.040Z'\n  description: |\n    Modern concurrency
        tools including agents, futures, promises, thread pools, actors, supervisors,
        and more.\n    Inspired by Erlang, Clojure, Go, JavaScript, actors, and classic
        concurrency patterns.\n  downloads_count: 493\n  metadata: {}\n  number: 1.0.0.pre2\n
        \ summary: Modern concurrency tools for Ruby. Inspired by Erlang, Clojure,
        Scala,\n    Haskell, F#, C#, Java, and classic concurrency patterns.\n  platform:
        java\n  rubygems_version: \"> 1.3.1\"\n  ruby_version: \">= 1.9.3\"\n  prerelease:
        true\n  licenses:\n  - MIT\n  requirements: []\n  sha: 0c9956c0b5bbfc0c03d1663fe815b85f76667b8a3168648be2ea4b471e51dcf5\n-
        authors: Jerry D'Antonio, The Ruby Concurrency Team\n  built_at: '2015-09-19T00:00:00.000Z'\n
        \ created_at: '2015-09-19T06:40:47.027Z'\n  description: |\n    Modern concurrency
        tools including agents, futures, promises, thread pools, actors, supervisors,
        and more.\n    Inspired by Erlang, Clojure, Go, JavaScript, actors, and classic
        concurrency patterns.\n  downloads_count: 3566\n  metadata: {}\n  number:
        1.0.0.pre2\n  summary: Modern concurrency tools for Ruby. Inspired by Erlang,
        Clojure, Scala,\n    Haskell, F#, C#, Java, and classic concurrency patterns.\n
        \ platform: ruby\n  rubygems_version: \"> 1.3.1\"\n  ruby_version: \">= 1.9.3\"\n
        \ prerelease: true\n  licenses:\n  - MIT\n  requirements: []\n  sha: 2ed87a549ba37800e0e0b18f4c189e986fdcd69229bbeb08bcce7c16d1a07974\n-
        authors: Jerry D'Antonio, The Ruby Concurrency Team\n  built_at: '2015-08-19T00:00:00.000Z'\n
        \ created_at: '2015-08-19T23:34:33.494Z'\n  description: |\n    Modern concurrency
        tools including agents, futures, promises, thread pools, actors, supervisors,
        and more.\n    Inspired by Erlang, Clojure, Go, JavaScript, actors, and classic
        concurrency patterns.\n  downloads_count: 7864\n  metadata: {}\n  number:
        1.0.0.pre1\n  summary: Modern concurrency tools for Ruby. Inspired by Erlang,
        Clojure, Scala,\n    Haskell, F#, C#, Java, and classic concurrency patterns.\n
        \ platform: ruby\n  rubygems_version: \"> 1.3.1\"\n  ruby_version: \">= 1.9.3\"\n
        \ prerelease: true\n  licenses:\n  - MIT\n  requirements: []\n  sha: 59664c2324ab4111518e326bc878b6eb0f0c5a51199838914168267e33d8147f\n-
        authors: Jerry D'Antonio, The Ruby Concurrency Team\n  built_at: '2015-08-19T00:00:00.000Z'\n
        \ created_at: '2015-08-19T23:34:27.958Z'\n  description: |\n    Modern concurrency
        tools including agents, futures, promises, thread pools, actors, supervisors,
        and more.\n    Inspired by Erlang, Clojure, Go, JavaScript, actors, and classic
        concurrency patterns.\n  downloads_count: 595\n  metadata: {}\n  number: 1.0.0.pre1\n
        \ summary: Modern concurrency tools for Ruby. Inspired by Erlang, Clojure,
        Scala,\n    Haskell, F#, C#, Java, and classic concurrency patterns.\n  platform:
        java\n  rubygems_version: \"> 1.3.1\"\n  ruby_version: \">= 1.9.3\"\n  prerelease:
        true\n  licenses:\n  - MIT\n  requirements: []\n  sha: 1f70ce3e6e9c8a55d36726757c2a16e28adb38a86a7d1ac9b9d0b24f8052d06c\n-
        authors: Jerry D'Antonio, The Ruby Concurrency Team\n  built_at: '2015-11-04T00:00:00.000Z'\n
        \ created_at: '2015-11-04T23:39:11.498Z'\n  description: |\n    Modern concurrency
        tools including agents, futures, promises, thread pools, actors, supervisors,
        and more.\n    Inspired by Erlang, Clojure, Go, JavaScript, actors, and classic
        concurrency patterns.\n  downloads_count: 28334\n  metadata: {}\n  number:
        0.9.2\n  summary: Modern concurrency tools for Ruby. Inspired by Erlang, Clojure,
        Scala,\n    Haskell, F#, C#, Java, and classic concurrency patterns.\n  platform:
        java\n  rubygems_version: \">= 0\"\n  ruby_version: \">= 1.9.3\"\n  prerelease:
        false\n  licenses:\n  - MIT\n  requirements: []\n  sha: 42985e8925aba0b4599b1c2a37008a73100041fa7fe00e72066b4f9f6c7fb274\n-
        authors: Jerry D'Antonio, The Ruby Concurrency Team\n  built_at: '2015-11-04T00:00:00.000Z'\n
        \ created_at: '2015-11-04T23:39:07.014Z'\n  description: |\n    Modern concurrency
        tools including agents, futures, promises, thread pools, actors, supervisors,
        and more.\n    Inspired by Erlang, Clojure, Go, JavaScript, actors, and classic
        concurrency patterns.\n  downloads_count: 98317\n  metadata: {}\n  number:
        0.9.2\n  summary: Modern concurrency tools for Ruby. Inspired by Erlang, Clojure,
        Scala,\n    Haskell, F#, C#, Java, and classic concurrency patterns.\n  platform:
        ruby\n  rubygems_version: \">= 0\"\n  ruby_version: \">= 1.9.3\"\n  prerelease:
        false\n  licenses:\n  - MIT\n  requirements: []\n  sha: de0ecd09a9133e9be1ad2934547e44075e0a68a515cda10dc0864a11fded9b7c\n-
        authors: Jerry D'Antonio, The Ruby Concurrency Team\n  built_at: '2015-08-09T00:00:00.000Z'\n
        \ created_at: '2015-08-09T16:18:42.584Z'\n  description: |\n    Modern concurrency
        tools including agents, futures, promises, thread pools, actors, supervisors,
        and more.\n    Inspired by Erlang, Clojure, Go, JavaScript, actors, and classic
        concurrency patterns.\n  downloads_count: 61405\n  metadata: {}\n  number:
        0.9.1\n  summary: Modern concurrency tools for Ruby. Inspired by Erlang, Clojure,
        Scala,\n    Haskell, F#, C#, Java, and classic concurrency patterns.\n  platform:
        ruby\n  rubygems_version: \">= 0\"\n  ruby_version: \">= 1.9.3\"\n  prerelease:
        false\n  licenses:\n  - MIT\n  requirements: []\n  sha: 13b66e5c57274693ec945db733208a919544be67b43db0a393e9d94964ecadf8\n-
        authors: Jerry D'Antonio, The Ruby Concurrency Team\n  built_at: '2015-08-09T00:00:00.000Z'\n
        \ created_at: '2015-08-09T16:18:38.156Z'\n  description: |\n    Modern concurrency
        tools including agents, futures, promises, thread pools, actors, supervisors,
        and more.\n    Inspired by Erlang, Clojure, Go, JavaScript, actors, and classic
        concurrency patterns.\n  downloads_count: 14829\n  metadata: {}\n  number:
        0.9.1\n  summary: Modern concurrency tools for Ruby. Inspired by Erlang, Clojure,
        Scala,\n    Haskell, F#, C#, Java, and classic concurrency patterns.\n  platform:
        java\n  rubygems_version: \">= 0\"\n  ruby_version: \">= 1.9.3\"\n  prerelease:
        false\n  licenses:\n  - MIT\n  requirements: []\n  sha: fed602fa5528dfebba70f2ce1661ff52897b16124c287a25f4dc6918dc0f0747\n-
        authors: Jerry D'Antonio, The Ruby Concurrency Team\n  built_at: '2015-07-10T00:00:00.000Z'\n
        \ created_at: '2015-07-10T16:08:40.199Z'\n  description: |\n    Modern concurrency
        tools including agents, futures, promises, thread pools, actors, supervisors,
        and more.\n    Inspired by Erlang, Clojure, Go, JavaScript, actors, and classic
        concurrency patterns.\n  downloads_count: 12123\n  metadata: {}\n  number:
        0.9.0\n  summary: Modern concurrency tools for Ruby. Inspired by Erlang, Clojure,
        Scala,\n    Haskell, F#, C#, Java, and classic concurrency patterns.\n  platform:
        ruby\n  rubygems_version: \">= 0\"\n  ruby_version: \">= 1.9.3\"\n  prerelease:
        false\n  licenses:\n  - MIT\n  requirements: []\n  sha: a88574aa86900dd2435396849c730ce04437304a1725f5f5d51dad0f65b78b9f\n-
        authors: Jerry D'Antonio, The Ruby Concurrency Team\n  built_at: '2015-07-10T00:00:00.000Z'\n
        \ created_at: '2015-07-10T16:08:30.570Z'\n  description: |\n    Modern concurrency
        tools including agents, futures, promises, thread pools, actors, supervisors,
        and more.\n    Inspired by Erlang, Clojure, Go, JavaScript, actors, and classic
        concurrency patterns.\n  downloads_count: 4438\n  metadata: {}\n  number:
        0.9.0\n  summary: Modern concurrency tools for Ruby. Inspired by Erlang, Clojure,
        Scala,\n    Haskell, F#, C#, Java, and classic concurrency patterns.\n  platform:
        java\n  rubygems_version: \">= 0\"\n  ruby_version: \">= 1.9.3\"\n  prerelease:
        false\n  licenses:\n  - MIT\n  requirements: []\n  sha: d007330d979ef77add6f452c0a15c15d3b90a2d9e1ef527426feef53d5a22db1\n-
        authors: Jerry D'Antonio, The Ruby Concurrency Team\n  built_at: '2015-06-22T00:00:00.000Z'\n
        \ created_at: '2015-06-22T12:54:49.537Z'\n  description: |\n    Modern concurrency
        tools including agents, futures, promises, thread pools, actors, supervisors,
        and more.\n    Inspired by Erlang, Clojure, Go, JavaScript, actors, and classic
        concurrency patterns.\n  downloads_count: 558\n  metadata: {}\n  number: 0.9.0.pre3\n
        \ summary: Modern concurrency tools for Ruby. Inspired by Erlang, Clojure,
        Scala,\n    Haskell, F#, C#, Java, and classic concurrency patterns.\n  platform:
        java\n  rubygems_version: \"> 1.3.1\"\n  ruby_version: \">= 1.9.3\"\n  prerelease:
        true\n  licenses:\n  - MIT\n  requirements: []\n  sha: b7c48e2d10a56c586463e2458ee5213f5320080c33143980af41360b543d4f78\n-
        authors: Jerry D'Antonio, The Ruby Concurrency Team\n  built_at: '2015-06-22T00:00:00.000Z'\n
        \ created_at: '2015-06-22T12:54:44.437Z'\n  description: |\n    Modern concurrency
        tools including agents, futures, promises, thread pools, actors, supervisors,
        and more.\n    Inspired by Erlang, Clojure, Go, JavaScript, actors, and classic
        concurrency patterns.\n  downloads_count: 1488\n  metadata: {}\n  number:
        0.9.0.pre3\n  summary: Modern concurrency tools for Ruby. Inspired by Erlang,
        Clojure, Scala,\n    Haskell, F#, C#, Java, and classic concurrency patterns.\n
        \ platform: ruby\n  rubygems_version: \"> 1.3.1\"\n  ruby_version: \">= 1.9.3\"\n
        \ prerelease: true\n  licenses:\n  - MIT\n  requirements: []\n  sha: 214d77c83d9dda4c297af821ef543ef1600df180f3e9aab46ff98166b94ab2ef\n-
        authors: Jerry D'Antonio, The Ruby Concurrency Team\n  built_at: '2015-06-08T00:00:00.000Z'\n
        \ created_at: '2015-06-08T04:25:15.356Z'\n  description: |\n    Modern concurrency
        tools including agents, futures, promises, thread pools, actors, supervisors,
        and more.\n    Inspired by Erlang, Clojure, Go, JavaScript, actors, and classic
        concurrency patterns.\n  downloads_count: 694\n  metadata: {}\n  number: 0.9.0.pre2\n
        \ summary: Modern concurrency tools for Ruby. Inspired by Erlang, Clojure,
        Scala,\n    Haskell, F#, C#, Java, and classic concurrency patterns.\n  platform:
        ruby\n  rubygems_version: \"> 1.3.1\"\n  ruby_version: \">= 1.9.3\"\n  prerelease:
        true\n  licenses:\n  - MIT\n  requirements: []\n  sha: 1b883698f3f94b0cbc33918aa686f032cb2628f50427a3d5dd4c5d065513e832\n-
        authors: Jerry D'Antonio, The Ruby Concurrency Team\n  built_at: '2015-06-08T00:00:00.000Z'\n
        \ created_at: '2015-06-08T04:25:04.138Z'\n  description: |\n    Modern concurrency
        tools including agents, futures, promises, thread pools, actors, supervisors,
        and more.\n    Inspired by Erlang, Clojure, Go, JavaScript, actors, and classic
        concurrency patterns.\n  downloads_count: 519\n  metadata: {}\n  number: 0.9.0.pre2\n
        \ summary: Modern concurrency tools for Ruby. Inspired by Erlang, Clojure,
        Scala,\n    Haskell, F#, C#, Java, and classic concurrency patterns.\n  platform:
        java\n  rubygems_version: \"> 1.3.1\"\n  ruby_version: \">= 1.9.3\"\n  prerelease:
        true\n  licenses:\n  - MIT\n  requirements: []\n  sha: 8d0b278cfb18406058154e72ff49fa97216320e06d41d81c68a8d14b2ecd1779\n-
        authors: Jerry D'Antonio\n  built_at: '2015-01-25T00:00:00.000Z'\n  created_at:
        '2015-01-25T17:48:37.514Z'\n  description: |2\n        Modern concurrency
        tools including agents, futures, promises, thread pools, actors, supervisors,
        and more.\n        Inspired by Erlang, Clojure, Go, JavaScript, actors, and
        classic concurrency patterns.\n  downloads_count: 40267\n  metadata: {}\n
        \ number: 0.8.0\n  summary: Modern concurrency tools for Ruby. Inspired by
        Erlang, Clojure, Scala,\n    Haskell, F#, C#, Java, and classic concurrency
        patterns.\n  platform: ruby\n  rubygems_version: \">= 0\"\n  ruby_version:
        \">= 1.9.3\"\n  prerelease: false\n  licenses:\n  - MIT\n  requirements: []\n
        \ sha: 1da7e62e6853cafbc351280e8638110a7709d10350b7f3290d54a303d977e04d\n-
        authors: Jerry D'Antonio\n  built_at: '2015-01-25T00:00:00.000Z'\n  created_at:
        '2015-01-25T17:48:26.207Z'\n  description: |2\n        Modern concurrency
        tools including agents, futures, promises, thread pools, actors, supervisors,
        and more.\n        Inspired by Erlang, Clojure, Go, JavaScript, actors, and
        classic concurrency patterns.\n  downloads_count: 15488\n  metadata: {}\n
        \ number: 0.8.0\n  summary: Modern concurrency tools for Ruby. Inspired by
        Erlang, Clojure, Scala,\n    Haskell, F#, C#, Java, and classic concurrency
        patterns.\n  platform: java\n  rubygems_version: \">= 0\"\n  ruby_version:
        \">= 1.9.3\"\n  prerelease: false\n  licenses:\n  - MIT\n  requirements: []\n
        \ sha: d75b184cf8a0a6f3cd2326d76bf8a9b9d622021c0fd904d7fd36ff574da20a5e\n-
        authors: Jerry D'Antonio\n  built_at: '2015-01-15T00:00:00.000Z'\n  created_at:
        '2015-01-15T03:54:54.488Z'\n  description: |2\n        Modern concurrency
        tools including agents, futures, promises, thread pools, actors, supervisors,
        and more.\n        Inspired by Erlang, Clojure, Go, JavaScript, actors, and
        classic concurrency patterns.\n  downloads_count: 539\n  metadata: {}\n  number:
        0.8.0.pre2\n  summary: Modern concurrency tools for Ruby. Inspired by Erlang,
        Clojure, Scala,\n    Haskell, F#, C#, Java, and classic concurrency patterns.\n
        \ platform: ruby\n  rubygems_version: \"> 1.3.1\"\n  ruby_version: \">= 1.9.3\"\n
        \ prerelease: true\n  licenses:\n  - MIT\n  requirements: []\n  sha: 34954f5f33d878ea5513b9ac71f190546c23281704f3932bbb71615a8fd0ebb5\n-
        authors: Jerry D'Antonio\n  built_at: '2015-01-15T00:00:00.000Z'\n  created_at:
        '2015-01-15T03:54:43.443Z'\n  description: |2\n        Modern concurrency
        tools including agents, futures, promises, thread pools, actors, supervisors,
        and more.\n        Inspired by Erlang, Clojure, Go, JavaScript, actors, and
        classic concurrency patterns.\n  downloads_count: 508\n  metadata: {}\n  number:
        0.8.0.pre2\n  summary: Modern concurrency tools for Ruby. Inspired by Erlang,
        Clojure, Scala,\n    Haskell, F#, C#, Java, and classic concurrency patterns.\n
        \ platform: java\n  rubygems_version: \"> 1.3.1\"\n  ruby_version: \">= 1.9.3\"\n
        \ prerelease: true\n  licenses:\n  - MIT\n  requirements: []\n  sha: 25d98b5a891f1228b356ceb4630ed1f9b2bfc8b3a1fd35d3ae33012fdd55cd1a\n-
        authors: Jerry D'Antonio\n  built_at: '2014-12-15T00:00:00.000Z'\n  created_at:
        '2014-12-18T00:19:11.272Z'\n  description: |2\n        Modern concurrency
        tools including agents, futures, promises, thread pools, actors, supervisors,
        and more.\n        Inspired by Erlang, Clojure, Go, JavaScript, actors, and
        classic concurrency patterns.\n  downloads_count: 544\n  metadata: {}\n  number:
        0.8.0.pre1\n  summary: Modern concurrency tools for Ruby. Inspired by Erlang,
        Clojure, Scala,\n    Haskell, F#, C#, Java, and classic concurrency patterns.\n
        \ platform: ruby\n  rubygems_version: \"> 1.3.1\"\n  ruby_version: \">= 1.9.3\"\n
        \ prerelease: true\n  licenses:\n  - MIT\n  requirements: []\n  sha: 4e3de0d59897024d79af0106e7f9ec9c0cde5337c5e15fcae0e7501fb1d1371e\n-
        authors: Jerry D'Antonio\n  built_at: '2014-12-15T00:00:00.000Z'\n  created_at:
        '2014-12-18T00:19:06.746Z'\n  description: |2\n        Modern concurrency
        tools including agents, futures, promises, thread pools, actors, supervisors,
        and more.\n        Inspired by Erlang, Clojure, Go, JavaScript, actors, and
        classic concurrency patterns.\n  downloads_count: 556\n  metadata: {}\n  number:
        0.8.0.pre1\n  summary: Modern concurrency tools for Ruby. Inspired by Erlang,
        Clojure, Scala,\n    Haskell, F#, C#, Java, and classic concurrency patterns.\n
        \ platform: java\n  rubygems_version: \"> 1.3.1\"\n  ruby_version: \">= 1.9.3\"\n
        \ prerelease: true\n  licenses:\n  - MIT\n  requirements: []\n  sha: 0b30f0dd7679336ceed25592e979476abe90c684b6f991d610462c845e351924\n-
        authors: Jerry D'Antonio\n  built_at: '2015-01-24T00:00:00.000Z'\n  created_at:
        '2015-01-25T00:43:23.670Z'\n  description: |2\n        Modern concurrency
        tools including agents, futures, promises, thread pools, actors, supervisors,
        and more.\n        Inspired by Erlang, Clojure, Go, JavaScript, actors, and
        classic concurrency patterns.\n  downloads_count: 2416\n  metadata: {}\n  number:
        0.7.2\n  summary: Modern concurrency tools for Ruby. Inspired by Erlang, Clojure,
        Scala,\n    Haskell, F#, C#, Java, and classic concurrency patterns.\n  platform:
        ruby\n  rubygems_version: \">= 0\"\n  ruby_version: \">= 1.9.3\"\n  prerelease:
        false\n  licenses:\n  - MIT\n  requirements: []\n  sha: 769ec7f4a3f4ca3bca48a0e3f02f280ea01bdc6d017c9fe5452461d5149670e2\n-
        authors: Jerry D'Antonio\n  built_at: '2015-01-24T00:00:00.000Z'\n  created_at:
        '2015-01-25T00:43:18.432Z'\n  description: |2\n        Modern concurrency
        tools including agents, futures, promises, thread pools, actors, supervisors,
        and more.\n        Inspired by Erlang, Clojure, Go, JavaScript, actors, and
        classic concurrency patterns.\n  downloads_count: 7465\n  metadata: {}\n  number:
        0.7.2\n  summary: Modern concurrency tools for Ruby. Inspired by Erlang, Clojure,
        Scala,\n    Haskell, F#, C#, Java, and classic concurrency patterns.\n  platform:
        x86_64-linux\n  rubygems_version: \">= 0\"\n  ruby_version: \">= 1.9.3\"\n
        \ prerelease: false\n  licenses:\n  - MIT\n  requirements: []\n  sha: cd3fe5e679280113d664f206fecb51655069a1d0a8ebff936ceed9908922c1e2\n-
        authors: Jerry D'Antonio\n  built_at: '2015-01-24T00:00:00.000Z'\n  created_at:
        '2015-01-25T00:43:11.629Z'\n  description: |2\n        Modern concurrency
        tools including agents, futures, promises, thread pools, actors, supervisors,
        and more.\n        Inspired by Erlang, Clojure, Go, JavaScript, actors, and
        classic concurrency patterns.\n  downloads_count: 991\n  metadata: {}\n  number:
        0.7.2\n  summary: Modern concurrency tools for Ruby. Inspired by Erlang, Clojure,
        Scala,\n    Haskell, F#, C#, Java, and classic concurrency patterns.\n  platform:
        x86-solaris-2.11\n  rubygems_version: \">= 0\"\n  ruby_version: \">= 1.9.3\"\n
        \ prerelease: false\n  licenses:\n  - MIT\n  requirements: []\n  sha: d5af0bb288f97d41e9579c60a9f6645c7794f92bbb478f057984d0365a90d2b0\n-
        authors: Jerry D'Antonio\n  built_at: '2015-01-24T00:00:00.000Z'\n  created_at:
        '2015-01-25T00:43:05.497Z'\n  description: |2\n        Modern concurrency
        tools including agents, futures, promises, thread pools, actors, supervisors,
        and more.\n        Inspired by Erlang, Clojure, Go, JavaScript, actors, and
        classic concurrency patterns.\n  downloads_count: 984\n  metadata: {}\n  number:
        0.7.2\n  summary: Modern concurrency tools for Ruby. Inspired by Erlang, Clojure,
        Scala,\n    Haskell, F#, C#, Java, and classic concurrency patterns.\n  platform:
        x86-mingw32\n  rubygems_version: \">= 0\"\n  ruby_version: \">= 1.9.3\"\n
        \ prerelease: false\n  licenses:\n  - MIT\n  requirements: []\n  sha: db4e3645ea73c29422b5725607f2fe5bdecc4ccb025d7d38fdebb1bcdb4ed802\n-
        authors: Jerry D'Antonio\n  built_at: '2015-01-24T00:00:00.000Z'\n  created_at:
        '2015-01-25T00:42:59.922Z'\n  description: |2\n        Modern concurrency
        tools including agents, futures, promises, thread pools, actors, supervisors,
        and more.\n        Inspired by Erlang, Clojure, Go, JavaScript, actors, and
        classic concurrency patterns.\n  downloads_count: 1007\n  metadata: {}\n  number:
        0.7.2\n  summary: Modern concurrency tools for Ruby. Inspired by Erlang, Clojure,
        Scala,\n    Haskell, F#, C#, Java, and classic concurrency patterns.\n  platform:
        x86-linux\n  rubygems_version: \">= 0\"\n  ruby_version: \">= 1.9.3\"\n  prerelease:
        false\n  licenses:\n  - MIT\n  requirements: []\n  sha: ef59a92962cff8ba911ce4ccc70b0519ad5448653fa572f7e38524dad87bd0c8\n-
        authors: Jerry D'Antonio\n  built_at: '2015-01-24T00:00:00.000Z'\n  created_at:
        '2015-01-25T00:42:53.972Z'\n  description: |2\n        Modern concurrency
        tools including agents, futures, promises, thread pools, actors, supervisors,
        and more.\n        Inspired by Erlang, Clojure, Go, JavaScript, actors, and
        classic concurrency patterns.\n  downloads_count: 1004\n  metadata: {}\n  number:
        0.7.2\n  summary: Modern concurrency tools for Ruby. Inspired by Erlang, Clojure,
        Scala,\n    Haskell, F#, C#, Java, and classic concurrency patterns.\n  platform:
        x64-mingw32\n  rubygems_version: \">= 0\"\n  ruby_version: \">= 1.9.3\"\n
        \ prerelease: false\n  licenses:\n  - MIT\n  requirements: []\n  sha: ea49950f4b8e515c6776625bd1386e57a1556fb9e44268d4e1cbb7d54841d4e3\n-
        authors: Jerry D'Antonio\n  built_at: '2015-01-24T00:00:00.000Z'\n  created_at:
        '2015-01-25T00:42:48.795Z'\n  description: |2\n        Modern concurrency
        tools including agents, futures, promises, thread pools, actors, supervisors,
        and more.\n        Inspired by Erlang, Clojure, Go, JavaScript, actors, and
        classic concurrency patterns.\n  downloads_count: 3297\n  metadata: {}\n  number:
        0.7.2\n  summary: Modern concurrency tools for Ruby. Inspired by Erlang, Clojure,
        Scala,\n    Haskell, F#, C#, Java, and classic concurrency patterns.\n  platform:
        java\n  rubygems_version: \">= 0\"\n  ruby_version: \">= 1.9.3\"\n  prerelease:
        false\n  licenses:\n  - MIT\n  requirements: []\n  sha: c1fdc2db8aba840fb76b7d76d0b5adf10060e729de9e1c347083275c8e9bcd72\n-
        authors: Jerry D'Antonio\n  built_at: '2014-12-05T00:00:00.000Z'\n  created_at:
        '2014-12-05T01:50:23.860Z'\n  description: |2\n        Modern concurrency
        tools including agents, futures, promises, thread pools, actors, supervisors,
        and more.\n        Inspired by Erlang, Clojure, Go, JavaScript, actors, and
        classic concurrency patterns.\n  downloads_count: 1431\n  metadata: {}\n  number:
        0.7.1\n  summary: Modern concurrency tools for Ruby. Inspired by Erlang, Clojure,
        Scala,\n    Haskell, F#, C#, Java, and classic concurrency patterns.\n  platform:
        ruby\n  rubygems_version: \">= 0\"\n  ruby_version: \">= 1.9.3\"\n  prerelease:
        false\n  licenses:\n  - MIT\n  requirements: []\n  sha: 8787bfb50a1fef69e8d7909dad67482e7a1d3633f5531e86ddf269279aa9fdf8\n-
        authors: Jerry D'Antonio\n  built_at: '2014-12-05T00:00:00.000Z'\n  created_at:
        '2014-12-05T01:50:17.813Z'\n  description: |2\n        Modern concurrency
        tools including agents, futures, promises, thread pools, actors, supervisors,
        and more.\n        Inspired by Erlang, Clojure, Go, JavaScript, actors, and
        classic concurrency patterns.\n  downloads_count: 9367\n  metadata: {}\n  number:
        0.7.1\n  summary: Modern concurrency tools for Ruby. Inspired by Erlang, Clojure,
        Scala,\n    Haskell, F#, C#, Java, and classic concurrency patterns.\n  platform:
        x86_64-linux\n  rubygems_version: \">= 0\"\n  ruby_version: \">= 1.9.3\"\n
        \ prerelease: false\n  licenses:\n  - MIT\n  requirements: []\n  sha: ab55ff661060639a0be1fa5029a3aec4f092b67560141de7b0be6a5a1bd25b60\n-
        authors: Jerry D'Antonio\n  built_at: '2014-12-04T00:00:00.000Z'\n  created_at:
        '2014-12-05T01:50:12.185Z'\n  description: |2\n        Modern concurrency
        tools including agents, futures, promises, thread pools, actors, supervisors,
        and more.\n        Inspired by Erlang, Clojure, Go, JavaScript, actors, and
        classic concurrency patterns.\n  downloads_count: 777\n  metadata: {}\n  number:
        0.7.1\n  summary: Modern concurrency tools for Ruby. Inspired by Erlang, Clojure,
        Scala,\n    Haskell, F#, C#, Java, and classic concurrency patterns.\n  platform:
        x86-solaris-2.11\n  rubygems_version: \">= 0\"\n  ruby_version: \">= 1.9.3\"\n
        \ prerelease: false\n  licenses:\n  - MIT\n  requirements: []\n  sha: 23ed9ae61975380f31407d6420a4d6bf9b1082f4341046613e57b8aa91f199a0\n-
        authors: Jerry D'Antonio\n  built_at: '2014-12-05T00:00:00.000Z'\n  created_at:
        '2014-12-05T01:50:08.189Z'\n  description: |2\n        Modern concurrency
        tools including agents, futures, promises, thread pools, actors, supervisors,
        and more.\n        Inspired by Erlang, Clojure, Go, JavaScript, actors, and
        classic concurrency patterns.\n  downloads_count: 828\n  metadata: {}\n  number:
        0.7.1\n  summary: Modern concurrency tools for Ruby. Inspired by Erlang, Clojure,
        Scala,\n    Haskell, F#, C#, Java, and classic concurrency patterns.\n  platform:
        x86-mingw32\n  rubygems_version: \">= 0\"\n  ruby_version: \">= 1.9.3\"\n
        \ prerelease: false\n  licenses:\n  - MIT\n  requirements: []\n  sha: b8491c80b3ca0bcc19aa739aea82e63d00fa3d51c020135b9ae94e9795f86a2b\n-
        authors: Jerry D'Antonio\n  built_at: '2014-12-05T00:00:00.000Z'\n  created_at:
        '2014-12-05T01:50:04.089Z'\n  description: |2\n        Modern concurrency
        tools including agents, futures, promises, thread pools, actors, supervisors,
        and more.\n        Inspired by Erlang, Clojure, Go, JavaScript, actors, and
        classic concurrency patterns.\n  downloads_count: 866\n  metadata: {}\n  number:
        0.7.1\n  summary: Modern concurrency tools for Ruby. Inspired by Erlang, Clojure,
        Scala,\n    Haskell, F#, C#, Java, and classic concurrency patterns.\n  platform:
        x86-linux\n  rubygems_version: \">= 0\"\n  ruby_version: \">= 1.9.3\"\n  prerelease:
        false\n  licenses:\n  - MIT\n  requirements: []\n  sha: e422a45f7b7e19a8d3351fc49f7487aeeeae1649db849430a0264b6a1fe5212f\n-
        authors: Jerry D'Antonio\n  built_at: '2014-12-05T00:00:00.000Z'\n  created_at:
        '2014-12-05T01:49:59.998Z'\n  description: |2\n        Modern concurrency
        tools including agents, futures, promises, thread pools, actors, supervisors,
        and more.\n        Inspired by Erlang, Clojure, Go, JavaScript, actors, and
        classic concurrency patterns.\n  downloads_count: 803\n  metadata: {}\n  number:
        0.7.1\n  summary: Modern concurrency tools for Ruby. Inspired by Erlang, Clojure,
        Scala,\n    Haskell, F#, C#, Java, and classic concurrency patterns.\n  platform:
        x64-mingw32\n  rubygems_version: \">= 0\"\n  ruby_version: \">= 1.9.3\"\n
        \ prerelease: false\n  licenses:\n  - MIT\n  requirements: []\n  sha: 85a8b47d0b355e7d1423bcd09847c44f269941dc60cb72fd24e4d670260172e3\n-
        authors: Jerry D'Antonio\n  built_at: '2014-12-05T00:00:00.000Z'\n  created_at:
        '2014-12-05T01:49:56.323Z'\n  description: |2\n        Modern concurrency
        tools including agents, futures, promises, thread pools, actors, supervisors,
        and more.\n        Inspired by Erlang, Clojure, Go, JavaScript, actors, and
        classic concurrency patterns.\n  downloads_count: 1292\n  metadata: {}\n  number:
        0.7.1\n  summary: Modern concurrency tools for Ruby. Inspired by Erlang, Clojure,
        Scala,\n    Haskell, F#, C#, Java, and classic concurrency patterns.\n  platform:
        java\n  rubygems_version: \">= 0\"\n  ruby_version: \">= 1.9.3\"\n  prerelease:
        false\n  licenses:\n  - MIT\n  requirements: []\n  sha: 7e06e02b2ba568b7490d95a91c1df54f5302c8902e3064049095aa477e88bcbe\n-
        authors: Jerry D'Antonio\n  built_at: '2014-08-13T00:00:00.000Z'\n  created_at:
        '2014-08-13T20:50:44.308Z'\n  description: |2\n        Modern concurrency
        tools including agents, futures, promises, thread pools, actors, supervisors,
        and more.\n        Inspired by Erlang, Clojure, Go, JavaScript, actors, and
        classic concurrency patterns.\n  downloads_count: 1534\n  metadata: {}\n  number:
        0.7.0\n  summary: Modern concurrency tools for Ruby. Inspired by Erlang, Clojure,
        Scala,\n    Haskell, F#, C#, Java, and classic concurrency patterns.\n  platform:
        ruby\n  rubygems_version: \">= 0\"\n  ruby_version: \">= 1.9.3\"\n  prerelease:
        false\n  licenses:\n  - MIT\n  requirements: []\n  sha: a7e5ce31d89f1b9a3b3524e96cf9071733d34c384f64974376294ade762bdd79\n-
        authors: Jerry D'Antonio\n  built_at: '2014-08-13T00:00:00.000Z'\n  created_at:
        '2014-08-13T20:50:38.966Z'\n  description: |2\n        Modern concurrency
        tools including agents, futures, promises, thread pools, actors, supervisors,
        and more.\n        Inspired by Erlang, Clojure, Go, JavaScript, actors, and
        classic concurrency patterns.\n  downloads_count: 4848\n  metadata: {}\n  number:
        0.7.0\n  summary: Modern concurrency tools for Ruby. Inspired by Erlang, Clojure,
        Scala,\n    Haskell, F#, C#, Java, and classic concurrency patterns.\n  platform:
        x86_64-linux\n  rubygems_version: \">= 0\"\n  ruby_version: \">= 1.9.3\"\n
        \ prerelease: false\n  licenses:\n  - MIT\n  requirements: []\n  sha: 1e0b0ab58d34fcb1d29c26ffe3c9dff4151ab1587cf82d0783946a2fd2ef325e\n-
        authors: Jerry D'Antonio\n  built_at: '2014-08-13T00:00:00.000Z'\n  created_at:
        '2014-08-13T20:50:27.719Z'\n  description: |2\n        Modern concurrency
        tools including agents, futures, promises, thread pools, actors, supervisors,
        and more.\n        Inspired by Erlang, Clojure, Go, JavaScript, actors, and
        classic concurrency patterns.\n  downloads_count: 901\n  metadata: {}\n  number:
        0.7.0\n  summary: Modern concurrency tools for Ruby. Inspired by Erlang, Clojure,
        Scala,\n    Haskell, F#, C#, Java, and classic concurrency patterns.\n  platform:
        x86-solaris-2.11\n  rubygems_version: \">= 0\"\n  ruby_version: \">= 1.9.3\"\n
        \ prerelease: false\n  licenses:\n  - MIT\n  requirements: []\n  sha: ca8d7e82bf3abc3d412c2204c1bdd9c23859ad8f9b362942f6a92544922e728c\n-
        authors: Jerry D'Antonio\n  built_at: '2014-08-13T00:00:00.000Z'\n  created_at:
        '2014-08-13T20:50:21.878Z'\n  description: |2\n        Modern concurrency
        tools including agents, futures, promises, thread pools, actors, supervisors,
        and more.\n        Inspired by Erlang, Clojure, Go, JavaScript, actors, and
        classic concurrency patterns.\n  downloads_count: 933\n  metadata: {}\n  number:
        0.7.0\n  summary: Modern concurrency tools for Ruby. Inspired by Erlang, Clojure,
        Scala,\n    Haskell, F#, C#, Java, and classic concurrency patterns.\n  platform:
        x86-mingw32\n  rubygems_version: \">= 0\"\n  ruby_version: \">= 1.9.3\"\n
        \ prerelease: false\n  licenses:\n  - MIT\n  requirements: []\n  sha: 44ea4f2bd3122a3bf1056b53a76b34ecf8ade23ba964ac8e486cebe37e49f143\n-
        authors: Jerry D'Antonio\n  built_at: '2014-08-13T00:00:00.000Z'\n  created_at:
        '2014-08-13T20:50:16.318Z'\n  description: |2\n        Modern concurrency
        tools including agents, futures, promises, thread pools, actors, supervisors,
        and more.\n        Inspired by Erlang, Clojure, Go, JavaScript, actors, and
        classic concurrency patterns.\n  downloads_count: 950\n  metadata: {}\n  number:
        0.7.0\n  summary: Modern concurrency tools for Ruby. Inspired by Erlang, Clojure,
        Scala,\n    Haskell, F#, C#, Java, and classic concurrency patterns.\n  platform:
        x86-linux\n  rubygems_version: \">= 0\"\n  ruby_version: \">= 1.9.3\"\n  prerelease:
        false\n  licenses:\n  - MIT\n  requirements: []\n  sha: 57e474affd42696fc182c9fccb24beff148db314e710babde99d2810ab5454f2\n-
        authors: Jerry D'Antonio\n  built_at: '2014-08-13T00:00:00.000Z'\n  created_at:
        '2014-08-13T20:50:11.708Z'\n  description: |2\n        Modern concurrency
        tools including agents, futures, promises, thread pools, actors, supervisors,
        and more.\n        Inspired by Erlang, Clojure, Go, JavaScript, actors, and
        classic concurrency patterns.\n  downloads_count: 932\n  metadata: {}\n  number:
        0.7.0\n  summary: Modern concurrency tools for Ruby. Inspired by Erlang, Clojure,
        Scala,\n    Haskell, F#, C#, Java, and classic concurrency patterns.\n  platform:
        x64-mingw32\n  rubygems_version: \">= 0\"\n  ruby_version: \">= 1.9.3\"\n
        \ prerelease: false\n  licenses:\n  - MIT\n  requirements: []\n  sha: 1ef848f3b073ccb8e5c968dd68955762274e73b7479ec6d3a4d552431aed8e4e\n-
        authors: Jerry D'Antonio\n  built_at: '2014-08-13T00:00:00.000Z'\n  created_at:
        '2014-08-13T20:50:06.952Z'\n  description: |2\n        Modern concurrency
        tools including agents, futures, promises, thread pools, actors, supervisors,
        and more.\n        Inspired by Erlang, Clojure, Go, JavaScript, actors, and
        classic concurrency patterns.\n  downloads_count: 1878\n  metadata: {}\n  number:
        0.7.0\n  summary: Modern concurrency tools for Ruby. Inspired by Erlang, Clojure,
        Scala,\n    Haskell, F#, C#, Java, and classic concurrency patterns.\n  platform:
        java\n  rubygems_version: \">= 0\"\n  ruby_version: \">= 1.9.3\"\n  prerelease:
        false\n  licenses:\n  - MIT\n  requirements: []\n  sha: 09512fe1643c3cbb3205687576c2789d5a1de36c3179ab86c605c3d31bd512b0\n-
        authors: Jerry D'Antonio\n  built_at: '2014-07-30T00:00:00.000Z'\n  created_at:
        '2014-07-30T15:45:13.927Z'\n  description: |2\n        Modern concurrency
        tools including agents, futures, promises, thread pools, actors, supervisors,
        and more.\n        Inspired by Erlang, Clojure, Go, JavaScript, actors, and
        classic concurrency patterns.\n  downloads_count: 559\n  metadata: {}\n  number:
        0.7.0.rc2\n  summary: Modern concurrency tools for Ruby. Inspired by Erlang,
        Clojure, Scala,\n    Haskell, F#, C#, Java, and classic concurrency patterns.\n
        \ platform: ruby\n  rubygems_version: \"> 1.3.1\"\n  ruby_version: \">= 1.9.3\"\n
        \ prerelease: true\n  licenses:\n  - MIT\n  requirements: []\n  sha: 62bf001bc7537cf6e7fedd0375c02405fd1feb1b1c68617e2a43221cb2461038\n-
        authors: Jerry D'Antonio\n  built_at: '2014-07-30T00:00:00.000Z'\n  created_at:
        '2014-07-30T15:45:10.297Z'\n  description: |2\n        Modern concurrency
        tools including agents, futures, promises, thread pools, actors, supervisors,
        and more.\n        Inspired by Erlang, Clojure, Go, JavaScript, actors, and
        classic concurrency patterns.\n  downloads_count: 534\n  metadata: {}\n  number:
        0.7.0.rc2\n  summary: Modern concurrency tools for Ruby. Inspired by Erlang,
        Clojure, Scala,\n    Haskell, F#, C#, Java, and classic concurrency patterns.\n
        \ platform: x86_64-linux\n  rubygems_version: \"> 1.3.1\"\n  ruby_version:
        \">= 1.9.3\"\n  prerelease: true\n  licenses:\n  - MIT\n  requirements: []\n
        \ sha: 301360e797f023dd1dfabe4e90dcbaa86dece56f962c5fc0321647ed36ae5494\n-
        authors: Jerry D'Antonio\n  built_at: '2014-07-30T00:00:00.000Z'\n  created_at:
        '2014-07-30T15:45:06.585Z'\n  description: |2\n        Modern concurrency
        tools including agents, futures, promises, thread pools, actors, supervisors,
        and more.\n        Inspired by Erlang, Clojure, Go, JavaScript, actors, and
        classic concurrency patterns.\n  downloads_count: 648\n  metadata: {}\n  number:
        0.7.0.rc2\n  summary: Modern concurrency tools for Ruby. Inspired by Erlang,
        Clojure, Scala,\n    Haskell, F#, C#, Java, and classic concurrency patterns.\n
        \ platform: x86_64-darwin-13\n  rubygems_version: \"> 1.3.1\"\n  ruby_version:
        \">= 1.9.3\"\n  prerelease: true\n  licenses:\n  - MIT\n  requirements: []\n
        \ sha: 180c14f41726ad0f010a1ba1549ca6aea22c5b86b24a225e4356dcf38ae4b438\n-
        authors: Jerry D'Antonio\n  built_at: '2014-07-30T00:00:00.000Z'\n  created_at:
        '2014-07-30T15:45:02.782Z'\n  description: |2\n        Modern concurrency
        tools including agents, futures, promises, thread pools, actors, supervisors,
        and more.\n        Inspired by Erlang, Clojure, Go, JavaScript, actors, and
        classic concurrency patterns.\n  downloads_count: 740\n  metadata: {}\n  number:
        0.7.0.rc2\n  summary: Modern concurrency tools for Ruby. Inspired by Erlang,
        Clojure, Scala,\n    Haskell, F#, C#, Java, and classic concurrency patterns.\n
        \ platform: x86-solaris-2.11\n  rubygems_version: \"> 1.3.1\"\n  ruby_version:
        \">= 1.9.3\"\n  prerelease: true\n  licenses:\n  - MIT\n  requirements: []\n
        \ sha: 57400a3ac9af3672a598f44d7a3fd1a46c2e163b4b6d000e77c9ed7f90dd5950\n-
        authors: Jerry D'Antonio\n  built_at: '2014-07-30T00:00:00.000Z'\n  created_at:
        '2014-07-30T15:44:58.244Z'\n  description: |2\n        Modern concurrency
        tools including agents, futures, promises, thread pools, actors, supervisors,
        and more.\n        Inspired by Erlang, Clojure, Go, JavaScript, actors, and
        classic concurrency patterns.\n  downloads_count: 742\n  metadata: {}\n  number:
        0.7.0.rc2\n  summary: Modern concurrency tools for Ruby. Inspired by Erlang,
        Clojure, Scala,\n    Haskell, F#, C#, Java, and classic concurrency patterns.\n
        \ platform: x86-mingw32\n  rubygems_version: \"> 1.3.1\"\n  ruby_version:
        \">= 1.9.3\"\n  prerelease: true\n  licenses:\n  - MIT\n  requirements: []\n
        \ sha: 59ab69299f738cf49314da32101a2fd0d463cac44f9d064324f7b39c8d88bffc\n-
        authors: Jerry D'Antonio\n  built_at: '2014-07-30T00:00:00.000Z'\n  created_at:
        '2014-07-30T15:44:54.458Z'\n  description: |2\n        Modern concurrency
        tools including agents, futures, promises, thread pools, actors, supervisors,
        and more.\n        Inspired by Erlang, Clojure, Go, JavaScript, actors, and
        classic concurrency patterns.\n  downloads_count: 634\n  metadata: {}\n  number:
        0.7.0.rc2\n  summary: Modern concurrency tools for Ruby. Inspired by Erlang,
        Clojure, Scala,\n    Haskell, F#, C#, Java, and classic concurrency patterns.\n
        \ platform: x86-linux\n  rubygems_version: \"> 1.3.1\"\n  ruby_version: \">=
        1.9.3\"\n  prerelease: true\n  licenses:\n  - MIT\n  requirements: []\n  sha:
        16d576d085e3d77bde6cd6775436b24bc55a3f9bf559d7ff9e845c90714561d6\n- authors:
        Jerry D'Antonio\n  built_at: '2014-07-30T00:00:00.000Z'\n  created_at: '2014-07-30T15:44:50.981Z'\n
        \ description: |2\n        Modern concurrency tools including agents, futures,
        promises, thread pools, actors, supervisors, and more.\n        Inspired by
        Erlang, Clojure, Go, JavaScript, actors, and classic concurrency patterns.\n
        \ downloads_count: 655\n  metadata: {}\n  number: 0.7.0.rc2\n  summary: Modern
        concurrency tools for Ruby. Inspired by Erlang, Clojure, Scala,\n    Haskell,
        F#, C#, Java, and classic concurrency patterns.\n  platform: x64-mingw32\n
        \ rubygems_version: \"> 1.3.1\"\n  ruby_version: \">= 1.9.3\"\n  prerelease:
        true\n  licenses:\n  - MIT\n  requirements: []\n  sha: 19c8570542380a6bb8261fa571c1e3451bdc8f1c85b248ceca7e7236fe0a7a35\n-
        authors: Jerry D'Antonio\n  built_at: '2014-07-30T00:00:00.000Z'\n  created_at:
        '2014-07-30T15:44:47.401Z'\n  description: |2\n        Modern concurrency
        tools including agents, futures, promises, thread pools, actors, supervisors,
        and more.\n        Inspired by Erlang, Clojure, Go, JavaScript, actors, and
        classic concurrency patterns.\n  downloads_count: 607\n  metadata: {}\n  number:
        0.7.0.rc2\n  summary: Modern concurrency tools for Ruby. Inspired by Erlang,
        Clojure, Scala,\n    Haskell, F#, C#, Java, and classic concurrency patterns.\n
        \ platform: java\n  rubygems_version: \"> 1.3.1\"\n  ruby_version: \">= 1.9.3\"\n
        \ prerelease: true\n  licenses:\n  - MIT\n  requirements: []\n  sha: 04e9d1627be7ec8197fbf053a8851cb8b2685797b48ecdb74fdbd525f965e4aa\n-
        authors: Jerry D'Antonio\n  built_at: '2014-06-27T00:00:00.000Z'\n  created_at:
        '2014-06-27T14:07:59.506Z'\n  description: |2\n        Modern concurrency
        tools including agents, futures, promises, thread pools, actors, supervisors,
        and more.\n        Inspired by Erlang, Clojure, Go, JavaScript, actors, and
        classic concurrency patterns.\n  downloads_count: 571\n  metadata: {}\n  number:
        0.7.0.rc1\n  summary: Modern concurrency tools for Ruby. Inspired by Erlang,
        Clojure, Scala,\n    Haskell, F#, C#, Java, and classic concurrency patterns.\n
        \ platform: ruby\n  rubygems_version: \"> 1.3.1\"\n  ruby_version: \">= 1.9.3\"\n
        \ prerelease: true\n  licenses:\n  - MIT\n  requirements: []\n  sha: 96e58bc0e06c6ffcf1839a4d5d09922ad98e6191d9168c551814f741c02106d6\n-
        authors: Jerry D'Antonio\n  built_at: '2014-06-27T00:00:00.000Z'\n  created_at:
        '2014-06-27T14:07:53.754Z'\n  description: |2\n        Modern concurrency
        tools including agents, futures, promises, thread pools, actors, supervisors,
        and more.\n        Inspired by Erlang, Clojure, Go, JavaScript, actors, and
        classic concurrency patterns.\n  downloads_count: 569\n  metadata: {}\n  number:
        0.7.0.rc1\n  summary: Modern concurrency tools for Ruby. Inspired by Erlang,
        Clojure, Scala,\n    Haskell, F#, C#, Java, and classic concurrency patterns.\n
        \ platform: x86_64-linux\n  rubygems_version: \"> 1.3.1\"\n  ruby_version:
        \">= 1.9.3\"\n  prerelease: true\n  licenses:\n  - MIT\n  requirements: []\n
        \ sha: 34b0ee1a6b81edd5dd8e9fa5354c57fec6d16bfa5d907e11afead52047efb293\n-
        authors: Jerry D'Antonio\n  built_at: '2014-06-27T00:00:00.000Z'\n  created_at:
        '2014-06-27T14:07:48.374Z'\n  description: |2\n        Modern concurrency
        tools including agents, futures, promises, thread pools, actors, supervisors,
        and more.\n        Inspired by Erlang, Clojure, Go, JavaScript, actors, and
        classic concurrency patterns.\n  downloads_count: 534\n  metadata: {}\n  number:
        0.7.0.rc1\n  summary: Modern concurrency tools for Ruby. Inspired by Erlang,
        Clojure, Scala,\n    Haskell, F#, C#, Java, and classic concurrency patterns.\n
        \ platform: x86_64-darwin-13\n  rubygems_version: \"> 1.3.1\"\n  ruby_version:
        \">= 1.9.3\"\n  prerelease: true\n  licenses:\n  - MIT\n  requirements: []\n
        \ sha: a53328c2807e5e553e30da97c8eb4d39a3be044a6f7fa27d0b54299b3e786dc0\n-
        authors: Jerry D'Antonio\n  built_at: '2014-06-27T00:00:00.000Z'\n  created_at:
        '2014-06-27T14:07:42.534Z'\n  description: |2\n        Modern concurrency
        tools including agents, futures, promises, thread pools, actors, supervisors,
        and more.\n        Inspired by Erlang, Clojure, Go, JavaScript, actors, and
        classic concurrency patterns.\n  downloads_count: 517\n  metadata: {}\n  number:
        0.7.0.rc1\n  summary: Modern concurrency tools for Ruby. Inspired by Erlang,
        Clojure, Scala,\n    Haskell, F#, C#, Java, and classic concurrency patterns.\n
        \ platform: x86-solaris-2.11\n  rubygems_version: \"> 1.3.1\"\n  ruby_version:
        \">= 1.9.3\"\n  prerelease: true\n  licenses:\n  - MIT\n  requirements: []\n
        \ sha: a2298e7c6e56f5a0c4b8c6595bd9526c5a3bb822d7056755d7c67fa1e1c48f67\n-
        authors: Jerry D'Antonio\n  built_at: '2014-06-27T00:00:00.000Z'\n  created_at:
        '2014-06-27T14:07:38.407Z'\n  description: |2\n        Modern concurrency
        tools including agents, futures, promises, thread pools, actors, supervisors,
        and more.\n        Inspired by Erlang, Clojure, Go, JavaScript, actors, and
        classic concurrency patterns.\n  downloads_count: 736\n  metadata: {}\n  number:
        0.7.0.rc1\n  summary: Modern concurrency tools for Ruby. Inspired by Erlang,
        Clojure, Scala,\n    Haskell, F#, C#, Java, and classic concurrency patterns.\n
        \ platform: x86-mingw32\n  rubygems_version: \"> 1.3.1\"\n  ruby_version:
        \">= 1.9.3\"\n  prerelease: true\n  licenses:\n  - MIT\n  requirements: []\n
        \ sha: 44d3713d6ca0cd362ed7a346f46d509b34e13ebbe0ecdf1c958e0e5de616ee1b\n-
        authors: Jerry D'Antonio\n  built_at: '2014-06-27T00:00:00.000Z'\n  created_at:
        '2014-06-27T14:07:32.622Z'\n  description: |2\n        Modern concurrency
        tools including agents, futures, promises, thread pools, actors, supervisors,
        and more.\n        Inspired by Erlang, Clojure, Go, JavaScript, actors, and
        classic concurrency patterns.\n  downloads_count: 521\n  metadata: {}\n  number:
        0.7.0.rc1\n  summary: Modern concurrency tools for Ruby. Inspired by Erlang,
        Clojure, Scala,\n    Haskell, F#, C#, Java, and classic concurrency patterns.\n
        \ platform: x86-linux\n  rubygems_version: \"> 1.3.1\"\n  ruby_version: \">=
        1.9.3\"\n  prerelease: true\n  licenses:\n  - MIT\n  requirements: []\n  sha:
        a00369f48ce65a35c30dda19b28eb3f7e548efeaebbf54a52cc4b9df96d52026\n- authors:
        Jerry D'Antonio\n  built_at: '2014-06-27T00:00:00.000Z'\n  created_at: '2014-06-27T14:07:25.490Z'\n
        \ description: |2\n        Modern concurrency tools including agents, futures,
        promises, thread pools, actors, supervisors, and more.\n        Inspired by
        Erlang, Clojure, Go, JavaScript, actors, and classic concurrency patterns.\n
        \ downloads_count: 741\n  metadata: {}\n  number: 0.7.0.rc1\n  summary: Modern
        concurrency tools for Ruby. Inspired by Erlang, Clojure, Scala,\n    Haskell,
        F#, C#, Java, and classic concurrency patterns.\n  platform: x64-mingw32\n
        \ rubygems_version: \"> 1.3.1\"\n  ruby_version: \">= 1.9.3\"\n  prerelease:
        true\n  licenses:\n  - MIT\n  requirements: []\n  sha: d9e22c023d5c2412cc0ed0c8d13d1d028bdea4754cc35320cd22d7285e12c02f\n-
        authors: Jerry D'Antonio\n  built_at: '2014-06-27T00:00:00.000Z'\n  created_at:
        '2014-06-27T14:07:19.183Z'\n  description: |2\n        Modern concurrency
        tools including agents, futures, promises, thread pools, actors, supervisors,
        and more.\n        Inspired by Erlang, Clojure, Go, JavaScript, actors, and
        classic concurrency patterns.\n  downloads_count: 1052\n  metadata: {}\n  number:
        0.7.0.rc1\n  summary: Modern concurrency tools for Ruby. Inspired by Erlang,
        Clojure, Scala,\n    Haskell, F#, C#, Java, and classic concurrency patterns.\n
        \ platform: java\n  rubygems_version: \"> 1.3.1\"\n  ruby_version: \">= 1.9.3\"\n
        \ prerelease: true\n  licenses:\n  - MIT\n  requirements: []\n  sha: d2e602d7c940f278ed90ea9ba86d6d6225cd6a86770a2d7263113445e85a761e\n-
        authors: Jerry D'Antonio\n  built_at: '2014-06-18T00:00:00.000Z'\n  created_at:
        '2014-06-18T18:02:28.135Z'\n  description: |2\n        Modern concurrency
        tools including agents, futures, promises, thread pools, actors, supervisors,
        and more.\n        Inspired by Erlang, Clojure, Go, JavaScript, actors, and
        classic concurrency patterns.\n  downloads_count: 587\n  metadata: {}\n  number:
        0.7.0.rc0\n  summary: Modern concurrency tools for Ruby. Inspired by Erlang,
        Clojure, Scala,\n    Haskell, F#, C#, Java, and classic concurrency patterns.\n
        \ platform: ruby\n  rubygems_version: \"> 1.3.1\"\n  ruby_version: \">= 1.9.3\"\n
        \ prerelease: true\n  licenses:\n  - MIT\n  requirements: []\n  sha: f18ba81b62474099b72a63e9d9d2b714a480c5ce8347b30ff5baf54f679edb1e\n-
        authors: Jerry D'Antonio\n  built_at: '2014-06-18T00:00:00.000Z'\n  created_at:
        '2014-06-18T18:02:19.558Z'\n  description: |2\n        Modern concurrency
        tools including agents, futures, promises, thread pools, actors, supervisors,
        and more.\n        Inspired by Erlang, Clojure, Go, JavaScript, actors, and
        classic concurrency patterns.\n  downloads_count: 506\n  metadata: {}\n  number:
        0.7.0.rc0\n  summary: Modern concurrency tools for Ruby. Inspired by Erlang,
        Clojure, Scala,\n    Haskell, F#, C#, Java, and classic concurrency patterns.\n
        \ platform: x86_64-linux\n  rubygems_version: \"> 1.3.1\"\n  ruby_version:
        \">= 1.9.3\"\n  prerelease: true\n  licenses:\n  - MIT\n  requirements: []\n
        \ sha: 969f8e95b2c123b1d57cdcbd179f01000a62a51e2bfdea3340c516fc4fa7a7fe\n-
        authors: Jerry D'Antonio\n  built_at: '2014-06-18T00:00:00.000Z'\n  created_at:
        '2014-06-18T18:02:12.259Z'\n  description: |2\n        Modern concurrency
        tools including agents, futures, promises, thread pools, actors, supervisors,
        and more.\n        Inspired by Erlang, Clojure, Go, JavaScript, actors, and
        classic concurrency patterns.\n  downloads_count: 508\n  metadata: {}\n  number:
        0.7.0.rc0\n  summary: Modern concurrency tools for Ruby. Inspired by Erlang,
        Clojure, Scala,\n    Haskell, F#, C#, Java, and classic concurrency patterns.\n
        \ platform: x86_64-darwin-13\n  rubygems_version: \"> 1.3.1\"\n  ruby_version:
        \">= 1.9.3\"\n  prerelease: true\n  licenses:\n  - MIT\n  requirements: []\n
        \ sha: 8d586f7bffdf40d629fb1dd60d4137c3fe0d0e63437330b8d30fc5b1e5a6c178\n-
        authors: Jerry D'Antonio\n  built_at: '2014-06-18T00:00:00.000Z'\n  created_at:
        '2014-06-18T18:02:04.376Z'\n  description: |2\n        Modern concurrency
        tools including agents, futures, promises, thread pools, actors, supervisors,
        and more.\n        Inspired by Erlang, Clojure, Go, JavaScript, actors, and
        classic concurrency patterns.\n  downloads_count: 530\n  metadata: {}\n  number:
        0.7.0.rc0\n  summary: Modern concurrency tools for Ruby. Inspired by Erlang,
        Clojure, Scala,\n    Haskell, F#, C#, Java, and classic concurrency patterns.\n
        \ platform: x86-solaris-2.11\n  rubygems_version: \"> 1.3.1\"\n  ruby_version:
        \">= 1.9.3\"\n  prerelease: true\n  licenses:\n  - MIT\n  requirements: []\n
        \ sha: 4a4ce0ffcf989f771317450fb3efcea26291e752354e50aced4bd65e5e1eb887\n-
        authors: Jerry D'Antonio\n  built_at: '2014-06-18T00:00:00.000Z'\n  created_at:
        '2014-06-18T18:01:56.799Z'\n  description: |2\n        Modern concurrency
        tools including agents, futures, promises, thread pools, actors, supervisors,
        and more.\n        Inspired by Erlang, Clojure, Go, JavaScript, actors, and
        classic concurrency patterns.\n  downloads_count: 741\n  metadata: {}\n  number:
        0.7.0.rc0\n  summary: Modern concurrency tools for Ruby. Inspired by Erlang,
        Clojure, Scala,\n    Haskell, F#, C#, Java, and classic concurrency patterns.\n
        \ platform: x86-mingw32\n  rubygems_version: \"> 1.3.1\"\n  ruby_version:
        \">= 1.9.3\"\n  prerelease: true\n  licenses:\n  - MIT\n  requirements: []\n
        \ sha: 16d189120b89bf30b282f1077c2146184ce7ea1baadb0be7b68c0aeb839ecfe0\n-
        authors: Jerry D'Antonio\n  built_at: '2014-06-18T00:00:00.000Z'\n  created_at:
        '2014-06-18T18:01:49.792Z'\n  description: |2\n        Modern concurrency
        tools including agents, futures, promises, thread pools, actors, supervisors,
        and more.\n        Inspired by Erlang, Clojure, Go, JavaScript, actors, and
        classic concurrency patterns.\n  downloads_count: 512\n  metadata: {}\n  number:
        0.7.0.rc0\n  summary: Modern concurrency tools for Ruby. Inspired by Erlang,
        Clojure, Scala,\n    Haskell, F#, C#, Java, and classic concurrency patterns.\n
        \ platform: x86-linux\n  rubygems_version: \"> 1.3.1\"\n  ruby_version: \">=
        1.9.3\"\n  prerelease: true\n  licenses:\n  - MIT\n  requirements: []\n  sha:
        a3c6f44b7d71749f648cb296e3e7e1c33677b00483785bd1121e798ee83199d1\n- authors:
        Jerry D'Antonio\n  built_at: '2014-06-18T00:00:00.000Z'\n  created_at: '2014-06-18T18:01:42.631Z'\n
        \ description: |2\n        Modern concurrency tools including agents, futures,
        promises, thread pools, actors, supervisors, and more.\n        Inspired by
        Erlang, Clojure, Go, JavaScript, actors, and classic concurrency patterns.\n
        \ downloads_count: 654\n  metadata: {}\n  number: 0.7.0.rc0\n  summary: Modern
        concurrency tools for Ruby. Inspired by Erlang, Clojure, Scala,\n    Haskell,
        F#, C#, Java, and classic concurrency patterns.\n  platform: x64-mingw32\n
        \ rubygems_version: \"> 1.3.1\"\n  ruby_version: \">= 1.9.3\"\n  prerelease:
        true\n  licenses:\n  - MIT\n  requirements: []\n  sha: 21f2b081f4b983f812154f0868bf507470653fd98dc47952bfecaadd11d294a8\n-
        authors: Jerry D'Antonio\n  built_at: '2014-06-18T00:00:00.000Z'\n  created_at:
        '2014-06-18T18:01:34.464Z'\n  description: |2\n        Modern concurrency
        tools including agents, futures, promises, thread pools, actors, supervisors,
        and more.\n        Inspired by Erlang, Clojure, Go, JavaScript, actors, and
        classic concurrency patterns.\n  downloads_count: 559\n  metadata: {}\n  number:
        0.7.0.rc0\n  summary: Modern concurrency tools for Ruby. Inspired by Erlang,
        Clojure, Scala,\n    Haskell, F#, C#, Java, and classic concurrency patterns.\n
        \ platform: java\n  rubygems_version: \"> 1.3.1\"\n  ruby_version: \">= 1.9.3\"\n
        \ prerelease: true\n  licenses:\n  - MIT\n  requirements: []\n  sha: 5e4fb52b18087531e4d4c611eca29463badc715f04e95431ac4bd87ec35274e2\n-
        authors: Jerry D'Antonio\n  built_at: '2014-06-14T00:00:00.000Z'\n  created_at:
        '2014-06-15T02:57:46.499Z'\n  description: |2\n        Modern concurrency
        tools including agents, futures, promises, thread pools, actors, supervisors,
        and more.\n        Inspired by Erlang, Clojure, Go, JavaScript, actors, and
        classic concurrency patterns.\n  downloads_count: 8022\n  metadata: {}\n  number:
        0.6.1\n  summary: Modern concurrency tools for Ruby. Inspired by Erlang, Clojure,
        Scala,\n    Haskell, F#, C#, Java, and classic concurrency patterns.\n  platform:
        ruby\n  rubygems_version: \">= 0\"\n  ruby_version: \">= 1.9.3\"\n  prerelease:
        false\n  licenses:\n  - MIT\n  requirements: []\n  sha: 9daa81181a858f58fff468c5bf3a817e28196309aa07af2062cb5a215a1ca2cb\n-
        authors: Jerry D'Antonio\n  built_at: '2014-05-26T00:00:00.000Z'\n  created_at:
        '2014-05-26T14:28:03.578Z'\n  description: |2\n        Modern concurrency
        tools including agents, futures, promises, thread pools, actors, supervisors,
        and more.\n        Inspired by Erlang, Clojure, Go, JavaScript, actors, and
        classic concurrency patterns.\n  downloads_count: 4079\n  metadata: {}\n  number:
        0.6.0\n  summary: Modern concurrency tools for Ruby. Inspired by Erlang, Clojure,
        Scala,\n    Haskell, F#, C#, Java, and classic concurrency patterns.\n  platform:
        ruby\n  rubygems_version: \">= 0\"\n  ruby_version: \">= 1.9.3\"\n  prerelease:
        false\n  licenses:\n  - MIT\n  requirements: []\n  sha: e2d8b37bdb6271c473577741cbecee6d9cfa1cfab3058cedc2257d5554a6b7bf\n-
        authors: Jerry D'Antonio\n  built_at: '2014-05-12T00:00:00.000Z'\n  created_at:
        '2014-05-13T00:36:59.137Z'\n  description: |2\n        Modern concurrency
        tools including agents, futures, promises, thread pools, actors, supervisors,
        and more.\n        Inspired by Erlang, Clojure, Go, JavaScript, actors, and
        classic concurrency patterns.\n  downloads_count: 733\n  metadata: {}\n  number:
        0.6.0.pre.2\n  summary: Modern concurrency tools for Ruby. Inspired by Erlang,
        Clojure, Scala,\n    Haskell, F#, C#, Java, and classic concurrency patterns.\n
        \ platform: ruby\n  rubygems_version: \"> 1.3.1\"\n  ruby_version: \">= 1.9.3\"\n
        \ prerelease: true\n  licenses:\n  - MIT\n  requirements: []\n  sha: 173773de3da6d228a61c26d29a578a2b23d31a54cbdf320f003104bca7544efc\n-
        authors: Jerry D'Antonio\n  built_at: '2014-04-08T00:00:00.000Z'\n  created_at:
        '2014-04-08T13:15:20.507Z'\n  description: |2\n        Modern concurrency
        tools including agents, futures, promises, thread pools, actors, supervisors,
        and more.\n        Inspired by Erlang, Clojure, Go, JavaScript, actors, and
        classic concurrency patterns.\n  downloads_count: 1171\n  metadata: {}\n  number:
        0.6.0.pre.1\n  summary: Modern concurrency tools for Ruby. Inspired by Erlang,
        Clojure, Scala,\n    Haskell, F#, C#, Java, and classic concurrency patterns.\n
        \ platform: ruby\n  rubygems_version: \"> 1.3.1\"\n  ruby_version: \">= 1.9.3\"\n
        \ prerelease: true\n  licenses:\n  - MIT\n  requirements: []\n  sha: 924c76954071301e80c30a61e950332f333ffc3a94c73842557b6928f3f80de9\n-
        authors: Jerry D'Antonio\n  built_at: '2014-03-16T00:00:00.000Z'\n  created_at:
        '2014-03-16T13:34:34.439Z'\n  description: |2\n        Modern concurrency
        tools including agents, futures, promises, thread pools, actors, supervisors,
        and more.\n        Inspired by Erlang, Clojure, Go, JavaScript, actors, and
        classic concurrency patterns.\n  downloads_count: 3594\n  metadata: {}\n  number:
        0.5.0\n  summary: Modern concurrency tools including agents, futures, promises,
        thread pools,\n    actors, and more.\n  platform: ruby\n  rubygems_version:
        \">= 0\"\n  ruby_version: \n  prerelease: false\n  licenses:\n  - MIT\n  requirements:
        []\n  sha: ea2f2ab4a91fe0e8ba10808a87a736257244d80beb4eb1a832a0ae14623d472e\n-
        authors: Jerry D'Antonio\n  built_at: '2014-03-10T00:00:00.000Z'\n  created_at:
        '2014-03-10T13:09:35.454Z'\n  description: |2\n        Modern concurrency
        tools including agents, futures, promises, thread pools, actors, supervisors,
        and more.\n        Inspired by Erlang, Clojure, Go, JavaScript, actors, and
        classic concurrency patterns.\n  downloads_count: 612\n  metadata: {}\n  number:
        0.5.0.pre.1\n  summary: Modern concurrency tools including agents, futures,
        promises, thread pools,\n    actors, and more.\n  platform: ruby\n  rubygems_version:
        \"> 1.3.1\"\n  ruby_version: \n  prerelease: true\n  licenses:\n  - MIT\n
        \ requirements: []\n  sha: 74b47ed674389008dab8832c60e2d1dfeeeff09acce0374f3f5286012371b6e2\n-
        authors: Jerry D'Antonio\n  built_at: '2014-02-03T00:00:00.000Z'\n  created_at:
        '2014-02-04T02:12:18.180Z'\n  description: |2\n        Modern concurrency
        tools including agents, futures, promises, thread pools, actors, supervisors,
        and more.\n        Inspired by Erlang, Clojure, Go, JavaScript, actors, and
        classic concurrency patterns.\n  downloads_count: 1242\n  metadata: {}\n  number:
        0.4.1\n  summary: Modern concurrency tools including agents, futures, promises,
        thread pools,\n    actors, and more.\n  platform: ruby\n  rubygems_version:
        \">= 0\"\n  ruby_version: \n  prerelease: false\n  licenses:\n  - MIT\n  requirements:
        []\n  sha: 9a0e1c8ac7a80e9eb60ae3bd4008e606b7c7622acef7b2d0a83d8f40aa65e4d2\n-
        authors: Jerry D'Antonio\n  built_at: '2014-01-07T00:00:00.000Z'\n  created_at:
        '2014-01-07T20:45:32.748Z'\n  description: |2\n        Modern concurrency
        tools including agents, futures, promises, thread pools, actors, supervisors,
        and more.\n        Inspired by Erlang, Clojure, Go, JavaScript, actors, and
        classic concurrency patterns.\n  downloads_count: 2344\n  metadata: {}\n  number:
        0.4.0\n  summary: Modern concurrency tools including agents, futures, promises,
        thread pools,\n    actors, and more.\n  platform: ruby\n  rubygems_version:
        \">= 0\"\n  ruby_version: \n  prerelease: false\n  licenses:\n  - MIT\n  requirements:
        []\n  sha: 9ac92eb235709c9b372ee11954c53d6fda3cf7de6c6e5efa59fc65731da5f2f3\n-
        authors: Jerry D'Antonio\n  built_at: '2013-11-08T00:00:00.000Z'\n  created_at:
        '2013-11-08T12:24:11.431Z'\n  description: |2\n        Modern concurrency
        tools including agents, futures, promises, thread pools, actors, supervisors,
        and more.\n        Inspired by Erlang, Clojure, Go, JavaScript, actors, and
        classic concurrency patterns.\n  downloads_count: 1520\n  metadata: {}\n  number:
        0.3.2\n  summary: Modern concurrency tools including agents, futures, promises,
        thread pools,\n    actors, and more.\n  platform: ruby\n  rubygems_version:
        \">= 0\"\n  ruby_version: \n  prerelease: false\n  licenses:\n  - MIT\n  requirements:
        []\n  sha: b39010ce651b579ad5d81c79decff87cced2d21e488f1b9c278e689b61a2bf78\n-
        authors: Jerry D'Antonio\n  built_at: '2013-11-06T00:00:00.000Z'\n  created_at:
        '2013-11-07T02:37:02.533Z'\n  description: |2\n        Modern concurrency
        tools including agents, futures, promises, thread pools, actors, supervisors,
        and more.\n        Inspired by Erlang, Clojure, Go, JavaScript, actors, and
        classic concurrency patterns.\n  downloads_count: 1234\n  metadata: {}\n  number:
        0.3.1\n  summary: Modern concurrency tools including agents, futures, promises,
        thread pools,\n    actors, and more.\n  platform: ruby\n  rubygems_version:
        \">= 0\"\n  ruby_version: \n  prerelease: false\n  licenses:\n  - MIT\n  requirements:
        []\n  sha: 2de604f96137f7b281a7915728cb04c27c0ebbdf9f5e9fa2e487e9bfb7bae2a7\n-
        authors: Jerry D'Antonio\n  built_at: '2013-11-06T00:00:00.000Z'\n  created_at:
        '2013-11-06T15:13:53.154Z'\n  description: |2\n        Modern concurrency
        tools including agents, futures, promises, thread pools, actors, supervisors,
        and more.\n        Inspired by Erlang, Clojure, Go, JavaScript, actors, and
        classic concurrency patterns.\n  downloads_count: 664\n  metadata: {}\n  number:
        0.3.1.pre.2\n  summary: Modern concurrency tools including agents, futures,
        promises, thread pools,\n    actors, and more.\n  platform: ruby\n  rubygems_version:
        \"> 1.3.1\"\n  ruby_version: \n  prerelease: true\n  licenses:\n  - MIT\n
        \ requirements: []\n  sha: 5dfea5e0915d3ae8756432d0d227f1bb9eabfcd4f91446d9834a3a77c88bcaff\n-
        authors: Jerry D'Antonio\n  built_at: '2013-11-03T00:00:00.000Z'\n  created_at:
        '2013-11-03T23:04:37.506Z'\n  description: |2\n        Modern concurrency
        tools including agents, futures, promises, thread pools, actors, supervisors,
        and more.\n        Inspired by Erlang, Clojure, Go, JavaScript, actors, and
        classic concurrency patterns.\n  downloads_count: 635\n  metadata: {}\n  number:
        0.3.1.pre.1\n  summary: Modern concurrency tools including agents, futures,
        promises, thread pools,\n    actors, and more.\n  platform: ruby\n  rubygems_version:
        \"> 1.3.1\"\n  ruby_version: \n  prerelease: true\n  licenses:\n  - MIT\n
        \ requirements: []\n  sha: d2b7f8164c8fd42c83d9dccf0049cd9f653c82fb7e5e8416e371f895f0d5c7ad\n-
        authors: Jerry D'Antonio\n  built_at: '2013-10-17T00:00:00.000Z'\n  created_at:
        '2013-10-18T02:00:32.469Z'\n  description: |2\n        Modern concurrency
        tools including agents, futures, promises, thread pools, actors, supervisors,
        and more.\n        Inspired by Erlang, Clojure, Go, JavaScript, actors, and
        classic concurrency patterns.\n  downloads_count: 1298\n  metadata: {}\n  number:
        0.3.0\n  summary: Modern concurrency tools including agents, futures, promises,
        thread pools,\n    actors, and more.\n  platform: ruby\n  rubygems_version:
        \">= 0\"\n  ruby_version: \n  prerelease: false\n  licenses:\n  - MIT\n  requirements:
        []\n  sha: 8c49cda5da5f3825d9042c4136999b63c86b0e5c7cb9f79ad07f0004f886589f\n-
        authors: Jerry D'Antonio\n  built_at: '2013-10-17T00:00:00.000Z'\n  created_at:
        '2013-10-17T11:33:53.262Z'\n  description: |2\n        Modern concurrency
        tools including agents, futures, promises, thread pools, actors, supervisors,
        and more.\n        Inspired by Erlang, Clojure, Go, JavaScript, actors, and
        classic concurrency patterns.\n  downloads_count: 626\n  metadata: {}\n  number:
        0.3.0.pre.3\n  summary: Modern concurrency tools including agents, futures,
        promises, thread pools,\n    actors, and more.\n  platform: ruby\n  rubygems_version:
        \"> 1.3.1\"\n  ruby_version: \n  prerelease: true\n  licenses:\n  - MIT\n
        \ requirements: []\n  sha: b4baee562fe06ac7b3c9f12a2e6e37836b2d2a5311ea1f483fc0dcfcf32f5b30\n-
        authors: Jerry D'Antonio\n  built_at: '2013-10-13T00:00:00.000Z'\n  created_at:
        '2013-10-13T15:25:05.021Z'\n  description: |2\n        Modern concurrency
        tools including agents, futures, promises, thread pools, actors, supervisors,
        and more.\n        Inspired by Erlang, Clojure, Go, JavaScript, actors, and
        classic concurrency patterns.\n  downloads_count: 637\n  metadata: {}\n  number:
        0.3.0.pre.2\n  summary: Modern concurrency tools including agents, futures,
        promises, thread pools,\n    actors, and more.\n  platform: ruby\n  rubygems_version:
        \"> 1.3.1\"\n  ruby_version: \n  prerelease: true\n  licenses:\n  - MIT\n
        \ requirements: []\n  sha: 099a2607bd2af117cbd21350a077198ddcf35e96ede598775481a2554b1ea86a\n-
        authors: Jerry D'Antonio\n  built_at: '2013-10-09T00:00:00.000Z'\n  created_at:
        '2013-10-10T02:35:58.053Z'\n  description: |2\n        Modern concurrency
        tools including agents, futures, promises, thread pools, actors, supervisors,
        and more.\n        Inspired by Erlang, Clojure, Go, JavaScript, actors, and
        classic concurrency patterns.\n  downloads_count: 657\n  metadata: {}\n  number:
        0.3.0.pre.1\n  summary: Modern concurrency tools including agents, futures,
        promises, thread pools,\n    actors, and more.\n  platform: ruby\n  rubygems_version:
        \"> 1.3.1\"\n  ruby_version: \n  prerelease: true\n  licenses:\n  - MIT\n
        \ requirements: []\n  sha: 499b374c7e70ba387be65c7fea93f381d2cea763e27e84926049f659dfa28d11\n-
        authors: Jerry D'Antonio\n  built_at: '2013-08-20T00:00:00.000Z'\n  created_at:
        '2013-08-20T23:05:06.665Z'\n  description: |2\n        Modern concurrency
        tools including agents, futures, promises, thread pools, reactors, supervisors,
        and more.\n        Inspired by Erlang, Clojure, Go, JavaScript, actors, and
        classic concurrency patterns.\n  downloads_count: 1466\n  metadata: {}\n  number:
        0.2.2\n  summary: Modern concurrency tools including agents, futures, promises,
        thread pools,\n    reactors, and more.\n  platform: ruby\n  rubygems_version:
        \">= 0\"\n  ruby_version: \n  prerelease: false\n  licenses:\n  - MIT\n  requirements:
        []\n  sha: 5d022697c2afcdb7da66ec9bcc4714db0738095a3805bbe25c69479b18893b42\n-
        authors: Jerry D'Antonio\n  built_at: '2013-08-20T00:00:00.000Z'\n  created_at:
        '2013-08-20T13:15:05.595Z'\n  description: |2\n        Modern concurrency
        tools including agents, futures, promises, thread pools, reactors, and more.\n
        \       Inspired by Erlang, Clojure, Go, JavaScript, actors, and classic concurrency
        patterns.\n  downloads_count: 1360\n  metadata: {}\n  number: 0.2.1\n  summary:
        Modern concurrency tools including agents, futures, promises, thread pools,\n
        \   reactors, and more.\n  platform: ruby\n  rubygems_version: \">= 0\"\n
        \ ruby_version: \n  prerelease: false\n  licenses:\n  - MIT\n  requirements:
        []\n  sha: 8ca954f1da7ebc7154ac0d017598b3f8c2e983652734dde6f7ca898ca733a2e2\n-
        authors: Jerry D'Antonio\n  built_at: '2013-08-19T00:00:00.000Z'\n  created_at:
        '2013-08-20T03:40:45.348Z'\n  description: |2\n        Modern concurrency
        tools including agents, futures, promises, thread pools, reactors, and more.\n
        \       Inspired by Erlang, Clojure, Go, JavaScript, actors, and classic concurrency
        patterns.\n  downloads_count: 1340\n  metadata: {}\n  number: 0.2.0\n  summary:
        Modern concurrency tools including agents, futures, promises, thread pools,\n
        \   reactors, and more.\n  platform: ruby\n  rubygems_version: \">= 0\"\n
        \ ruby_version: \n  prerelease: false\n  licenses:\n  - MIT\n  requirements:
        []\n  sha: 136149fcb5df894203cabe5554f24d1d331f4108b5e3df403b1e49a1f524ff02\n-
        authors: Jerry D'Antonio\n  built_at: '2013-07-29T00:00:00.000Z'\n  created_at:
        '2013-07-29T22:42:29.113Z'\n  description: \"    A gem for adding Erlang,
        Clojure, and Go inspired concurrent programming\n    tools to Ruby.\\n\"\n
        \ downloads_count: 1363\n  metadata: {}\n  number: 0.1.1\n  summary: Erlang,
        Clojure, and Go inspired concurrent programming tools for Ruby.\n  platform:
        ruby\n  rubygems_version: \">= 0\"\n  ruby_version: \n  prerelease: false\n
        \ licenses:\n  - MIT\n  requirements: []\n  sha: 458c2e3b8fd0240936866b89091e02e27ceaafdc2bbf7b2abc21e9f7ac3e6793\n-
        authors: Jerry D'Antonio\n  built_at: '2013-08-15T00:00:00.000Z'\n  created_at:
        '2013-08-15T11:40:45.875Z'\n  description: \"    A gem for adding Erlang,
        Clojure, and Go inspired concurrent programming\n    tools to Ruby.\\n\"\n
        \ downloads_count: 634\n  metadata: {}\n  number: 0.1.1.pre.5\n  summary:
        Erlang, Clojure, and Go inspired concurrent programming tools for Ruby.\n
        \ platform: ruby\n  rubygems_version: \"> 1.3.1\"\n  ruby_version: \n  prerelease:
        true\n  licenses:\n  - MIT\n  requirements: []\n  sha: 0c5f51419ac7bd9809f12dc2f34c3cf536153dc65003ac758e48be682746f78a\n-
        authors: Jerry D'Antonio\n  built_at: '2013-08-13T00:00:00.000Z'\n  created_at:
        '2013-08-14T03:55:31.623Z'\n  description: \"    A gem for adding Erlang,
        Clojure, and Go inspired concurrent programming\n    tools to Ruby.\\n\"\n
        \ downloads_count: 639\n  metadata: {}\n  number: 0.1.1.pre.4\n  summary:
        Erlang, Clojure, and Go inspired concurrent programming tools for Ruby.\n
        \ platform: ruby\n  rubygems_version: \"> 1.3.1\"\n  ruby_version: \n  prerelease:
        true\n  licenses:\n  - MIT\n  requirements: []\n  sha: 038aae90bc606d8cf1c9f7f4ba947cf061e03a5cc3321a97fd21b14b752a4bdd\n-
        authors: Jerry D'Antonio\n  built_at: '2013-08-12T00:00:00.000Z'\n  created_at:
        '2013-08-12T13:31:40.509Z'\n  description: \"    A gem for adding Erlang,
        Clojure, and Go inspired concurrent programming\n    tools to Ruby.\\n\"\n
        \ downloads_count: 641\n  metadata: {}\n  number: 0.1.1.pre.3\n  summary:
        Erlang, Clojure, and Go inspired concurrent programming tools for Ruby.\n
        \ platform: ruby\n  rubygems_version: \"> 1.3.1\"\n  ruby_version: \n  prerelease:
        true\n  licenses:\n  - MIT\n  requirements: []\n  sha: 26db200d1fc73e6f24f30df69bf3d05da3201435ce4da452554e791148be2501\n-
        authors: Jerry D'Antonio\n  built_at: '2013-08-08T00:00:00.000Z'\n  created_at:
        '2013-08-08T19:03:32.479Z'\n  description: \"    A gem for adding Erlang,
        Clojure, and Go inspired concurrent programming\n    tools to Ruby.\\n\"\n
        \ downloads_count: 649\n  metadata: {}\n  number: 0.1.1.pre.2\n  summary:
        Erlang, Clojure, and Go inspired concurrent programming tools for Ruby.\n
        \ platform: ruby\n  rubygems_version: \"> 1.3.1\"\n  ruby_version: \n  prerelease:
        true\n  licenses:\n  - MIT\n  requirements: []\n  sha: 0c2a2f6d1554580d8a822317326751f3862e3bf1dcdaa100ed517f25f845aa00\n-
        authors: Jerry D'Antonio\n  built_at: '2013-08-06T00:00:00.000Z'\n  created_at:
        '2013-08-06T20:35:52.979Z'\n  description: \"    A gem for adding Erlang,
        Clojure, and Go inspired concurrent programming\n    tools to Ruby.\\n\"\n
        \ downloads_count: 659\n  metadata: {}\n  number: 0.1.1.pre.1\n  summary:
        Erlang, Clojure, and Go inspired concurrent programming tools for Ruby.\n
        \ platform: ruby\n  rubygems_version: \"> 1.3.1\"\n  ruby_version: \n  prerelease:
        true\n  licenses:\n  - MIT\n  requirements: []\n  sha: d12935ef902fec0d491687e1e6ffbc94029c4c0adb757127a61086506a266003\n-
        authors: Jerry D'Antonio\n  built_at: '2013-07-24T00:00:00.000Z'\n  created_at:
        '2013-07-25T00:46:45.577Z'\n  description: \"    A gem for adding Erlang,
        Clojure, and Go inspired concurrent programming\n    tools to Ruby.\\n\"\n
        \ downloads_count: 1380\n  metadata: {}\n  number: 0.1.0\n  summary: Erlang,
        Clojure, and Go inspired concurrent programming tools for Ruby.\n  platform:
        ruby\n  rubygems_version: \">= 0\"\n  ruby_version: \n  prerelease: false\n
        \ licenses:\n  - MIT\n  requirements: []\n  sha: 5b8e92480d91783cd956212b0ff097e69c11e5231a848625769b92a2de85b932\n-
        authors: Jerry D'Antonio\n  built_at: '2013-07-23T00:00:00.000Z'\n  created_at:
        '2013-07-23T12:19:11.080Z'\n  description: \"    This gem does nothing. It
        is a placeholder for a gem I plan to\n    build.\\n\"\n  downloads_count:
        1378\n  metadata: {}\n  number: 0.0.1\n  summary: This gem does nothing. It
        is a placeholder for a gem I plan to build.\n  platform: ruby\n  rubygems_version:
        \">= 0\"\n  ruby_version: \n  prerelease: false\n  licenses:\n  - MIT\n  requirements:
        []\n  sha: 71c6aa53a05c92c07f28c8e8d6c37f2a2a04e01d60c52ce245db4e87f2704f97\n"
    http_version: 
  recorded_at: Fri, 06 Jan 2017 17:09:59 GMT
- request:
    method: get
    uri: https://rubygems.org/api/v1/gems/concurrent-ruby/owners.yaml
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Gems 0.8.3
      - Ruby
      Authorization:
      - 1da62a2449ff2bdd425e9e82261f7b72
      Connection:
      - keep-alive
      Keep-Alive:
      - '30'
      Content-Type:
      - application/x-www-form-urlencoded
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - text/yaml
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
      Content-Disposition:
      - attachment
      Content-Transfer-Encoding:
      - binary
      Cache-Control:
      - private
      X-Request-Id:
      - e89f274c-ec80-4de4-b5a8-63b0d245f1e9
      X-Runtime:
      - '0.007059'
      X-Ua-Compatible:
      - IE=Edge,chrome=1
      X-Backend:
      - F_Rails 54.186.104.15:443
      Transfer-Encoding:
      - chunked
      Accept-Ranges:
      - bytes
      Date:
      - Fri, 06 Jan 2017 17:10:00 GMT
      Via:
      - 1.1 varnish
      Age:
      - '0'
      Connection:
      - keep-alive
      X-Served-By:
      - cache-bma7020-BMA
      X-Cache:
      - MISS
      X-Cache-Hits:
      - '0'
      X-Timer:
      - S1483722600.155421,VS0,VE199
      Vary:
      - Accept-Encoding,Fastly-SSL
      Etag:
      - '"3afbeb49f3c001cc686138644ebe3305"'
      Server:
      - RubyGems.org
    body:
      encoding: ASCII-8BIT
      string: |
        ---
        - id: 50229
          handle: pitr-ch
        - id: 85079
          handle: mighe
          email: michele.dellatorre@gmail.com
        - id: 65379
          handle: jdantonio
    http_version: 
  recorded_at: Fri, 06 Jan 2017 17:10:00 GMT
- request:
    method: get
    uri: https://rubygems.org/api/v1/gems/i18n.yaml
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Gems 0.8.3
      - Ruby
      Authorization:
      - 1da62a2449ff2bdd425e9e82261f7b72
      Connection:
      - keep-alive
      Keep-Alive:
      - '30'
      Content-Type:
      - application/x-www-form-urlencoded
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - text/yaml
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
      Content-Disposition:
      - attachment
      Content-Transfer-Encoding:
      - binary
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET
      Access-Control-Max-Age:
      - '1728000'
      Cache-Control:
      - private
      X-Request-Id:
      - 90e15792-6364-442f-a552-f3b6e571af7a
      X-Runtime:
      - '0.013610'
      X-Ua-Compatible:
      - IE=Edge,chrome=1
      X-Backend:
      - F_Rails 54.186.104.15:443
      Transfer-Encoding:
      - chunked
      Accept-Ranges:
      - bytes
      Date:
      - Fri, 06 Jan 2017 17:10:00 GMT
      Via:
      - 1.1 varnish
      Connection:
      - keep-alive
      X-Served-By:
      - cache-bma7035-BMA
      X-Cache:
      - MISS
      X-Cache-Hits:
      - '0'
      X-Timer:
      - S1483722600.535295,VS0,VE204
      Vary:
      - Accept-Encoding,Fastly-SSL
      Etag:
      - '"1b574b7a40480505ff24a5116a1ac04e"'
      Server:
      - RubyGems.org
    body:
      encoding: ASCII-8BIT
      string: |
        ---
        name: i18n
        downloads: 106114416
        version: 0.7.0
        version_downloads: 49428410
        platform: ruby
        authors: Sven Fuchs, Joshua Harvey, Matt Aimonetti, Stephan Soller, Saimon Moore
        info: New wave Internationalization support for Ruby.
        licenses:
        - MIT
        metadata: {}
        sha: a81cd327bd0f2c490ecf9f62f4a91ffaf5061aa2bf22cdbafe1a7e44a70fbfc4
        project_uri: https://rubygems.org/gems/i18n
        gem_uri: https://rubygems.org/gems/i18n-0.7.0.gem
        homepage_uri: http://github.com/svenfuchs/i18n
        wiki_uri: ''
        documentation_uri: http://rails-i18n.org
        mailing_list_uri: http://groups.google.com/group/rails-i18n
        source_code_uri: http://github.com/svenfuchs/i18n
        bug_tracker_uri: http://i18n.lighthouseapp.com
        dependencies:
          development: []
          runtime: []
    http_version: 
  recorded_at: Fri, 06 Jan 2017 17:10:00 GMT
- request:
    method: get
    uri: https://rubygems.org/api/v1/versions/i18n.yaml
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Gems 0.8.3
      - Ruby
      Authorization:
      - 1da62a2449ff2bdd425e9e82261f7b72
      Connection:
      - keep-alive
      Keep-Alive:
      - '30'
      Content-Type:
      - application/x-www-form-urlencoded
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - text/yaml
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
      Etag:
      - '"e9df10807a10300b48c353cf1ec21142"'
      Last-Modified:
      - Mon, 21 Nov 2016 00:47:30 GMT
      Content-Disposition:
      - attachment
      Content-Transfer-Encoding:
      - binary
      Cache-Control:
      - max-age=0, public
      X-Request-Id:
      - e0111bb4-da56-4c69-8c54-85c28656bf9d
      X-Runtime:
      - '0.061655'
      X-Ua-Compatible:
      - IE=Edge,chrome=1
      X-Backend:
      - F_Rails 54.186.104.15:443
      Content-Length:
      - '3014'
      Accept-Ranges:
      - bytes
      Date:
      - Fri, 06 Jan 2017 17:10:00 GMT
      Via:
      - 1.1 varnish
      Age:
      - '35'
      Connection:
      - keep-alive
      X-Served-By:
      - cache-bma7031-BMA
      X-Cache:
      - HIT
      X-Cache-Hits:
      - '4'
      X-Timer:
      - S1483722600.885880,VS0,VE0
      Vary:
      - Accept-Encoding,Fastly-SSL
      Server:
      - RubyGems.org
    body:
      encoding: ASCII-8BIT
      string: "---\n- authors: Sven Fuchs, Joshua Harvey, Matt Aimonetti, Stephan
        Soller, Saimon Moore\n  built_at: '2016-11-21T00:00:00.000Z'\n  created_at:
        '2016-11-21T00:47:29.297Z'\n  description: New wave Internationalization support
        for Ruby.\n  downloads_count: 22214\n  metadata: {}\n  number: 0.8.0.beta1\n
        \ summary: New wave Internationalization support for Ruby\n  platform: ruby\n
        \ rubygems_version: \">= 1.3.5\"\n  ruby_version: \">= 1.9.3\"\n  prerelease:
        true\n  licenses:\n  - MIT\n  requirements: []\n  sha: cb3c7d7752997a68e4315c7a46ff2dd2c9940733c9ed8e20c5c33a59e6c4363c\n-
        authors: Sven Fuchs, Joshua Harvey, Matt Aimonetti, Stephan Soller, Saimon
        Moore\n  built_at: '2014-12-19T00:00:00.000Z'\n  created_at: '2014-12-19T17:06:33.369Z'\n
        \ description: New wave Internationalization support for Ruby.\n  downloads_count:
        49428410\n  metadata: {}\n  number: 0.7.0\n  summary: New wave Internationalization
        support for Ruby\n  platform: ruby\n  rubygems_version: \">= 1.3.5\"\n  ruby_version:
        \">= 1.9.3\"\n  prerelease: false\n  licenses:\n  - MIT\n  requirements: []\n
        \ sha: a81cd327bd0f2c490ecf9f62f4a91ffaf5061aa2bf22cdbafe1a7e44a70fbfc4\n-
        authors: Sven Fuchs, Joshua Harvey, Matt Aimonetti, Stephan Soller, Saimon
        Moore\n  built_at: '2014-08-18T00:00:00.000Z'\n  created_at: '2014-08-18T17:10:03.195Z'\n
        \ description: New wave Internationalization support for Ruby.\n  downloads_count:
        605431\n  metadata: {}\n  number: 0.7.0.beta1\n  summary: New wave Internationalization
        support for Ruby\n  platform: ruby\n  rubygems_version: \">= 1.3.5\"\n  ruby_version:
        \">= 0\"\n  prerelease: true\n  licenses:\n  - MIT\n  requirements: []\n  sha:
        0d3ad9dff1dfb59f1a47d16419819bccefe55f694aa5902c2a41439cf2226b58\n- authors:
        Sven Fuchs, Joshua Harvey, Matt Aimonetti, Stephan Soller, Saimon Moore\n
        \ built_at: '2014-07-09T00:00:00.000Z'\n  created_at: '2014-07-09T17:58:12.570Z'\n
        \ description: New wave Internationalization support for Ruby.\n  downloads_count:
        9806955\n  metadata: {}\n  number: 0.6.11\n  summary: New wave Internationalization
        support for Ruby\n  platform: ruby\n  rubygems_version: \">= 1.3.5\"\n  ruby_version:
        \">= 0\"\n  prerelease: false\n  licenses:\n  - MIT\n  requirements: []\n
        \ sha: b37dda25b30484f2674a851e24ae098a38564a61c976fa91a34bf8fceaa3923b\n-
        authors: Sven Fuchs, Joshua Harvey, Matt Aimonetti, Stephan Soller, Saimon
        Moore\n  built_at: '2013-12-03T00:00:00.000Z'\n  created_at: '2013-12-03T22:10:01.369Z'\n
        \ description: New wave Internationalization support for Ruby.\n  downloads_count:
        9956168\n  metadata: {}\n  number: 0.6.9\n  summary: New wave Internationalization
        support for Ruby\n  platform: ruby\n  rubygems_version: \">= 1.3.5\"\n  ruby_version:
        \n  prerelease: false\n  licenses:\n  - MIT\n  requirements: []\n  sha: 1cd368e0b3854e8067955643892b18040e1d17f3c768daef8901298222e88e5d\n-
        authors: Sven Fuchs, Joshua Harvey, Matt Aimonetti, Stephan Soller, Saimon
        Moore\n  built_at: '2013-12-03T00:00:00.000Z'\n  created_at: '2013-12-03T20:02:09.191Z'\n
        \ description: New wave Internationalization support for Ruby.\n  downloads_count:
        88159\n  metadata: {}\n  number: 0.6.8\n  summary: New wave Internationalization
        support for Ruby\n  platform: ruby\n  rubygems_version: \">= 1.3.5\"\n  ruby_version:
        \n  prerelease: false\n  licenses:\n  - MIT\n  requirements: []\n  sha: 9eefaac0ca8e217726fa9b8ff90fdab4c4287265e4b64aec801f15a055403ab1\n-
        authors: Sven Fuchs, Joshua Harvey, Matt Aimonetti, Stephan Soller, Saimon
        Moore\n  built_at: '2013-08-13T00:00:00.000Z'\n  created_at: '2013-08-13T08:49:09.372Z'\n
        \ description: New wave Internationalization support for Ruby.\n  downloads_count:
        4527873\n  metadata: {}\n  number: 0.6.5\n  summary: New wave Internationalization
        support for Ruby\n  platform: ruby\n  rubygems_version: \">= 1.3.5\"\n  ruby_version:
        \n  prerelease: false\n  licenses:\n  - MIT\n  requirements: []\n  sha: 81c63a7d447cafa4b173c549835a3b2479a74e8d03ad815377601497e22d6133\n-
        authors: Sven Fuchs, Joshua Harvey, Matt Aimonetti, Stephan Soller, Saimon
        Moore\n  built_at: '2013-02-27T00:00:00.000Z'\n  created_at: '2013-02-27T23:46:48.368Z'\n
        \ description: New wave Internationalization support for Ruby.\n  downloads_count:
        3858689\n  metadata: {}\n  number: 0.6.4\n  summary: New wave Internationalization
        support for Ruby\n  platform: ruby\n  rubygems_version: \">= 1.3.5\"\n  ruby_version:
        \n  prerelease: false\n  licenses:\n  - MIT\n  requirements: \n  sha: 0e5cd2abe1118c5947c4aa6f1fee8c6b3677850422a8c473904158a2b3cde173\n-
        authors: Sven Fuchs, Joshua Harvey, Matt Aimonetti, Stephan Soller, Saimon
        Moore\n  built_at: '2013-02-27T00:00:00.000Z'\n  created_at: '2013-02-27T20:02:05.879Z'\n
        \ description: New wave Internationalization support for Ruby.\n  downloads_count:
        19854\n  metadata: {}\n  number: 0.6.3\n  summary: New wave Internationalization
        support for Ruby\n  platform: ruby\n  rubygems_version: \">= 1.3.5\"\n  ruby_version:
        \n  prerelease: false\n  licenses:\n  - MIT\n  requirements: \n  sha: f28cbdb904242380ef9421a6f6c2df330bb06f4364a8abd0b89d626526176b2b\n-
        authors: Sven Fuchs, Joshua Harvey, Matt Aimonetti, Stephan Soller, Saimon
        Moore\n  built_at: '2013-02-25T00:00:00.000Z'\n  created_at: '2013-02-25T22:56:57.692Z'\n
        \ description: New wave Internationalization support for Ruby.\n  downloads_count:
        165087\n  metadata: {}\n  number: 0.6.2\n  summary: New wave Internationalization
        support for Ruby\n  platform: ruby\n  rubygems_version: \">= 1.3.5\"\n  ruby_version:
        \n  prerelease: false\n  licenses:\n  - MIT\n  requirements: \n  sha: 835f806b9adb1d925e8e94c722c516c8fc0cd4303cd70895825616eb2c983b87\n-
        authors: Sven Fuchs, Joshua Harvey, Matt Aimonetti, Stephan Soller, Saimon
        Moore\n  built_at: '2012-08-31T00:00:00.000Z'\n  created_at: '2012-08-31T11:23:58.323Z'\n
        \ description: New wave Internationalization support for Ruby.\n  downloads_count:
        12441940\n  metadata: {}\n  number: 0.6.1\n  summary: New wave Internationalization
        support for Ruby\n  platform: ruby\n  rubygems_version: \">= 1.3.5\"\n  ruby_version:
        \n  prerelease: false\n  licenses: \n  requirements: \n  sha: d4ad6826f785a07b343f003886fc297fcacb3a84234dd3b16b6406bac3857474\n-
        authors: Sven Fuchs, Joshua Harvey, Matt Aimonetti, Stephan Soller, Saimon
        Moore\n  built_at: '2011-05-21T22:00:00.000Z'\n  created_at: '2011-05-22T11:34:49.582Z'\n
        \ description: New wave Internationalization support for Ruby.\n  downloads_count:
        7265358\n  metadata: {}\n  number: 0.6.0\n  summary: New wave Internationalization
        support for Ruby\n  platform: ruby\n  rubygems_version: \">= 1.3.5\"\n  ruby_version:
        \n  prerelease: false\n  licenses: \n  requirements: \n  sha: 400e7bf941f445176aac95ed22eea6fa4a74670543d1795e026473012b74f5dd\n-
        authors: Sven Fuchs, Joshua Harvey, Matt Aimonetti, Stephan Soller, Saimon
        Moore\n  built_at: '2011-04-25T22:00:00.000Z'\n  created_at: '2011-04-26T08:36:38.215Z'\n
        \ description: New wave Internationalization support for Ruby.\n  downloads_count:
        16766\n  metadata: {}\n  number: 0.6.0beta1\n  summary: New wave Internationalization
        support for Ruby\n  platform: ruby\n  rubygems_version: \">= 1.3.5\"\n  ruby_version:
        \n  prerelease: true\n  licenses: \n  requirements: \n  sha: 397fa08687c93ed1d259f0fe5b7fc78b1d64a25a635af4fb512b10a5d3b422a1\n-
        authors: Sven Fuchs, Joshua Harvey, Matt Aimonetti, Stephan Soller, Saimon
        Moore\n  built_at: '2014-05-28T00:00:00.000Z'\n  created_at: '2014-05-28T22:26:32.869Z'\n
        \ description: New wave Internationalization support for Ruby.\n  downloads_count:
        226957\n  metadata: {}\n  number: 0.5.4\n  summary: New wave Internationalization
        support for Ruby\n  platform: ruby\n  rubygems_version: \">= 1.3.5\"\n  ruby_version:
        \">= 0\"\n  prerelease: false\n  licenses: []\n  requirements: []\n  sha:
        172d48e9915f33634d34671d22cd403f712759ee81b1e40cb1dbf47f990fed17\n- authors:
        Sven Fuchs, Joshua Harvey, Matt Aimonetti, Stephan Soller, Saimon Moore\n
        \ built_at: '2013-12-09T00:00:00.000Z'\n  created_at: '2013-12-09T23:07:50.261Z'\n
        \ description: New wave Internationalization support for Ruby.\n  downloads_count:
        86482\n  metadata: {}\n  number: 0.5.3\n  summary: New wave Internationalization
        support for Ruby\n  platform: ruby\n  rubygems_version: \">= 1.3.5\"\n  ruby_version:
        \n  prerelease: false\n  licenses: []\n  requirements: []\n  sha: 5eafe4efaf72522f4523b2589c77b1a772708c4925b2e981b55d7a16f63d1dde\n-
        authors: Sven Fuchs, Joshua Harvey, Matt Aimonetti, Stephan Soller, Saimon
        Moore\n  built_at: '2013-12-03T00:00:00.000Z'\n  created_at: '2013-12-03T20:13:02.684Z'\n
        \ description: New wave Internationalization support for Ruby.\n  downloads_count:
        7748\n  metadata: {}\n  number: 0.5.2\n  summary: New wave Internationalization
        support for Ruby\n  platform: ruby\n  rubygems_version: \">= 1.3.5\"\n  ruby_version:
        \n  prerelease: false\n  licenses: []\n  requirements: []\n  sha: c445d45931ac6ddc6361ee494adbe96463fc99fab069fab5fc9b735d6f8292b6\n-
        authors: Sven Fuchs, Joshua Harvey, Matt Aimonetti, Stephan Soller, Saimon
        Moore\n  built_at: '2010-11-28T23:00:00.000Z'\n  created_at: '2010-11-29T09:13:47.990Z'\n
        \ description: New wave Internationalization support for Ruby.\n  downloads_count:
        5263156\n  metadata: {}\n  number: 0.5.0\n  summary: New wave Internationalization
        support for Ruby\n  platform: ruby\n  rubygems_version: \">= 1.3.5\"\n  ruby_version:
        \n  prerelease: false\n  licenses: \n  requirements: \n  sha: 340d9efd7082aa9cc711ac520601d44f1b7b2f92ac88c88d63cda2e6f621a481\n-
        authors: Sven Fuchs, Joshua Harvey, Matt Aimonetti, Stephan Soller, Saimon
        Moore\n  built_at: '2010-11-17T23:00:00.000Z'\n  created_at: '2010-11-18T07:56:44.007Z'\n
        \ description: New wave Internationalization support for Ruby.\n  downloads_count:
        8030\n  metadata: {}\n  number: 0.5.0beta3\n  summary: New wave Internationalization
        support for Ruby\n  platform: ruby\n  rubygems_version: \">= 1.3.5\"\n  ruby_version:
        \n  prerelease: true\n  licenses: \n  requirements: \n  sha: e23c515e603c33ed2e122b289ab4ce30cf85b44df9ab14735786a075ff2b0c93\n-
        authors: Sven Fuchs, Joshua Harvey, Matt Aimonetti, Stephan Soller, Saimon
        Moore\n  built_at: '2010-11-17T23:00:00.000Z'\n  created_at: '2010-11-18T01:04:43.532Z'\n
        \ description: New wave Internationalization support for Ruby.\n  downloads_count:
        1215\n  metadata: {}\n  number: 0.5.0beta2\n  summary: New wave Internationalization
        support for Ruby\n  platform: ruby\n  rubygems_version: \">= 1.3.5\"\n  ruby_version:
        \n  prerelease: true\n  licenses: \n  requirements: \n  sha: bad94ecd4452cba118668b0307a936475010837632e908cb58f1c6c1c1d2eb31\n-
        authors: Sven Fuchs, Joshua Harvey, Matt Aimonetti, Stephan Soller, Saimon
        Moore\n  built_at: '2010-11-13T23:00:00.000Z'\n  created_at: '2010-11-14T17:04:02.180Z'\n
        \ description: New wave Internationalization support for Ruby.\n  downloads_count:
        1397\n  metadata: {}\n  number: 0.5.0beta1\n  summary: New wave Internationalization
        support for Ruby\n  platform: ruby\n  rubygems_version: \">= 1.3.5\"\n  ruby_version:
        \n  prerelease: true\n  licenses: \n  requirements: \n  sha: 981b6784dab08628ebc5b125e445df180ab8b25b4e0941a8bdef2c87a3610c0c\n-
        authors: Sven Fuchs, Joshua Harvey, Matt Aimonetti, Stephan Soller, Saimon
        Moore\n  built_at: '2010-10-25T22:00:00.000Z'\n  created_at: '2010-10-26T19:56:26.742Z'\n
        \ description: New wave Internationalization support for Ruby.\n  downloads_count:
        1093471\n  metadata: {}\n  number: 0.4.2\n  summary: New wave Internationalization
        support for Ruby\n  platform: ruby\n  rubygems_version: \">= 1.3.5\"\n  ruby_version:
        \n  prerelease: false\n  licenses: \n  requirements: \n  sha: 1fda6faed58aed76fe69ef1ba4b95ca07a3699f6c51f4e4404826c53ce9f5546\n-
        authors: Sven Fuchs, Joshua Harvey, Matt Aimonetti, Stephan Soller, Saimon
        Moore\n  built_at: '2010-06-04T22:00:00.000Z'\n  created_at: '2010-06-05T17:37:36.108Z'\n
        \ description: New wave Internationalization support for Ruby.\n  downloads_count:
        948560\n  metadata: {}\n  number: 0.4.1\n  summary: New wave Internationalization
        support for Ruby\n  platform: ruby\n  rubygems_version: \">= 1.3.6\"\n  ruby_version:
        \n  prerelease: false\n  licenses: \n  requirements: \n  sha: 787e95afc93981bb8de7ad01d5aa325be12638315e94dcfc1612042340405c41\n-
        authors: Sven Fuchs, Joshua Harvey, Matt Aimonetti, Stephan Soller, Saimon
        Moore\n  built_at: '2010-05-26T22:00:00.000Z'\n  created_at: '2010-05-27T21:45:42.819Z'\n
        \ description: New wave Internationalization support for Ruby.\n  downloads_count:
        49084\n  metadata: {}\n  number: 0.4.0\n  summary: New wave Internationalization
        support for Ruby\n  platform: ruby\n  rubygems_version: \">= 1.3.6\"\n  ruby_version:
        \n  prerelease: false\n  licenses: \n  requirements: \n  sha: f9f8a0b0f862831f617a260e03a90f44009c47155f55202c2f39f2abb66827ce\n-
        authors: Sven Fuchs, Joshua Harvey, Matt Aimonetti, Stephan Soller, Saimon
        Moore\n  built_at: '2010-05-02T22:00:00.000Z'\n  created_at: '2010-05-03T11:45:12.762Z'\n
        \ description: New wave Internationalization support for Ruby.\n  downloads_count:
        3978\n  metadata: {}\n  number: 0.4.0.beta1\n  summary: New wave Internationalization
        support for Ruby\n  platform: ruby\n  rubygems_version: \">= 1.3.6\"\n  ruby_version:
        \n  prerelease: true\n  licenses: \n  requirements: \n  sha: 86cdc4efff23785ba6c452a2473d24f3ab6ac71d78cc29f99aa1f19c1e6c63fd\n-
        authors: Sven Fuchs, Joshua Harvey, Matt Aimonetti, Stephan Soller, Saimon
        Moore\n  built_at: '2010-04-29T22:00:00.000Z'\n  created_at: '2010-04-30T14:11:05.145Z'\n
        \ description: New wave Internationalization support for Ruby.\n  downloads_count:
        1648\n  metadata: {}\n  number: 0.4.0.beta\n  summary: New wave Internationalization
        support for Ruby\n  platform: ruby\n  rubygems_version: \">= 1.3.6\"\n  ruby_version:
        \n  prerelease: true\n  licenses: \n  requirements: \n  sha: 99765a8a5fa71b9d2e252b113c5b392197b280630539b7af79827664a425a9c9\n-
        authors: Sven Fuchs, Joshua Harvey, Matt Aimonetti, Stephan Soller, Saimon
        Moore\n  built_at: '2010-04-16T22:00:00.000Z'\n  created_at: '2010-04-17T14:47:33.660Z'\n
        \ description: New wave Internationalization support for Ruby.\n  downloads_count:
        113949\n  metadata: {}\n  number: 0.3.7\n  summary: New wave Internationalization
        support for Ruby\n  platform: ruby\n  rubygems_version: \">= 1.3.6\"\n  ruby_version:
        \n  prerelease: false\n  licenses: \n  requirements: \n  sha: 4764ea3b5a6402cbaafa1fe7d9b907ef0d5b93c1a228f5e9472586d2aa747121\n-
        authors: Sven Fuchs, Joshua Harvey, Matt Aimonetti, Stephan Soller, Saimon
        Moore\n  built_at: '2010-03-22T23:00:00.000Z'\n  created_at: '2010-03-23T22:45:26.458Z'\n
        \ description: Add Internationalization support to your Ruby application.\n
        \ downloads_count: 20454\n  metadata: {}\n  number: 0.3.6\n  summary: New
        wave Internationalization support for Ruby\n  platform: ruby\n  rubygems_version:
        \">= 0\"\n  ruby_version: \n  prerelease: false\n  licenses: \n  requirements:
        \n  sha: ac2fb92383a739ecb4710615488bed56ad20b2af744b9bb215c5077d5cb7b3a3\n-
        authors: Sven Fuchs, Joshua Harvey, Matt Aimonetti, Stephan Soller, Saimon
        Moore\n  built_at: '2010-03-09T23:00:00.000Z'\n  created_at: '2010-03-10T21:08:05.363Z'\n
        \ description: Add Internationalization support to your Ruby application.\n
        \ downloads_count: 7528\n  metadata: {}\n  number: 0.3.6.pre\n  summary: New
        wave Internationalization support for Ruby\n  platform: ruby\n  rubygems_version:
        \"> 1.3.1\"\n  ruby_version: \n  prerelease: true\n  licenses: \n  requirements:
        \n  sha: 983038bd7af5b243f17a0fe472313c4d659566b6209435ba8a045d39273f4947\n-
        authors: Sven Fuchs, Joshua Harvey, Matt Aimonetti, Stephan Soller, Saimon
        Moore\n  built_at: '2010-02-25T23:00:00.000Z'\n  created_at: '2010-02-25T23:07:03.875Z'\n
        \ description: Add Internationalization support to your Ruby application.\n
        \ downloads_count: 15299\n  metadata: {}\n  number: 0.3.5\n  summary: New
        wave Internationalization support for Ruby\n  platform: ruby\n  rubygems_version:
        \">= 0\"\n  ruby_version: \n  prerelease: false\n  licenses: \n  requirements:
        \n  sha: 20c70ad25b67a59116efeda4233b9f0313d7c5289c9b882f2b78fce9ee86f1ab\n-
        authors: Sven Fuchs, Joshua Harvey, Matt Aimonetti, Stephan Soller, Saimon
        Moore\n  built_at: '2010-02-24T23:00:00.000Z'\n  created_at: '2010-02-25T13:45:44.965Z'\n
        \ description: Add Internationalization support to your Ruby application.\n
        \ downloads_count: 2919\n  metadata: {}\n  number: 0.3.4\n  summary: New wave
        Internationalization support for Ruby\n  platform: ruby\n  rubygems_version:
        \">= 0\"\n  ruby_version: \n  prerelease: false\n  licenses: \n  requirements:
        \n  sha: 63017a79aca27480883b900174214b7e277c26bbb4fea416937c3384ae886760\n-
        authors: Sven Fuchs, Joshua Harvey, Matt Aimonetti, Stephan Soller, Saimon
        Moore\n  built_at: '2009-12-28T23:00:00.000Z'\n  created_at: '2009-12-29T14:34:44.718Z'\n
        \ description: Add Internationalization support to your Ruby application.\n
        \ downloads_count: 25029\n  metadata: {}\n  number: 0.3.3\n  summary: New
        wave Internationalization support for Ruby\n  platform: ruby\n  rubygems_version:
        \">= 0\"\n  ruby_version: \n  prerelease: false\n  licenses: \n  requirements:
        \n  sha: 35c9e4e3a1be3233ef2e7fbdb8006cfcb2aadb2a09234674ad870bb6ac5881c5\n-
        authors: Sven Fuchs, Joshua Harvey, Matt Aimonetti, Stephan Soller, Saimon
        Moore\n  built_at: '2009-12-11T23:00:00.000Z'\n  created_at: '2009-12-12T12:10:05.881Z'\n
        \ description: Add Internationalization support to your Ruby application.\n
        \ downloads_count: 3492\n  metadata: {}\n  number: 0.3.2\n  summary: New wave
        Internationalization support for Ruby\n  platform: ruby\n  rubygems_version:
        \">= 0\"\n  ruby_version: \n  prerelease: false\n  licenses: \n  requirements:
        \n  sha: fdc0eccb723e4089cdd6611f656093c2d70d1c553d624dfd09ab5a789e8689ae\n-
        authors: Sven Fuchs, Joshua Harvey, Matt Aimonetti, Stephan Soller, Saimon
        Moore\n  built_at: '2009-12-10T23:00:00.000Z'\n  created_at: '2009-12-10T23:19:17.823Z'\n
        \ description: Add Internationalization support to your Ruby application.\n
        \ downloads_count: 2437\n  metadata: {}\n  number: 0.3.1\n  summary: New wave
        Internationalization support for Ruby\n  platform: ruby\n  rubygems_version:
        \">= 0\"\n  ruby_version: \n  prerelease: false\n  licenses: \n  requirements:
        \n  sha: 43862c4989017a219ab641caed4c5ec3f4ce125231c9d4522049d17bfa30ad19\n-
        authors: Sven Fuchs, Joshua Harvey, Matt Aimonetti, Stephan Soller, Saimon
        Moore\n  built_at: '2009-11-29T23:00:00.000Z'\n  created_at: '2009-11-30T14:15:41.419Z'\n
        \ description: Add Internationalization support to your Ruby application.\n
        \ downloads_count: 7932\n  metadata: {}\n  number: 0.3.0\n  summary: New wave
        Internationalization support for Ruby\n  platform: ruby\n  rubygems_version:
        \">= 0\"\n  ruby_version: \n  prerelease: false\n  licenses: \n  requirements:
        \n  sha: ab4edaa6eb483b1e8def80e28428b65dcfd1ae759d004065f59742b9c561bbab\n-
        authors: Sven Fuchs, Joshua Harvey, Matt Aimonetti, Stephan Soller, Saimon
        Moore\n  built_at: '2009-07-11T22:00:00.000Z'\n  created_at: '2009-11-19T12:12:36.254Z'\n
        \ description: Add Internationalization support to your Ruby application.\n
        \ downloads_count: 2887\n  metadata: {}\n  number: 0.2.1\n  summary: New wave
        Internationalization support for Ruby\n  platform: ruby\n  rubygems_version:
        \">= 0\"\n  ruby_version: \n  prerelease: false\n  licenses: \n  requirements:
        \n  sha: 859cdea7a42641a8db4be146ea053fe4f8346a7a576e62e736c4c456b8556b6e\n-
        authors: Sven Fuchs, Joshua Harvey, Matt Aimonetti, Stephan Soller, Saimon
        Moore\n  built_at: '2009-07-15T22:00:00.000Z'\n  created_at: '2009-08-05T00:31:48.000Z'\n
        \ description: Add Internationalization support to your Ruby application.\n
        \ downloads_count: 4647\n  metadata: {}\n  number: 0.2.0\n  summary: New wave
        Internationalization support for Ruby\n  platform: ruby\n  rubygems_version:
        \">= 0\"\n  ruby_version: \n  prerelease: false\n  licenses: \n  requirements:
        \n  sha: 31d9df7c690c0bb89bfc389b0f1ce4c7bcc491b41700d359b01a63c20c7d348a\n-
        authors: Sven Fuchs, Matt Aimonetti, Stephan Soller, Saimon Moore\n  built_at:
        '2008-06-12T22:00:00.000Z'\n  created_at: '2009-07-25T18:13:57.000Z'\n  description:
        Add Internationalization to your Ruby application.\n  downloads_count: 3694\n
        \ metadata: {}\n  number: 0.1.0\n  summary: Internationalization for Ruby\n
        \ platform: ruby\n  rubygems_version: \">= 0\"\n  ruby_version: \n  prerelease:
        false\n  licenses: \n  requirements: \n  sha: eaa43abe33ffebbd8308137c36a1ce13c9e2322a48913721210cff06e0ba605e\n"
    http_version: 
  recorded_at: Fri, 06 Jan 2017 17:10:00 GMT
- request:
    method: get
    uri: https://rubygems.org/api/v1/gems/i18n/owners.yaml
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Gems 0.8.3
      - Ruby
      Authorization:
      - 1da62a2449ff2bdd425e9e82261f7b72
      Connection:
      - keep-alive
      Keep-Alive:
      - '30'
      Content-Type:
      - application/x-www-form-urlencoded
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - text/yaml
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
      Content-Disposition:
      - attachment
      Content-Transfer-Encoding:
      - binary
      Cache-Control:
      - private
      X-Request-Id:
      - 3413fa59-0a48-4ecc-a10b-ce0e2b0a7985
      X-Runtime:
      - '0.005960'
      X-Ua-Compatible:
      - IE=Edge,chrome=1
      X-Backend:
      - F_Rails 54.186.104.15:443
      Transfer-Encoding:
      - chunked
      Accept-Ranges:
      - bytes
      Date:
      - Fri, 06 Jan 2017 17:10:01 GMT
      Via:
      - 1.1 varnish
      Age:
      - '0'
      Connection:
      - keep-alive
      X-Served-By:
      - cache-bma7030-BMA
      X-Cache:
      - MISS
      X-Cache-Hits:
      - '0'
      X-Timer:
      - S1483722601.066249,VS0,VE201
      Vary:
      - Accept-Encoding,Fastly-SSL
      Etag:
      - '"73b3d859b618c7399e3978c96d2dd754"'
      Server:
      - RubyGems.org
    body:
      encoding: ASCII-8BIT
      string: "---\n- id: 27\n  handle: ryanbigg\n  email: radarlistener@gmail.com\n-
        id: 2536\n  handle: \n  email: svenfuchs@artweb-design.de\n- id: 2213\n  handle:
        clemensk\n  email: clemens@railway.at\n- id: 40799\n  handle: saimon\n  email:
        saimonmoore@gmail.com\n- id: 818\n  handle: matt_a\n  email: mattaimonetti@gmail.com\n-
        id: 20295\n  handle: arkanis\n  email: stephan.soller@helionweb.de\n- id:
        20169\n  handle: sfuchs\n  email: rubyforge.svenfuchs@artweb-design.de\n-
        id: 2568\n  handle: josevalim\n  email: jose.valim@gmail.com\n- id: 50166\n
        \ handle: Tigrish\n  email: chris@tigrish.com\n- id: 429\n  handle: cantoniodasilva\n
        \ email: carlosantoniodasilva@gmail.com\n"
    http_version: 
  recorded_at: Fri, 06 Jan 2017 17:10:01 GMT
- request:
    method: get
    uri: https://rubygems.org/api/v1/gems/minitest.yaml
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Gems 0.8.3
      - Ruby
      Authorization:
      - 1da62a2449ff2bdd425e9e82261f7b72
      Connection:
      - keep-alive
      Keep-Alive:
      - '30'
      Content-Type:
      - application/x-www-form-urlencoded
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - text/yaml
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
      Content-Disposition:
      - attachment
      Content-Transfer-Encoding:
      - binary
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET
      Access-Control-Max-Age:
      - '1728000'
      Cache-Control:
      - private
      X-Request-Id:
      - b261b862-b20d-4dca-abc9-61387143cf13
      X-Runtime:
      - '0.012700'
      X-Ua-Compatible:
      - IE=Edge,chrome=1
      X-Backend:
      - F_Rails 54.186.104.15:443
      Transfer-Encoding:
      - chunked
      Accept-Ranges:
      - bytes
      Date:
      - Fri, 06 Jan 2017 17:10:01 GMT
      Via:
      - 1.1 varnish
      Connection:
      - keep-alive
      X-Served-By:
      - cache-bma7025-BMA
      X-Cache:
      - MISS
      X-Cache-Hits:
      - '0'
      X-Timer:
      - S1483722601.486657,VS0,VE194
      Vary:
      - Accept-Encoding,Fastly-SSL
      Etag:
      - '"ba078fcc00f352e809010a148c5e466f"'
      Server:
      - RubyGems.org
    body:
      encoding: ASCII-8BIT
      string: "---\nname: minitest\ndownloads: 71137324\nversion: 5.10.1\nversion_downloads:
        1267926\nplatform: ruby\nauthors: Ryan Davis\ninfo: |-\n  minitest provides
        a complete suite of testing facilities supporting\n  TDD, BDD, mocking, and
        benchmarking.\n\n      \"I had a class with Jim Weirich on testing last week
        and we were\n       allowed to choose our testing frameworks. Kirk Haines
        and I were\n       paired up and we cracked open the code for a few test\n
        \      frameworks...\n\n       I MUST say that minitest is *very* readable
        / understandable\n       compared to the 'other two' options we looked at.
        Nicely done and\n       thank you for helping us keep our mental sanity.\"\n\n
        \     -- Wayne E. Seguin\n\n  minitest/test is a small and incredibly fast
        unit testing framework.\n  It provides a rich set of assertions to make your
        tests clean and\n  readable.\n\n  minitest/spec is a functionally complete
        spec engine. It hooks onto\n  minitest/test and seamlessly bridges test assertions
        over to spec\n  expectations.\n\n  minitest/benchmark is an awesome way to
        assert the performance of your\n  algorithms in a repeatable manner. Now you
        can assert that your newb\n  co-worker doesn't replace your linear algorithm
        with an exponential\n  one!\n\n  minitest/mock by Steven Baker, is a beautifully
        tiny mock (and stub)\n  object framework.\n\n  minitest/pride shows pride
        in testing and adds coloring to your test\n  output. I guess it is an example
        of how to write IO pipes too. :P\n\n  minitest/test is meant to have a clean
        implementation for language\n  implementors that need a minimal set of methods
        to bootstrap a working\n  test suite. For example, there is no magic involved
        for test-case\n  discovery.\n\n      \"Again, I can't praise enough the idea
        of a testing/specing\n       framework that I can actually read in full in
        one sitting!\"\n\n      -- Piotr Szotkowski\n\n  Comparing to rspec:\n\n      rspec
        is a testing DSL. minitest is ruby.\n\n      -- Adam Hawkins, \"Bow Before
        MiniTest\"\n\n  minitest doesn't reinvent anything that ruby already provides,
        like:\n  classes, modules, inheritance, methods. This means you only have
        to\n  learn ruby to use minitest and all of your regular OO practices like\n
        \ extract-method refactorings still apply.\nlicenses:\n- MIT\nmetadata: {}\nsha:
        4bf1fcf3306977f97348ff3c46520191a853c2637628aea20db55c7035aa62fa\nproject_uri:
        https://rubygems.org/gems/minitest\ngem_uri: https://rubygems.org/gems/minitest-5.10.1.gem\nhomepage_uri:
        https://github.com/seattlerb/minitest\nwiki_uri: \ndocumentation_uri: http://www.rubydoc.info/gems/minitest/5.10.1\nmailing_list_uri:
        \nsource_code_uri: \nbug_tracker_uri: \ndependencies:\n  development:\n  -
        name: hoe\n    requirements: \"~> 3.15\"\n  - name: rdoc\n    requirements:
        \"~> 4.0\"\n  runtime: []\n"
    http_version: 
  recorded_at: Fri, 06 Jan 2017 17:10:01 GMT
- request:
    method: get
    uri: https://rubygems.org/api/v1/versions/minitest.yaml
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Gems 0.8.3
      - Ruby
      Authorization:
      - 1da62a2449ff2bdd425e9e82261f7b72
      Connection:
      - keep-alive
      Keep-Alive:
      - '30'
      Content-Type:
      - application/x-www-form-urlencoded
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - text/yaml
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
      Etag:
      - '"c453d37fdee31d5ca6667e4e0478878e"'
      Last-Modified:
      - Fri, 02 Dec 2016 00:04:36 GMT
      Content-Disposition:
      - attachment
      Content-Transfer-Encoding:
      - binary
      Cache-Control:
      - max-age=0, public
      X-Request-Id:
      - e88e8379-3242-4618-9739-4d46321ee09d
      X-Runtime:
      - '0.161142'
      X-Ua-Compatible:
      - IE=Edge,chrome=1
      X-Backend:
      - F_Rails 54.186.104.15:443
      Content-Length:
      - '10336'
      Accept-Ranges:
      - bytes
      Date:
      - Fri, 06 Jan 2017 17:10:01 GMT
      Via:
      - 1.1 varnish
      Age:
      - '34'
      Connection:
      - keep-alive
      X-Served-By:
      - cache-bma7022-BMA
      X-Cache:
      - HIT
      X-Cache-Hits:
      - '1'
      X-Timer:
      - S1483722601.828064,VS0,VE0
      Vary:
      - Accept-Encoding,Fastly-SSL
      Server:
      - RubyGems.org
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        LS0tCi0gYXV0aG9yczogUnlhbiBEYXZpcwogIGJ1aWx0X2F0OiAnMjAxNi0x
        Mi0wMlQwMDowMDowMC4wMDBaJwogIGNyZWF0ZWRfYXQ6ICcyMDE2LTEyLTAy
        VDAwOjA0OjM1LjQzMVonCiAgZGVzY3JpcHRpb246IHwtCiAgICBtaW5pdGVz
        dCBwcm92aWRlcyBhIGNvbXBsZXRlIHN1aXRlIG9mIHRlc3RpbmcgZmFjaWxp
        dGllcyBzdXBwb3J0aW5nCiAgICBUREQsIEJERCwgbW9ja2luZywgYW5kIGJl
        bmNobWFya2luZy4KCiAgICAgICAgIkkgaGFkIGEgY2xhc3Mgd2l0aCBKaW0g
        V2VpcmljaCBvbiB0ZXN0aW5nIGxhc3Qgd2VlayBhbmQgd2Ugd2VyZQogICAg
        ICAgICBhbGxvd2VkIHRvIGNob29zZSBvdXIgdGVzdGluZyBmcmFtZXdvcmtz
        LiBLaXJrIEhhaW5lcyBhbmQgSSB3ZXJlCiAgICAgICAgIHBhaXJlZCB1cCBh
        bmQgd2UgY3JhY2tlZCBvcGVuIHRoZSBjb2RlIGZvciBhIGZldyB0ZXN0CiAg
        ICAgICAgIGZyYW1ld29ya3MuLi4KCiAgICAgICAgIEkgTVVTVCBzYXkgdGhh
        dCBtaW5pdGVzdCBpcyAqdmVyeSogcmVhZGFibGUgLyB1bmRlcnN0YW5kYWJs
        ZQogICAgICAgICBjb21wYXJlZCB0byB0aGUgJ290aGVyIHR3bycgb3B0aW9u
        cyB3ZSBsb29rZWQgYXQuIE5pY2VseSBkb25lIGFuZAogICAgICAgICB0aGFu
        ayB5b3UgZm9yIGhlbHBpbmcgdXMga2VlcCBvdXIgbWVudGFsIHNhbml0eS4i
        CgogICAgICAgIC0tIFdheW5lIEUuIFNlZ3VpbgoKICAgIG1pbml0ZXN0L3Rl
        c3QgaXMgYSBzbWFsbCBhbmQgaW5jcmVkaWJseSBmYXN0IHVuaXQgdGVzdGlu
        ZyBmcmFtZXdvcmsuCiAgICBJdCBwcm92aWRlcyBhIHJpY2ggc2V0IG9mIGFz
        c2VydGlvbnMgdG8gbWFrZSB5b3VyIHRlc3RzIGNsZWFuIGFuZAogICAgcmVh
        ZGFibGUuCgogICAgbWluaXRlc3Qvc3BlYyBpcyBhIGZ1bmN0aW9uYWxseSBj
        b21wbGV0ZSBzcGVjIGVuZ2luZS4gSXQgaG9va3Mgb250bwogICAgbWluaXRl
        c3QvdGVzdCBhbmQgc2VhbWxlc3NseSBicmlkZ2VzIHRlc3QgYXNzZXJ0aW9u
        cyBvdmVyIHRvIHNwZWMKICAgIGV4cGVjdGF0aW9ucy4KCiAgICBtaW5pdGVz
        dC9iZW5jaG1hcmsgaXMgYW4gYXdlc29tZSB3YXkgdG8gYXNzZXJ0IHRoZSBw
        ZXJmb3JtYW5jZSBvZiB5b3VyCiAgICBhbGdvcml0aG1zIGluIGEgcmVwZWF0
        YWJsZSBtYW5uZXIuIE5vdyB5b3UgY2FuIGFzc2VydCB0aGF0IHlvdXIgbmV3
        YgogICAgY28td29ya2VyIGRvZXNuJ3QgcmVwbGFjZSB5b3VyIGxpbmVhciBh
        bGdvcml0aG0gd2l0aCBhbiBleHBvbmVudGlhbAogICAgb25lIQoKICAgIG1p
        bml0ZXN0L21vY2sgYnkgU3RldmVuIEJha2VyLCBpcyBhIGJlYXV0aWZ1bGx5
        IHRpbnkgbW9jayAoYW5kIHN0dWIpCiAgICBvYmplY3QgZnJhbWV3b3JrLgoK
        ICAgIG1pbml0ZXN0L3ByaWRlIHNob3dzIHByaWRlIGluIHRlc3RpbmcgYW5k
        IGFkZHMgY29sb3JpbmcgdG8geW91ciB0ZXN0CiAgICBvdXRwdXQuIEkgZ3Vl
        c3MgaXQgaXMgYW4gZXhhbXBsZSBvZiBob3cgdG8gd3JpdGUgSU8gcGlwZXMg
        dG9vLiA6UAoKICAgIG1pbml0ZXN0L3Rlc3QgaXMgbWVhbnQgdG8gaGF2ZSBh
        IGNsZWFuIGltcGxlbWVudGF0aW9uIGZvciBsYW5ndWFnZQogICAgaW1wbGVt
        ZW50b3JzIHRoYXQgbmVlZCBhIG1pbmltYWwgc2V0IG9mIG1ldGhvZHMgdG8g
        Ym9vdHN0cmFwIGEgd29ya2luZwogICAgdGVzdCBzdWl0ZS4gRm9yIGV4YW1w
        bGUsIHRoZXJlIGlzIG5vIG1hZ2ljIGludm9sdmVkIGZvciB0ZXN0LWNhc2UK
        ICAgIGRpc2NvdmVyeS4KCiAgICAgICAgIkFnYWluLCBJIGNhbid0IHByYWlz
        ZSBlbm91Z2ggdGhlIGlkZWEgb2YgYSB0ZXN0aW5nL3NwZWNpbmcKICAgICAg
        ICAgZnJhbWV3b3JrIHRoYXQgSSBjYW4gYWN0dWFsbHkgcmVhZCBpbiBmdWxs
        IGluIG9uZSBzaXR0aW5nISIKCiAgICAgICAgLS0gUGlvdHIgU3pvdGtvd3Nr
        aQoKICAgIENvbXBhcmluZyB0byByc3BlYzoKCiAgICAgICAgcnNwZWMgaXMg
        YSB0ZXN0aW5nIERTTC4gbWluaXRlc3QgaXMgcnVieS4KCiAgICAgICAgLS0g
        QWRhbSBIYXdraW5zLCAiQm93IEJlZm9yZSBNaW5pVGVzdCIKCiAgICBtaW5p
        dGVzdCBkb2Vzbid0IHJlaW52ZW50IGFueXRoaW5nIHRoYXQgcnVieSBhbHJl
        YWR5IHByb3ZpZGVzLCBsaWtlOgogICAgY2xhc3NlcywgbW9kdWxlcywgaW5o
        ZXJpdGFuY2UsIG1ldGhvZHMuIFRoaXMgbWVhbnMgeW91IG9ubHkgaGF2ZSB0
        bwogICAgbGVhcm4gcnVieSB0byB1c2UgbWluaXRlc3QgYW5kIGFsbCBvZiB5
        b3VyIHJlZ3VsYXIgT08gcHJhY3RpY2VzIGxpa2UKICAgIGV4dHJhY3QtbWV0
        aG9kIHJlZmFjdG9yaW5ncyBzdGlsbCBhcHBseS4KICBkb3dubG9hZHNfY291
        bnQ6IDEyNjc5MjYKICBtZXRhZGF0YToge30KICBudW1iZXI6IDUuMTAuMQog
        IHN1bW1hcnk6IG1pbml0ZXN0IHByb3ZpZGVzIGEgY29tcGxldGUgc3VpdGUg
        b2YgdGVzdGluZyBmYWNpbGl0aWVzIHN1cHBvcnRpbmcgVERELAogICAgQkRE
        LCBtb2NraW5nLCBhbmQgYmVuY2htYXJraW5nCiAgcGxhdGZvcm06IHJ1YnkK
        ICBydWJ5Z2Vtc192ZXJzaW9uOiAiPj0gMCIKICBydWJ5X3ZlcnNpb246ICI+
        PSAwIgogIHByZXJlbGVhc2U6IGZhbHNlCiAgbGljZW5zZXM6CiAgLSBNSVQK
        ICByZXF1aXJlbWVudHM6IFtdCiAgc2hhOiA0YmYxZmNmMzMwNjk3N2Y5NzM0
        OGZmM2M0NjUyMDE5MWE4NTNjMjYzNzYyOGFlYTIwZGI1NWM3MDM1YWE2MmZh
        Ci0gYXV0aG9yczogUnlhbiBEYXZpcwogIGJ1aWx0X2F0OiAnMjAxNi0xMi0w
        MVQwMDowMDowMC4wMDBaJwogIGNyZWF0ZWRfYXQ6ICcyMDE2LTEyLTAxVDAx
        OjIzOjEyLjk4OVonCiAgZGVzY3JpcHRpb246IHwtCiAgICBtaW5pdGVzdCBw
        cm92aWRlcyBhIGNvbXBsZXRlIHN1aXRlIG9mIHRlc3RpbmcgZmFjaWxpdGll
        cyBzdXBwb3J0aW5nCiAgICBUREQsIEJERCwgbW9ja2luZywgYW5kIGJlbmNo
        bWFya2luZy4KCiAgICAgICAgIkkgaGFkIGEgY2xhc3Mgd2l0aCBKaW0gV2Vp
        cmljaCBvbiB0ZXN0aW5nIGxhc3Qgd2VlayBhbmQgd2Ugd2VyZQogICAgICAg
        ICBhbGxvd2VkIHRvIGNob29zZSBvdXIgdGVzdGluZyBmcmFtZXdvcmtzLiBL
        aXJrIEhhaW5lcyBhbmQgSSB3ZXJlCiAgICAgICAgIHBhaXJlZCB1cCBhbmQg
        d2UgY3JhY2tlZCBvcGVuIHRoZSBjb2RlIGZvciBhIGZldyB0ZXN0CiAgICAg
        ICAgIGZyYW1ld29ya3MuLi4KCiAgICAgICAgIEkgTVVTVCBzYXkgdGhhdCBt
        aW5pdGVzdCBpcyAqdmVyeSogcmVhZGFibGUgLyB1bmRlcnN0YW5kYWJsZQog
        ICAgICAgICBjb21wYXJlZCB0byB0aGUgJ290aGVyIHR3bycgb3B0aW9ucyB3
        ZSBsb29rZWQgYXQuIE5pY2VseSBkb25lIGFuZAogICAgICAgICB0aGFuayB5
        b3UgZm9yIGhlbHBpbmcgdXMga2VlcCBvdXIgbWVudGFsIHNhbml0eS4iCgog
        ICAgICAgIC0tIFdheW5lIEUuIFNlZ3VpbgoKICAgIG1pbml0ZXN0L3Rlc3Qg
        aXMgYSBzbWFsbCBhbmQgaW5jcmVkaWJseSBmYXN0IHVuaXQgdGVzdGluZyBm
        cmFtZXdvcmsuCiAgICBJdCBwcm92aWRlcyBhIHJpY2ggc2V0IG9mIGFzc2Vy
        dGlvbnMgdG8gbWFrZSB5b3VyIHRlc3RzIGNsZWFuIGFuZAogICAgcmVhZGFi
        bGUuCgogICAgbWluaXRlc3Qvc3BlYyBpcyBhIGZ1bmN0aW9uYWxseSBjb21w
        bGV0ZSBzcGVjIGVuZ2luZS4gSXQgaG9va3Mgb250bwogICAgbWluaXRlc3Qv
        dGVzdCBhbmQgc2VhbWxlc3NseSBicmlkZ2VzIHRlc3QgYXNzZXJ0aW9ucyBv
        dmVyIHRvIHNwZWMKICAgIGV4cGVjdGF0aW9ucy4KCiAgICBtaW5pdGVzdC9i
        ZW5jaG1hcmsgaXMgYW4gYXdlc29tZSB3YXkgdG8gYXNzZXJ0IHRoZSBwZXJm
        b3JtYW5jZSBvZiB5b3VyCiAgICBhbGdvcml0aG1zIGluIGEgcmVwZWF0YWJs
        ZSBtYW5uZXIuIE5vdyB5b3UgY2FuIGFzc2VydCB0aGF0IHlvdXIgbmV3Ygog
        ICAgY28td29ya2VyIGRvZXNuJ3QgcmVwbGFjZSB5b3VyIGxpbmVhciBhbGdv
        cml0aG0gd2l0aCBhbiBleHBvbmVudGlhbAogICAgb25lIQoKICAgIG1pbml0
        ZXN0L21vY2sgYnkgU3RldmVuIEJha2VyLCBpcyBhIGJlYXV0aWZ1bGx5IHRp
        bnkgbW9jayAoYW5kIHN0dWIpCiAgICBvYmplY3QgZnJhbWV3b3JrLgoKICAg
        IG1pbml0ZXN0L3ByaWRlIHNob3dzIHByaWRlIGluIHRlc3RpbmcgYW5kIGFk
        ZHMgY29sb3JpbmcgdG8geW91ciB0ZXN0CiAgICBvdXRwdXQuIEkgZ3Vlc3Mg
        aXQgaXMgYW4gZXhhbXBsZSBvZiBob3cgdG8gd3JpdGUgSU8gcGlwZXMgdG9v
        LiA6UAoKICAgIG1pbml0ZXN0L3Rlc3QgaXMgbWVhbnQgdG8gaGF2ZSBhIGNs
        ZWFuIGltcGxlbWVudGF0aW9uIGZvciBsYW5ndWFnZQogICAgaW1wbGVtZW50
        b3JzIHRoYXQgbmVlZCBhIG1pbmltYWwgc2V0IG9mIG1ldGhvZHMgdG8gYm9v
        dHN0cmFwIGEgd29ya2luZwogICAgdGVzdCBzdWl0ZS4gRm9yIGV4YW1wbGUs
        IHRoZXJlIGlzIG5vIG1hZ2ljIGludm9sdmVkIGZvciB0ZXN0LWNhc2UKICAg
        IGRpc2NvdmVyeS4KCiAgICAgICAgIkFnYWluLCBJIGNhbid0IHByYWlzZSBl
        bm91Z2ggdGhlIGlkZWEgb2YgYSB0ZXN0aW5nL3NwZWNpbmcKICAgICAgICAg
        ZnJhbWV3b3JrIHRoYXQgSSBjYW4gYWN0dWFsbHkgcmVhZCBpbiBmdWxsIGlu
        IG9uZSBzaXR0aW5nISIKCiAgICAgICAgLS0gUGlvdHIgU3pvdGtvd3NraQoK
        ICAgIENvbXBhcmluZyB0byByc3BlYzoKCiAgICAgICAgcnNwZWMgaXMgYSB0
        ZXN0aW5nIERTTC4gbWluaXRlc3QgaXMgcnVieS4KCiAgICAgICAgLS0gQWRh
        bSBIYXdraW5zLCAiQm93IEJlZm9yZSBNaW5pVGVzdCIKCiAgICBtaW5pdGVz
        dCBkb2Vzbid0IHJlaW52ZW50IGFueXRoaW5nIHRoYXQgcnVieSBhbHJlYWR5
        IHByb3ZpZGVzLCBsaWtlOgogICAgY2xhc3NlcywgbW9kdWxlcywgaW5oZXJp
        dGFuY2UsIG1ldGhvZHMuIFRoaXMgbWVhbnMgeW91IG9ubHkgaGF2ZSB0bwog
        ICAgbGVhcm4gcnVieSB0byB1c2UgbWluaXRlc3QgYW5kIGFsbCBvZiB5b3Vy
        IHJlZ3VsYXIgT08gcHJhY3RpY2VzIGxpa2UKICAgIGV4dHJhY3QtbWV0aG9k
        IHJlZmFjdG9yaW5ncyBzdGlsbCBhcHBseS4KICBkb3dubG9hZHNfY291bnQ6
        IDY4MTcxCiAgbWV0YWRhdGE6IHt9CiAgbnVtYmVyOiA1LjEwLjAKICBzdW1t
        YXJ5OiBtaW5pdGVzdCBwcm92aWRlcyBhIGNvbXBsZXRlIHN1aXRlIG9mIHRl
        c3RpbmcgZmFjaWxpdGllcyBzdXBwb3J0aW5nIFRERCwKICAgIEJERCwgbW9j
        a2luZywgYW5kIGJlbmNobWFya2luZwogIHBsYXRmb3JtOiBydWJ5CiAgcnVi
        eWdlbXNfdmVyc2lvbjogIj49IDAiCiAgcnVieV92ZXJzaW9uOiAiPj0gMCIK
        ICBwcmVyZWxlYXNlOiBmYWxzZQogIGxpY2Vuc2VzOgogIC0gTUlUCiAgcmVx
        dWlyZW1lbnRzOiBbXQogIHNoYTogNGM0NmZmYWJhYmU1NmY2YTg5MzM4YTUy
        ZDc4MTZjYjI3YTFkMmJmODMzNTMzNzRmZGI5ZDhjOWE3OTQ0ODY4OQotIGF1
        dGhvcnM6IFJ5YW4gRGF2aXMKICBidWlsdF9hdDogJzIwMTYtMDktMjZUMDA6
        MDA6MDAuMDAwWicKICBjcmVhdGVkX2F0OiAnMjAxNi0wOS0yNlQwMjoxNjoz
        My4yOTVaJwogIGRlc2NyaXB0aW9uOiB8LQogICAgbWluaXRlc3QgcHJvdmlk
        ZXMgYSBjb21wbGV0ZSBzdWl0ZSBvZiB0ZXN0aW5nIGZhY2lsaXRpZXMgc3Vw
        cG9ydGluZwogICAgVERELCBCREQsIG1vY2tpbmcsIGFuZCBiZW5jaG1hcmtp
        bmcuCgogICAgICAgICJJIGhhZCBhIGNsYXNzIHdpdGggSmltIFdlaXJpY2gg
        b24gdGVzdGluZyBsYXN0IHdlZWsgYW5kIHdlIHdlcmUKICAgICAgICAgYWxs
        b3dlZCB0byBjaG9vc2Ugb3VyIHRlc3RpbmcgZnJhbWV3b3Jrcy4gS2lyayBI
        YWluZXMgYW5kIEkgd2VyZQogICAgICAgICBwYWlyZWQgdXAgYW5kIHdlIGNy
        YWNrZWQgb3BlbiB0aGUgY29kZSBmb3IgYSBmZXcgdGVzdAogICAgICAgICBm
        cmFtZXdvcmtzLi4uCgogICAgICAgICBJIE1VU1Qgc2F5IHRoYXQgbWluaXRl
        c3QgaXMgKnZlcnkqIHJlYWRhYmxlIC8gdW5kZXJzdGFuZGFibGUKICAgICAg
        ICAgY29tcGFyZWQgdG8gdGhlICdvdGhlciB0d28nIG9wdGlvbnMgd2UgbG9v
        a2VkIGF0LiBOaWNlbHkgZG9uZSBhbmQKICAgICAgICAgdGhhbmsgeW91IGZv
        ciBoZWxwaW5nIHVzIGtlZXAgb3VyIG1lbnRhbCBzYW5pdHkuIgoKICAgICAg
        ICAtLSBXYXluZSBFLiBTZWd1aW4KCiAgICBtaW5pdGVzdC90ZXN0IGlzIGEg
        c21hbGwgYW5kIGluY3JlZGlibHkgZmFzdCB1bml0IHRlc3RpbmcgZnJhbWV3
        b3JrLgogICAgSXQgcHJvdmlkZXMgYSByaWNoIHNldCBvZiBhc3NlcnRpb25z
        IHRvIG1ha2UgeW91ciB0ZXN0cyBjbGVhbiBhbmQKICAgIHJlYWRhYmxlLgoK
        ICAgIG1pbml0ZXN0L3NwZWMgaXMgYSBmdW5jdGlvbmFsbHkgY29tcGxldGUg
        c3BlYyBlbmdpbmUuIEl0IGhvb2tzIG9udG8KICAgIG1pbml0ZXN0L3Rlc3Qg
        YW5kIHNlYW1sZXNzbHkgYnJpZGdlcyB0ZXN0IGFzc2VydGlvbnMgb3ZlciB0
        byBzcGVjCiAgICBleHBlY3RhdGlvbnMuCgogICAgbWluaXRlc3QvYmVuY2ht
        YXJrIGlzIGFuIGF3ZXNvbWUgd2F5IHRvIGFzc2VydCB0aGUgcGVyZm9ybWFu
        Y2Ugb2YgeW91cgogICAgYWxnb3JpdGhtcyBpbiBhIHJlcGVhdGFibGUgbWFu
        bmVyLiBOb3cgeW91IGNhbiBhc3NlcnQgdGhhdCB5b3VyIG5ld2IKICAgIGNv
        LXdvcmtlciBkb2Vzbid0IHJlcGxhY2UgeW91ciBsaW5lYXIgYWxnb3JpdGht
        IHdpdGggYW4gZXhwb25lbnRpYWwKICAgIG9uZSEKCiAgICBtaW5pdGVzdC9t
        b2NrIGJ5IFN0ZXZlbiBCYWtlciwgaXMgYSBiZWF1dGlmdWxseSB0aW55IG1v
        Y2sgKGFuZCBzdHViKQogICAgb2JqZWN0IGZyYW1ld29yay4KCiAgICBtaW5p
        dGVzdC9wcmlkZSBzaG93cyBwcmlkZSBpbiB0ZXN0aW5nIGFuZCBhZGRzIGNv
        bG9yaW5nIHRvIHlvdXIgdGVzdAogICAgb3V0cHV0LiBJIGd1ZXNzIGl0IGlz
        IGFuIGV4YW1wbGUgb2YgaG93IHRvIHdyaXRlIElPIHBpcGVzIHRvby4gOlAK
        CiAgICBtaW5pdGVzdC90ZXN0IGlzIG1lYW50IHRvIGhhdmUgYSBjbGVhbiBp
        bXBsZW1lbnRhdGlvbiBmb3IgbGFuZ3VhZ2UKICAgIGltcGxlbWVudG9ycyB0
        aGF0IG5lZWQgYSBtaW5pbWFsIHNldCBvZiBtZXRob2RzIHRvIGJvb3RzdHJh
        cCBhIHdvcmtpbmcKICAgIHRlc3Qgc3VpdGUuIEZvciBleGFtcGxlLCB0aGVy
        ZSBpcyBubyBtYWdpYyBpbnZvbHZlZCBmb3IgdGVzdC1jYXNlCiAgICBkaXNj
        b3ZlcnkuCgogICAgICAgICJBZ2FpbiwgSSBjYW4ndCBwcmFpc2UgZW5vdWdo
        IHRoZSBpZGVhIG9mIGEgdGVzdGluZy9zcGVjaW5nCiAgICAgICAgIGZyYW1l
        d29yayB0aGF0IEkgY2FuIGFjdHVhbGx5IHJlYWQgaW4gZnVsbCBpbiBvbmUg
        c2l0dGluZyEiCgogICAgICAgIC0tIFBpb3RyIFN6b3Rrb3dza2kKCiAgICBD
        b21wYXJpbmcgdG8gcnNwZWM6CgogICAgICAgIHJzcGVjIGlzIGEgdGVzdGlu
        ZyBEU0wuIG1pbml0ZXN0IGlzIHJ1YnkuCgogICAgICAgIC0tIEFkYW0gSGF3
        a2lucywgIkJvdyBCZWZvcmUgTWluaVRlc3QiCgogICAgbWluaXRlc3QgZG9l
        c24ndCByZWludmVudCBhbnl0aGluZyB0aGF0IHJ1YnkgYWxyZWFkeSBwcm92
        aWRlcywgbGlrZToKICAgIGNsYXNzZXMsIG1vZHVsZXMsIGluaGVyaXRhbmNl
        LCBtZXRob2RzLiBUaGlzIG1lYW5zIHlvdSBvbmx5IGhhdmUgdG8KICAgIGxl
        YXJuIHJ1YnkgdG8gdXNlIG1pbml0ZXN0IGFuZCBhbGwgb2YgeW91ciByZWd1
        bGFyIE9PIHByYWN0aWNlcyBsaWtlCiAgICBleHRyYWN0LW1ldGhvZCByZWZh
        Y3RvcmluZ3Mgc3RpbGwgYXBwbHkuCiAgZG93bmxvYWRzX2NvdW50OiAzMzIz
        MTQzCiAgbWV0YWRhdGE6IHt9CiAgbnVtYmVyOiA1LjkuMQogIHN1bW1hcnk6
        IG1pbml0ZXN0IHByb3ZpZGVzIGEgY29tcGxldGUgc3VpdGUgb2YgdGVzdGlu
        ZyBmYWNpbGl0aWVzIHN1cHBvcnRpbmcgVERELAogICAgQkRELCBtb2NraW5n
        LCBhbmQgYmVuY2htYXJraW5nCiAgcGxhdGZvcm06IHJ1YnkKICBydWJ5Z2Vt
        c192ZXJzaW9uOiAiPj0gMCIKICBydWJ5X3ZlcnNpb246ICI+PSAwIgogIHBy
        ZXJlbGVhc2U6IGZhbHNlCiAgbGljZW5zZXM6CiAgLSBNSVQKICByZXF1aXJl
        bWVudHM6IFtdCiAgc2hhOiA3OGI1ZTU1M2RkMTViYjEyYjNiZDBiNTljOGI0
        ZmE3MTUyYTYxMzRjNTFhMzA5OWM0ZWVkZDI0ODljYjIwMDBjCi0gYXV0aG9y
        czogUnlhbiBEYXZpcwogIGJ1aWx0X2F0OiAnMjAxNi0wNS0xNlQwMDowMDow
        MC4wMDBaJwogIGNyZWF0ZWRfYXQ6ICcyMDE2LTA1LTE2VDIxOjU4OjQwLjIx
        NlonCiAgZGVzY3JpcHRpb246IHwtCiAgICBtaW5pdGVzdCBwcm92aWRlcyBh
        IGNvbXBsZXRlIHN1aXRlIG9mIHRlc3RpbmcgZmFjaWxpdGllcyBzdXBwb3J0
        aW5nCiAgICBUREQsIEJERCwgbW9ja2luZywgYW5kIGJlbmNobWFya2luZy4K
        CiAgICAgICAgIkkgaGFkIGEgY2xhc3Mgd2l0aCBKaW0gV2VpcmljaCBvbiB0
        ZXN0aW5nIGxhc3Qgd2VlayBhbmQgd2Ugd2VyZQogICAgICAgICBhbGxvd2Vk
        IHRvIGNob29zZSBvdXIgdGVzdGluZyBmcmFtZXdvcmtzLiBLaXJrIEhhaW5l
        cyBhbmQgSSB3ZXJlCiAgICAgICAgIHBhaXJlZCB1cCBhbmQgd2UgY3JhY2tl
        ZCBvcGVuIHRoZSBjb2RlIGZvciBhIGZldyB0ZXN0CiAgICAgICAgIGZyYW1l
        d29ya3MuLi4KCiAgICAgICAgIEkgTVVTVCBzYXkgdGhhdCBtaW5pdGVzdCBp
        cyAqdmVyeSogcmVhZGFibGUgLyB1bmRlcnN0YW5kYWJsZQogICAgICAgICBj
        b21wYXJlZCB0byB0aGUgJ290aGVyIHR3bycgb3B0aW9ucyB3ZSBsb29rZWQg
        YXQuIE5pY2VseSBkb25lIGFuZAogICAgICAgICB0aGFuayB5b3UgZm9yIGhl
        bHBpbmcgdXMga2VlcCBvdXIgbWVudGFsIHNhbml0eS4iCgogICAgICAgIC0t
        IFdheW5lIEUuIFNlZ3VpbgoKICAgIG1pbml0ZXN0L3Rlc3QgaXMgYSBzbWFs
        bCBhbmQgaW5jcmVkaWJseSBmYXN0IHVuaXQgdGVzdGluZyBmcmFtZXdvcmsu
        CiAgICBJdCBwcm92aWRlcyBhIHJpY2ggc2V0IG9mIGFzc2VydGlvbnMgdG8g
        bWFrZSB5b3VyIHRlc3RzIGNsZWFuIGFuZAogICAgcmVhZGFibGUuCgogICAg
        bWluaXRlc3Qvc3BlYyBpcyBhIGZ1bmN0aW9uYWxseSBjb21wbGV0ZSBzcGVj
        IGVuZ2luZS4gSXQgaG9va3Mgb250bwogICAgbWluaXRlc3QvdGVzdCBhbmQg
        c2VhbWxlc3NseSBicmlkZ2VzIHRlc3QgYXNzZXJ0aW9ucyBvdmVyIHRvIHNw
        ZWMKICAgIGV4cGVjdGF0aW9ucy4KCiAgICBtaW5pdGVzdC9iZW5jaG1hcmsg
        aXMgYW4gYXdlc29tZSB3YXkgdG8gYXNzZXJ0IHRoZSBwZXJmb3JtYW5jZSBv
        ZiB5b3VyCiAgICBhbGdvcml0aG1zIGluIGEgcmVwZWF0YWJsZSBtYW5uZXIu
        IE5vdyB5b3UgY2FuIGFzc2VydCB0aGF0IHlvdXIgbmV3YgogICAgY28td29y
        a2VyIGRvZXNuJ3QgcmVwbGFjZSB5b3VyIGxpbmVhciBhbGdvcml0aG0gd2l0
        aCBhbiBleHBvbmVudGlhbAogICAgb25lIQoKICAgIG1pbml0ZXN0L21vY2sg
        YnkgU3RldmVuIEJha2VyLCBpcyBhIGJlYXV0aWZ1bGx5IHRpbnkgbW9jayAo
        YW5kIHN0dWIpCiAgICBvYmplY3QgZnJhbWV3b3JrLgoKICAgIG1pbml0ZXN0
        L3ByaWRlIHNob3dzIHByaWRlIGluIHRlc3RpbmcgYW5kIGFkZHMgY29sb3Jp
        bmcgdG8geW91ciB0ZXN0CiAgICBvdXRwdXQuIEkgZ3Vlc3MgaXQgaXMgYW4g
        ZXhhbXBsZSBvZiBob3cgdG8gd3JpdGUgSU8gcGlwZXMgdG9vLiA6UAoKICAg
        IG1pbml0ZXN0L3Rlc3QgaXMgbWVhbnQgdG8gaGF2ZSBhIGNsZWFuIGltcGxl
        bWVudGF0aW9uIGZvciBsYW5ndWFnZQogICAgaW1wbGVtZW50b3JzIHRoYXQg
        bmVlZCBhIG1pbmltYWwgc2V0IG9mIG1ldGhvZHMgdG8gYm9vdHN0cmFwIGEg
        d29ya2luZwogICAgdGVzdCBzdWl0ZS4gRm9yIGV4YW1wbGUsIHRoZXJlIGlz
        IG5vIG1hZ2ljIGludm9sdmVkIGZvciB0ZXN0LWNhc2UKICAgIGRpc2NvdmVy
        eS4KCiAgICAgICAgIkFnYWluLCBJIGNhbid0IHByYWlzZSBlbm91Z2ggdGhl
        IGlkZWEgb2YgYSB0ZXN0aW5nL3NwZWNpbmcKICAgICAgICAgZnJhbWV3b3Jr
        IHRoYXQgSSBjYW4gYWN0dWFsbHkgcmVhZCBpbiBmdWxsIGluIG9uZSBzaXR0
        aW5nISIKCiAgICAgICAgLS0gUGlvdHIgU3pvdGtvd3NraQoKICAgIENvbXBh
        cmluZyB0byByc3BlYzoKCiAgICAgICAgcnNwZWMgaXMgYSB0ZXN0aW5nIERT
        TC4gbWluaXRlc3QgaXMgcnVieS4KCiAgICAgICAgLS0gQWRhbSBIYXdraW5z
        LCAiQm93IEJlZm9yZSBNaW5pVGVzdCIKCiAgICBtaW5pdGVzdCBkb2Vzbid0
        IHJlaW52ZW50IGFueXRoaW5nIHRoYXQgcnVieSBhbHJlYWR5IHByb3ZpZGVz
        LCBsaWtlOgogICAgY2xhc3NlcywgbW9kdWxlcywgaW5oZXJpdGFuY2UsIG1l
        dGhvZHMuIFRoaXMgbWVhbnMgeW91IG9ubHkgaGF2ZSB0bwogICAgbGVhcm4g
        cnVieSB0byB1c2UgbWluaXRlc3QgYW5kIGFsbCBvZiB5b3VyIHJlZ3VsYXIg
        T08gcHJhY3RpY2VzIGxpa2UKICAgIGV4dHJhY3QtbWV0aG9kIHJlZmFjdG9y
        aW5ncyBzdGlsbCBhcHBseS4KICBkb3dubG9hZHNfY291bnQ6IDY2MzcxODEK
        ICBtZXRhZGF0YToge30KICBudW1iZXI6IDUuOS4wCiAgc3VtbWFyeTogbWlu
        aXRlc3QgcHJvdmlkZXMgYSBjb21wbGV0ZSBzdWl0ZSBvZiB0ZXN0aW5nIGZh
        Y2lsaXRpZXMgc3VwcG9ydGluZyBUREQsCiAgICBCREQsIG1vY2tpbmcsIGFu
        ZCBiZW5jaG1hcmtpbmcKICBwbGF0Zm9ybTogcnVieQogIHJ1YnlnZW1zX3Zl
        cnNpb246ICI+PSAwIgogIHJ1YnlfdmVyc2lvbjogIj49IDAiCiAgcHJlcmVs
        ZWFzZTogZmFsc2UKICBsaWNlbnNlczoKICAtIE1JVAogIHJlcXVpcmVtZW50
        czogW10KICBzaGE6IDk0NjYwYjRjMzkwN2VjNDM3NGE4YzY5ODBmNjNlYjI2
        NjQ0ZWZlMzVjMDViNTcxNTY3Y2U2ZDExYzI3MWRmYmQKLSBhdXRob3JzOiBS
        eWFuIERhdmlzCiAgYnVpbHRfYXQ6ICcyMDE2LTA5LTI2VDAwOjAwOjAwLjAw
        MFonCiAgY3JlYXRlZF9hdDogJzIwMTYtMDktMjZUMDI6MDQ6MjkuOTQyWicK
        ICBkZXNjcmlwdGlvbjogfC0KICAgIG1pbml0ZXN0IHByb3ZpZGVzIGEgY29t
        cGxldGUgc3VpdGUgb2YgdGVzdGluZyBmYWNpbGl0aWVzIHN1cHBvcnRpbmcK
        ICAgIFRERCwgQkRELCBtb2NraW5nLCBhbmQgYmVuY2htYXJraW5nLgoKICAg
        ICAgICAiSSBoYWQgYSBjbGFzcyB3aXRoIEppbSBXZWlyaWNoIG9uIHRlc3Rp
        bmcgbGFzdCB3ZWVrIGFuZCB3ZSB3ZXJlCiAgICAgICAgIGFsbG93ZWQgdG8g
        Y2hvb3NlIG91ciB0ZXN0aW5nIGZyYW1ld29ya3MuIEtpcmsgSGFpbmVzIGFu
        ZCBJIHdlcmUKICAgICAgICAgcGFpcmVkIHVwIGFuZCB3ZSBjcmFja2VkIG9w
        ZW4gdGhlIGNvZGUgZm9yIGEgZmV3IHRlc3QKICAgICAgICAgZnJhbWV3b3Jr
        cy4uLgoKICAgICAgICAgSSBNVVNUIHNheSB0aGF0IG1pbml0ZXN0IGlzICp2
        ZXJ5KiByZWFkYWJsZSAvIHVuZGVyc3RhbmRhYmxlCiAgICAgICAgIGNvbXBh
        cmVkIHRvIHRoZSAnb3RoZXIgdHdvJyBvcHRpb25zIHdlIGxvb2tlZCBhdC4g
        TmljZWx5IGRvbmUgYW5kCiAgICAgICAgIHRoYW5rIHlvdSBmb3IgaGVscGlu
        ZyB1cyBrZWVwIG91ciBtZW50YWwgc2FuaXR5LiIKCiAgICAgICAgLS0gV2F5
        bmUgRS4gU2VndWluCgogICAgbWluaXRlc3QvdW5pdCBpcyBhIHNtYWxsIGFu
        ZCBpbmNyZWRpYmx5IGZhc3QgdW5pdCB0ZXN0aW5nIGZyYW1ld29yay4KICAg
        IEl0IHByb3ZpZGVzIGEgcmljaCBzZXQgb2YgYXNzZXJ0aW9ucyB0byBtYWtl
        IHlvdXIgdGVzdHMgY2xlYW4gYW5kCiAgICByZWFkYWJsZS4KCiAgICBtaW5p
        dGVzdC9zcGVjIGlzIGEgZnVuY3Rpb25hbGx5IGNvbXBsZXRlIHNwZWMgZW5n
        aW5lLiBJdCBob29rcyBvbnRvCiAgICBtaW5pdGVzdC91bml0IGFuZCBzZWFt
        bGVzc2x5IGJyaWRnZXMgdGVzdCBhc3NlcnRpb25zIG92ZXIgdG8gc3BlYwog
        ICAgZXhwZWN0YXRpb25zLgoKICAgIG1pbml0ZXN0L2JlbmNobWFyayBpcyBh
        biBhd2Vzb21lIHdheSB0byBhc3NlcnQgdGhlIHBlcmZvcm1hbmNlIG9mIHlv
        dXIKICAgIGFsZ29yaXRobXMgaW4gYSByZXBlYXRhYmxlIG1hbm5lci4gTm93
        IHlvdSBjYW4gYXNzZXJ0IHRoYXQgeW91ciBuZXdiCiAgICBjby13b3JrZXIg
        ZG9lc24ndCByZXBsYWNlIHlvdXIgbGluZWFyIGFsZ29yaXRobSB3aXRoIGFu
        IGV4cG9uZW50aWFsCiAgICBvbmUhCgogICAgbWluaXRlc3QvbW9jayBieSBT
        dGV2ZW4gQmFrZXIsIGlzIGEgYmVhdXRpZnVsbHkgdGlueSBtb2NrIChhbmQg
        c3R1YikKICAgIG9iamVjdCBmcmFtZXdvcmsuCgogICAgbWluaXRlc3QvcHJp
        ZGUgc2hvd3MgcHJpZGUgaW4gdGVzdGluZyBhbmQgYWRkcyBjb2xvcmluZyB0
        byB5b3VyIHRlc3QKICAgIG91dHB1dC4gSSBndWVzcyBpdCBpcyBhbiBleGFt
        cGxlIG9mIGhvdyB0byB3cml0ZSBJTyBwaXBlcyB0b28uIDpQCgogICAgbWlu
        aXRlc3QvdW5pdCBpcyBtZWFudCB0byBoYXZlIGEgY2xlYW4gaW1wbGVtZW50
        YXRpb24gZm9yIGxhbmd1YWdlCiAgICBpbXBsZW1lbnRvcnMgdGhhdCBuZWVk
        IGEgbWluaW1hbCBzZXQgb2YgbWV0aG9kcyB0byBib290c3RyYXAgYSB3b3Jr
        aW5nCiAgICB0ZXN0IHN1aXRlLiBGb3IgZXhhbXBsZSwgdGhlcmUgaXMgbm8g
        bWFnaWMgaW52b2x2ZWQgZm9yIHRlc3QtY2FzZQogICAgZGlzY292ZXJ5LgoK
        ICAgICAgICAiQWdhaW4sIEkgY2FuJ3QgcHJhaXNlIGVub3VnaCB0aGUgaWRl
        YSBvZiBhIHRlc3Rpbmcvc3BlY2luZwogICAgICAgICBmcmFtZXdvcmsgdGhh
        dCBJIGNhbiBhY3R1YWxseSByZWFkIGluIGZ1bGwgaW4gb25lIHNpdHRpbmch
        IgoKICAgICAgICAtLSBQaW90ciBTem90a293c2tpCgogICAgQ29tcGFyaW5n
        IHRvIHJzcGVjOgoKICAgICAgICByc3BlYyBpcyBhIHRlc3RpbmcgRFNMLiBt
        aW5pdGVzdCBpcyBydWJ5LgoKICAgICAgICAtLSBBZGFtIEhhd2tpbnMsICJC
        b3cgQmVmb3JlIE1pbmlUZXN0IgoKICAgIG1pbml0ZXN0IGRvZXNuJ3QgcmVp
        bnZlbnQgYW55dGhpbmcgdGhhdCBydWJ5IGFscmVhZHkgcHJvdmlkZXMsIGxp
        a2U6CiAgICBjbGFzc2VzLCBtb2R1bGVzLCBpbmhlcml0YW5jZSwgbWV0aG9k
        cy4gVGhpcyBtZWFucyB5b3Ugb25seSBoYXZlIHRvCiAgICBsZWFybiBydWJ5
        IHRvIHVzZSBtaW5pdGVzdCBhbmQgYWxsIG9mIHlvdXIgcmVndWxhciBPTyBw
        cmFjdGljZXMgbGlrZQogICAgZXh0cmFjdC1tZXRob2QgcmVmYWN0b3Jpbmdz
        IHN0aWxsIGFwcGx5LgogIGRvd25sb2Fkc19jb3VudDogMjYxNzUKICBtZXRh
        ZGF0YToge30KICBudW1iZXI6IDUuOC41CiAgc3VtbWFyeTogbWluaXRlc3Qg
        cHJvdmlkZXMgYSBjb21wbGV0ZSBzdWl0ZSBvZiB0ZXN0aW5nIGZhY2lsaXRp
        ZXMgc3VwcG9ydGluZyBUREQsCiAgICBCREQsIG1vY2tpbmcsIGFuZCBiZW5j
        aG1hcmtpbmcKICBwbGF0Zm9ybTogcnVieQogIHJ1YnlnZW1zX3ZlcnNpb246
        ICI+PSAwIgogIHJ1YnlfdmVyc2lvbjogIj49IDAiCiAgcHJlcmVsZWFzZTog
        ZmFsc2UKICBsaWNlbnNlczoKICAtIE1JVAogIHJlcXVpcmVtZW50czogW10K
        ICBzaGE6IDdjYWViNjM4YzgyMDIyZmYyMzBiZWEwODcwMWM4NzExYTExOTU4
        ZGZkYzRmZTVhM2U5Y2VlMDcxYzllN2RkZDEKLSBhdXRob3JzOiBSeWFuIERh
        dmlzCiAgYnVpbHRfYXQ6ICcyMDE2LTAxLTIxVDAwOjAwOjAwLjAwMFonCiAg
        Y3JlYXRlZF9hdDogJzIwMTYtMDEtMjFUMjM6NDU6NDAuOTY0WicKICBkZXNj
        cmlwdGlvbjogfC0KICAgIG1pbml0ZXN0IHByb3ZpZGVzIGEgY29tcGxldGUg
        c3VpdGUgb2YgdGVzdGluZyBmYWNpbGl0aWVzIHN1cHBvcnRpbmcKICAgIFRE
        RCwgQkRELCBtb2NraW5nLCBhbmQgYmVuY2htYXJraW5nLgoKICAgICAgICAi
        SSBoYWQgYSBjbGFzcyB3aXRoIEppbSBXZWlyaWNoIG9uIHRlc3RpbmcgbGFz
        dCB3ZWVrIGFuZCB3ZSB3ZXJlCiAgICAgICAgIGFsbG93ZWQgdG8gY2hvb3Nl
        IG91ciB0ZXN0aW5nIGZyYW1ld29ya3MuIEtpcmsgSGFpbmVzIGFuZCBJIHdl
        cmUKICAgICAgICAgcGFpcmVkIHVwIGFuZCB3ZSBjcmFja2VkIG9wZW4gdGhl
        IGNvZGUgZm9yIGEgZmV3IHRlc3QKICAgICAgICAgZnJhbWV3b3Jrcy4uLgoK
        ICAgICAgICAgSSBNVVNUIHNheSB0aGF0IG1pbml0ZXN0IGlzICp2ZXJ5KiBy
        ZWFkYWJsZSAvIHVuZGVyc3RhbmRhYmxlCiAgICAgICAgIGNvbXBhcmVkIHRv
        IHRoZSAnb3RoZXIgdHdvJyBvcHRpb25zIHdlIGxvb2tlZCBhdC4gTmljZWx5
        IGRvbmUgYW5kCiAgICAgICAgIHRoYW5rIHlvdSBmb3IgaGVscGluZyB1cyBr
        ZWVwIG91ciBtZW50YWwgc2FuaXR5LiIKCiAgICAgICAgLS0gV2F5bmUgRS4g
        U2VndWluCgogICAgbWluaXRlc3QvdW5pdCBpcyBhIHNtYWxsIGFuZCBpbmNy
        ZWRpYmx5IGZhc3QgdW5pdCB0ZXN0aW5nIGZyYW1ld29yay4KICAgIEl0IHBy
        b3ZpZGVzIGEgcmljaCBzZXQgb2YgYXNzZXJ0aW9ucyB0byBtYWtlIHlvdXIg
        dGVzdHMgY2xlYW4gYW5kCiAgICByZWFkYWJsZS4KCiAgICBtaW5pdGVzdC9z
        cGVjIGlzIGEgZnVuY3Rpb25hbGx5IGNvbXBsZXRlIHNwZWMgZW5naW5lLiBJ
        dCBob29rcyBvbnRvCiAgICBtaW5pdGVzdC91bml0IGFuZCBzZWFtbGVzc2x5
        IGJyaWRnZXMgdGVzdCBhc3NlcnRpb25zIG92ZXIgdG8gc3BlYwogICAgZXhw
        ZWN0YXRpb25zLgoKICAgIG1pbml0ZXN0L2JlbmNobWFyayBpcyBhbiBhd2Vz
        b21lIHdheSB0byBhc3NlcnQgdGhlIHBlcmZvcm1hbmNlIG9mIHlvdXIKICAg
        IGFsZ29yaXRobXMgaW4gYSByZXBlYXRhYmxlIG1hbm5lci4gTm93IHlvdSBj
        YW4gYXNzZXJ0IHRoYXQgeW91ciBuZXdiCiAgICBjby13b3JrZXIgZG9lc24n
        dCByZXBsYWNlIHlvdXIgbGluZWFyIGFsZ29yaXRobSB3aXRoIGFuIGV4cG9u
        ZW50aWFsCiAgICBvbmUhCgogICAgbWluaXRlc3QvbW9jayBieSBTdGV2ZW4g
        QmFrZXIsIGlzIGEgYmVhdXRpZnVsbHkgdGlueSBtb2NrIChhbmQgc3R1YikK
        ICAgIG9iamVjdCBmcmFtZXdvcmsuCgogICAgbWluaXRlc3QvcHJpZGUgc2hv
        d3MgcHJpZGUgaW4gdGVzdGluZyBhbmQgYWRkcyBjb2xvcmluZyB0byB5b3Vy
        IHRlc3QKICAgIG91dHB1dC4gSSBndWVzcyBpdCBpcyBhbiBleGFtcGxlIG9m
        IGhvdyB0byB3cml0ZSBJTyBwaXBlcyB0b28uIDpQCgogICAgbWluaXRlc3Qv
        dW5pdCBpcyBtZWFudCB0byBoYXZlIGEgY2xlYW4gaW1wbGVtZW50YXRpb24g
        Zm9yIGxhbmd1YWdlCiAgICBpbXBsZW1lbnRvcnMgdGhhdCBuZWVkIGEgbWlu
        aW1hbCBzZXQgb2YgbWV0aG9kcyB0byBib290c3RyYXAgYSB3b3JraW5nCiAg
        ICB0ZXN0IHN1aXRlLiBGb3IgZXhhbXBsZSwgdGhlcmUgaXMgbm8gbWFnaWMg
        aW52b2x2ZWQgZm9yIHRlc3QtY2FzZQogICAgZGlzY292ZXJ5LgoKICAgICAg
        ICAiQWdhaW4sIEkgY2FuJ3QgcHJhaXNlIGVub3VnaCB0aGUgaWRlYSBvZiBh
        IHRlc3Rpbmcvc3BlY2luZwogICAgICAgICBmcmFtZXdvcmsgdGhhdCBJIGNh
        biBhY3R1YWxseSByZWFkIGluIGZ1bGwgaW4gb25lIHNpdHRpbmchIgoKICAg
        ICAgICAtLSBQaW90ciBTem90a293c2tpCgogICAgQ29tcGFyaW5nIHRvIHJz
        cGVjOgoKICAgICAgICByc3BlYyBpcyBhIHRlc3RpbmcgRFNMLiBtaW5pdGVz
        dCBpcyBydWJ5LgoKICAgICAgICAtLSBBZGFtIEhhd2tpbnMsICJCb3cgQmVm
        b3JlIE1pbmlUZXN0IgoKICAgIG1pbml0ZXN0IGRvZXNuJ3QgcmVpbnZlbnQg
        YW55dGhpbmcgdGhhdCBydWJ5IGFscmVhZHkgcHJvdmlkZXMsIGxpa2U6CiAg
        ICBjbGFzc2VzLCBtb2R1bGVzLCBpbmhlcml0YW5jZSwgbWV0aG9kcy4gVGhp
        cyBtZWFucyB5b3Ugb25seSBoYXZlIHRvCiAgICBsZWFybiBydWJ5IHRvIHVz
        ZSBtaW5pdGVzdCBhbmQgYWxsIG9mIHlvdXIgcmVndWxhciBPTyBwcmFjdGlj
        ZXMgbGlrZQogICAgZXh0cmFjdC1tZXRob2QgcmVmYWN0b3JpbmdzIHN0aWxs
        IGFwcGx5LgogIGRvd25sb2Fkc19jb3VudDogNjc1NTkxMQogIG1ldGFkYXRh
        OiB7fQogIG51bWJlcjogNS44LjQKICBzdW1tYXJ5OiBtaW5pdGVzdCBwcm92
        aWRlcyBhIGNvbXBsZXRlIHN1aXRlIG9mIHRlc3RpbmcgZmFjaWxpdGllcyBz
        dXBwb3J0aW5nIFRERCwKICAgIEJERCwgbW9ja2luZywgYW5kIGJlbmNobWFy
        a2luZwogIHBsYXRmb3JtOiBydWJ5CiAgcnVieWdlbXNfdmVyc2lvbjogIj49
        IDAiCiAgcnVieV92ZXJzaW9uOiAiPj0gMCIKICBwcmVyZWxlYXNlOiBmYWxz
        ZQogIGxpY2Vuc2VzOgogIC0gTUlUCiAgcmVxdWlyZW1lbnRzOiBbXQogIHNo
        YTogMmFkNzNlYzczZWY1NDcxOWVmYmEyNDk2MWEzNmFkM2E2NWMwYmZmOWNi
        NWQ5ZmRhNGRkYWJhMmEzOGI4ZDQxNgotIGF1dGhvcnM6IFJ5YW4gRGF2aXMK
        ICBidWlsdF9hdDogJzIwMTUtMTEtMTdUMDA6MDA6MDAuMDAwWicKICBjcmVh
        dGVkX2F0OiAnMjAxNS0xMS0xN1QyMzowMDowMS41MTFaJwogIGRlc2NyaXB0
        aW9uOiB8LQogICAgbWluaXRlc3QgcHJvdmlkZXMgYSBjb21wbGV0ZSBzdWl0
        ZSBvZiB0ZXN0aW5nIGZhY2lsaXRpZXMgc3VwcG9ydGluZwogICAgVERELCBC
        REQsIG1vY2tpbmcsIGFuZCBiZW5jaG1hcmtpbmcuCgogICAgICAgICJJIGhh
        ZCBhIGNsYXNzIHdpdGggSmltIFdlaXJpY2ggb24gdGVzdGluZyBsYXN0IHdl
        ZWsgYW5kIHdlIHdlcmUKICAgICAgICAgYWxsb3dlZCB0byBjaG9vc2Ugb3Vy
        IHRlc3RpbmcgZnJhbWV3b3Jrcy4gS2lyayBIYWluZXMgYW5kIEkgd2VyZQog
        ICAgICAgICBwYWlyZWQgdXAgYW5kIHdlIGNyYWNrZWQgb3BlbiB0aGUgY29k
        ZSBmb3IgYSBmZXcgdGVzdAogICAgICAgICBmcmFtZXdvcmtzLi4uCgogICAg
        ICAgICBJIE1VU1Qgc2F5IHRoYXQgbWluaXRlc3QgaXMgKnZlcnkqIHJlYWRh
        YmxlIC8gdW5kZXJzdGFuZGFibGUKICAgICAgICAgY29tcGFyZWQgdG8gdGhl
        ICdvdGhlciB0d28nIG9wdGlvbnMgd2UgbG9va2VkIGF0LiBOaWNlbHkgZG9u
        ZSBhbmQKICAgICAgICAgdGhhbmsgeW91IGZvciBoZWxwaW5nIHVzIGtlZXAg
        b3VyIG1lbnRhbCBzYW5pdHkuIgoKICAgICAgICAtLSBXYXluZSBFLiBTZWd1
        aW4KCiAgICBtaW5pdGVzdC91bml0IGlzIGEgc21hbGwgYW5kIGluY3JlZGli
        bHkgZmFzdCB1bml0IHRlc3RpbmcgZnJhbWV3b3JrLgogICAgSXQgcHJvdmlk
        ZXMgYSByaWNoIHNldCBvZiBhc3NlcnRpb25zIHRvIG1ha2UgeW91ciB0ZXN0
        cyBjbGVhbiBhbmQKICAgIHJlYWRhYmxlLgoKICAgIG1pbml0ZXN0L3NwZWMg
        aXMgYSBmdW5jdGlvbmFsbHkgY29tcGxldGUgc3BlYyBlbmdpbmUuIEl0IGhv
        b2tzIG9udG8KICAgIG1pbml0ZXN0L3VuaXQgYW5kIHNlYW1sZXNzbHkgYnJp
        ZGdlcyB0ZXN0IGFzc2VydGlvbnMgb3ZlciB0byBzcGVjCiAgICBleHBlY3Rh
        dGlvbnMuCgogICAgbWluaXRlc3QvYmVuY2htYXJrIGlzIGFuIGF3ZXNvbWUg
        d2F5IHRvIGFzc2VydCB0aGUgcGVyZm9ybWFuY2Ugb2YgeW91cgogICAgYWxn
        b3JpdGhtcyBpbiBhIHJlcGVhdGFibGUgbWFubmVyLiBOb3cgeW91IGNhbiBh
        c3NlcnQgdGhhdCB5b3VyIG5ld2IKICAgIGNvLXdvcmtlciBkb2Vzbid0IHJl
        cGxhY2UgeW91ciBsaW5lYXIgYWxnb3JpdGhtIHdpdGggYW4gZXhwb25lbnRp
        YWwKICAgIG9uZSEKCiAgICBtaW5pdGVzdC9tb2NrIGJ5IFN0ZXZlbiBCYWtl
        ciwgaXMgYSBiZWF1dGlmdWxseSB0aW55IG1vY2sgKGFuZCBzdHViKQogICAg
        b2JqZWN0IGZyYW1ld29yay4KCiAgICBtaW5pdGVzdC9wcmlkZSBzaG93cyBw
        cmlkZSBpbiB0ZXN0aW5nIGFuZCBhZGRzIGNvbG9yaW5nIHRvIHlvdXIgdGVz
        dAogICAgb3V0cHV0LiBJIGd1ZXNzIGl0IGlzIGFuIGV4YW1wbGUgb2YgaG93
        IHRvIHdyaXRlIElPIHBpcGVzIHRvby4gOlAKCiAgICBtaW5pdGVzdC91bml0
        IGlzIG1lYW50IHRvIGhhdmUgYSBjbGVhbiBpbXBsZW1lbnRhdGlvbiBmb3Ig
        bGFuZ3VhZ2UKICAgIGltcGxlbWVudG9ycyB0aGF0IG5lZWQgYSBtaW5pbWFs
        IHNldCBvZiBtZXRob2RzIHRvIGJvb3RzdHJhcCBhIHdvcmtpbmcKICAgIHRl
        c3Qgc3VpdGUuIEZvciBleGFtcGxlLCB0aGVyZSBpcyBubyBtYWdpYyBpbnZv
        bHZlZCBmb3IgdGVzdC1jYXNlCiAgICBkaXNjb3ZlcnkuCgogICAgICAgICJB
        Z2FpbiwgSSBjYW4ndCBwcmFpc2UgZW5vdWdoIHRoZSBpZGVhIG9mIGEgdGVz
        dGluZy9zcGVjaW5nCiAgICAgICAgIGZyYW1ld29yayB0aGF0IEkgY2FuIGFj
        dHVhbGx5IHJlYWQgaW4gZnVsbCBpbiBvbmUgc2l0dGluZyEiCgogICAgICAg
        IC0tIFBpb3RyIFN6b3Rrb3dza2kKCiAgICBDb21wYXJpbmcgdG8gcnNwZWM6
        CgogICAgICAgIHJzcGVjIGlzIGEgdGVzdGluZyBEU0wuIG1pbml0ZXN0IGlz
        IHJ1YnkuCgogICAgICAgIC0tIEFkYW0gSGF3a2lucywgIkJvdyBCZWZvcmUg
        TWluaVRlc3QiCgogICAgbWluaXRlc3QgZG9lc24ndCByZWludmVudCBhbnl0
        aGluZyB0aGF0IHJ1YnkgYWxyZWFkeSBwcm92aWRlcywgbGlrZToKICAgIGNs
        YXNzZXMsIG1vZHVsZXMsIGluaGVyaXRhbmNlLCBtZXRob2RzLiBUaGlzIG1l
        YW5zIHlvdSBvbmx5IGhhdmUgdG8KICAgIGxlYXJuIHJ1YnkgdG8gdXNlIG1p
        bml0ZXN0IGFuZCBhbGwgb2YgeW91ciByZWd1bGFyIE9PIHByYWN0aWNlcyBs
        aWtlCiAgICBleHRyYWN0LW1ldGhvZCByZWZhY3RvcmluZ3Mgc3RpbGwgYXBw
        bHkuCiAgZG93bmxvYWRzX2NvdW50OiAzMzQ3NTkwCiAgbWV0YWRhdGE6IHt9
        CiAgbnVtYmVyOiA1LjguMwogIHN1bW1hcnk6IG1pbml0ZXN0IHByb3ZpZGVz
        IGEgY29tcGxldGUgc3VpdGUgb2YgdGVzdGluZyBmYWNpbGl0aWVzIHN1cHBv
        cnRpbmcgVERELAogICAgQkRELCBtb2NraW5nLCBhbmQgYmVuY2htYXJraW5n
        CiAgcGxhdGZvcm06IHJ1YnkKICBydWJ5Z2Vtc192ZXJzaW9uOiAiPj0gMCIK
        ICBydWJ5X3ZlcnNpb246ICI+PSAwIgogIHByZXJlbGVhc2U6IGZhbHNlCiAg
        bGljZW5zZXM6CiAgLSBNSVQKICByZXF1aXJlbWVudHM6IFtdCiAgc2hhOiA2
        ODFiMWRmZmE1YWYzMTY3ODg5ZmEyM2IyYmY4ODYwZmY1MTZiMGZlZDU2MGY4
        ZmI2YWY4Yjg4YzdlYWZjYzRkCi0gYXV0aG9yczogUnlhbiBEYXZpcwogIGJ1
        aWx0X2F0OiAnMjAxNS0xMC0yNlQwMDowMDowMC4wMDBaJwogIGNyZWF0ZWRf
        YXQ6ICcyMDE1LTEwLTI2VDIyOjU0OjEzLjY4M1onCiAgZGVzY3JpcHRpb246
        IHwtCiAgICBtaW5pdGVzdCBwcm92aWRlcyBhIGNvbXBsZXRlIHN1aXRlIG9m
        IHRlc3RpbmcgZmFjaWxpdGllcyBzdXBwb3J0aW5nCiAgICBUREQsIEJERCwg
        bW9ja2luZywgYW5kIGJlbmNobWFya2luZy4KCiAgICAgICAgIkkgaGFkIGEg
        Y2xhc3Mgd2l0aCBKaW0gV2VpcmljaCBvbiB0ZXN0aW5nIGxhc3Qgd2VlayBh
        bmQgd2Ugd2VyZQogICAgICAgICBhbGxvd2VkIHRvIGNob29zZSBvdXIgdGVz
        dGluZyBmcmFtZXdvcmtzLiBLaXJrIEhhaW5lcyBhbmQgSSB3ZXJlCiAgICAg
        ICAgIHBhaXJlZCB1cCBhbmQgd2UgY3JhY2tlZCBvcGVuIHRoZSBjb2RlIGZv
        ciBhIGZldyB0ZXN0CiAgICAgICAgIGZyYW1ld29ya3MuLi4KCiAgICAgICAg
        IEkgTVVTVCBzYXkgdGhhdCBtaW5pdGVzdCBpcyAqdmVyeSogcmVhZGFibGUg
        LyB1bmRlcnN0YW5kYWJsZQogICAgICAgICBjb21wYXJlZCB0byB0aGUgJ290
        aGVyIHR3bycgb3B0aW9ucyB3ZSBsb29rZWQgYXQuIE5pY2VseSBkb25lIGFu
        ZAogICAgICAgICB0aGFuayB5b3UgZm9yIGhlbHBpbmcgdXMga2VlcCBvdXIg
        bWVudGFsIHNhbml0eS4iCgogICAgICAgIC0tIFdheW5lIEUuIFNlZ3VpbgoK
        ICAgIG1pbml0ZXN0L3VuaXQgaXMgYSBzbWFsbCBhbmQgaW5jcmVkaWJseSBm
        YXN0IHVuaXQgdGVzdGluZyBmcmFtZXdvcmsuCiAgICBJdCBwcm92aWRlcyBh
        IHJpY2ggc2V0IG9mIGFzc2VydGlvbnMgdG8gbWFrZSB5b3VyIHRlc3RzIGNs
        ZWFuIGFuZAogICAgcmVhZGFibGUuCgogICAgbWluaXRlc3Qvc3BlYyBpcyBh
        IGZ1bmN0aW9uYWxseSBjb21wbGV0ZSBzcGVjIGVuZ2luZS4gSXQgaG9va3Mg
        b250bwogICAgbWluaXRlc3QvdW5pdCBhbmQgc2VhbWxlc3NseSBicmlkZ2Vz
        IHRlc3QgYXNzZXJ0aW9ucyBvdmVyIHRvIHNwZWMKICAgIGV4cGVjdGF0aW9u
        cy4KCiAgICBtaW5pdGVzdC9iZW5jaG1hcmsgaXMgYW4gYXdlc29tZSB3YXkg
        dG8gYXNzZXJ0IHRoZSBwZXJmb3JtYW5jZSBvZiB5b3VyCiAgICBhbGdvcml0
        aG1zIGluIGEgcmVwZWF0YWJsZSBtYW5uZXIuIE5vdyB5b3UgY2FuIGFzc2Vy
        dCB0aGF0IHlvdXIgbmV3YgogICAgY28td29ya2VyIGRvZXNuJ3QgcmVwbGFj
        ZSB5b3VyIGxpbmVhciBhbGdvcml0aG0gd2l0aCBhbiBleHBvbmVudGlhbAog
        ICAgb25lIQoKICAgIG1pbml0ZXN0L21vY2sgYnkgU3RldmVuIEJha2VyLCBp
        cyBhIGJlYXV0aWZ1bGx5IHRpbnkgbW9jayAoYW5kIHN0dWIpCiAgICBvYmpl
        Y3QgZnJhbWV3b3JrLgoKICAgIG1pbml0ZXN0L3ByaWRlIHNob3dzIHByaWRl
        IGluIHRlc3RpbmcgYW5kIGFkZHMgY29sb3JpbmcgdG8geW91ciB0ZXN0CiAg
        ICBvdXRwdXQuIEkgZ3Vlc3MgaXQgaXMgYW4gZXhhbXBsZSBvZiBob3cgdG8g
        d3JpdGUgSU8gcGlwZXMgdG9vLiA6UAoKICAgIG1pbml0ZXN0L3VuaXQgaXMg
        bWVhbnQgdG8gaGF2ZSBhIGNsZWFuIGltcGxlbWVudGF0aW9uIGZvciBsYW5n
        dWFnZQogICAgaW1wbGVtZW50b3JzIHRoYXQgbmVlZCBhIG1pbmltYWwgc2V0
        IG9mIG1ldGhvZHMgdG8gYm9vdHN0cmFwIGEgd29ya2luZwogICAgdGVzdCBz
        dWl0ZS4gRm9yIGV4YW1wbGUsIHRoZXJlIGlzIG5vIG1hZ2ljIGludm9sdmVk
        IGZvciB0ZXN0LWNhc2UKICAgIGRpc2NvdmVyeS4KCiAgICAgICAgIkFnYWlu
        LCBJIGNhbid0IHByYWlzZSBlbm91Z2ggdGhlIGlkZWEgb2YgYSB0ZXN0aW5n
        L3NwZWNpbmcKICAgICAgICAgZnJhbWV3b3JrIHRoYXQgSSBjYW4gYWN0dWFs
        bHkgcmVhZCBpbiBmdWxsIGluIG9uZSBzaXR0aW5nISIKCiAgICAgICAgLS0g
        UGlvdHIgU3pvdGtvd3NraQoKICAgIENvbXBhcmluZyB0byByc3BlYzoKCiAg
        ICAgICAgcnNwZWMgaXMgYSB0ZXN0aW5nIERTTC4gbWluaXRlc3QgaXMgcnVi
        eS4KCiAgICAgICAgLS0gQWRhbSBIYXdraW5zLCAiQm93IEJlZm9yZSBNaW5p
        VGVzdCIKCiAgICBtaW5pdGVzdCBkb2Vzbid0IHJlaW52ZW50IGFueXRoaW5n
        IHRoYXQgcnVieSBhbHJlYWR5IHByb3ZpZGVzLCBsaWtlOgogICAgY2xhc3Nl
        cywgbW9kdWxlcywgaW5oZXJpdGFuY2UsIG1ldGhvZHMuIFRoaXMgbWVhbnMg
        eW91IG9ubHkgaGF2ZSB0bwogICAgbGVhcm4gcnVieSB0byB1c2UgbWluaXRl
        c3QgYW5kIGFsbCBvZiB5b3VyIHJlZ3VsYXIgT08gcHJhY3RpY2VzIGxpa2UK
        ICAgIGV4dHJhY3QtbWV0aG9kIHJlZmFjdG9yaW5ncyBzdGlsbCBhcHBseS4K
        ICBkb3dubG9hZHNfY291bnQ6IDEyNjU0MjQKICBtZXRhZGF0YToge30KICBu
        dW1iZXI6IDUuOC4yCiAgc3VtbWFyeTogbWluaXRlc3QgcHJvdmlkZXMgYSBj
        b21wbGV0ZSBzdWl0ZSBvZiB0ZXN0aW5nIGZhY2lsaXRpZXMgc3VwcG9ydGlu
        ZyBUREQsCiAgICBCREQsIG1vY2tpbmcsIGFuZCBiZW5jaG1hcmtpbmcKICBw
        bGF0Zm9ybTogcnVieQogIHJ1YnlnZW1zX3ZlcnNpb246ICI+PSAwIgogIHJ1
        YnlfdmVyc2lvbjogIj49IDAiCiAgcHJlcmVsZWFzZTogZmFsc2UKICBsaWNl
        bnNlczoKICAtIE1JVAogIHJlcXVpcmVtZW50czogW10KICBzaGE6IDJmNzJi
        ZDdlYWE4OTkwNzMwYWExOTBjOGY0OWYyODk1NjE2NWY0ZGE0MDBkNjE2OWNh
        ZmI1NWVmNzdkYzJkYjIKLSBhdXRob3JzOiBSeWFuIERhdmlzCiAgYnVpbHRf
        YXQ6ICcyMDE1LTA5LTIzVDAwOjAwOjAwLjAwMFonCiAgY3JlYXRlZF9hdDog
        JzIwMTUtMDktMjNUMjE6NTY6NDIuMjA3WicKICBkZXNjcmlwdGlvbjogfC0K
        ICAgIG1pbml0ZXN0IHByb3ZpZGVzIGEgY29tcGxldGUgc3VpdGUgb2YgdGVz
        dGluZyBmYWNpbGl0aWVzIHN1cHBvcnRpbmcKICAgIFRERCwgQkRELCBtb2Nr
        aW5nLCBhbmQgYmVuY2htYXJraW5nLgoKICAgICAgICAiSSBoYWQgYSBjbGFz
        cyB3aXRoIEppbSBXZWlyaWNoIG9uIHRlc3RpbmcgbGFzdCB3ZWVrIGFuZCB3
        ZSB3ZXJlCiAgICAgICAgIGFsbG93ZWQgdG8gY2hvb3NlIG91ciB0ZXN0aW5n
        IGZyYW1ld29ya3MuIEtpcmsgSGFpbmVzIGFuZCBJIHdlcmUKICAgICAgICAg
        cGFpcmVkIHVwIGFuZCB3ZSBjcmFja2VkIG9wZW4gdGhlIGNvZGUgZm9yIGEg
        ZmV3IHRlc3QKICAgICAgICAgZnJhbWV3b3Jrcy4uLgoKICAgICAgICAgSSBN
        VVNUIHNheSB0aGF0IG1pbml0ZXN0IGlzICp2ZXJ5KiByZWFkYWJsZSAvIHVu
        ZGVyc3RhbmRhYmxlCiAgICAgICAgIGNvbXBhcmVkIHRvIHRoZSAnb3RoZXIg
        dHdvJyBvcHRpb25zIHdlIGxvb2tlZCBhdC4gTmljZWx5IGRvbmUgYW5kCiAg
        ICAgICAgIHRoYW5rIHlvdSBmb3IgaGVscGluZyB1cyBrZWVwIG91ciBtZW50
        YWwgc2FuaXR5LiIKCiAgICAgICAgLS0gV2F5bmUgRS4gU2VndWluCgogICAg
        bWluaXRlc3QvdW5pdCBpcyBhIHNtYWxsIGFuZCBpbmNyZWRpYmx5IGZhc3Qg
        dW5pdCB0ZXN0aW5nIGZyYW1ld29yay4KICAgIEl0IHByb3ZpZGVzIGEgcmlj
        aCBzZXQgb2YgYXNzZXJ0aW9ucyB0byBtYWtlIHlvdXIgdGVzdHMgY2xlYW4g
        YW5kCiAgICByZWFkYWJsZS4KCiAgICBtaW5pdGVzdC9zcGVjIGlzIGEgZnVu
        Y3Rpb25hbGx5IGNvbXBsZXRlIHNwZWMgZW5naW5lLiBJdCBob29rcyBvbnRv
        CiAgICBtaW5pdGVzdC91bml0IGFuZCBzZWFtbGVzc2x5IGJyaWRnZXMgdGVz
        dCBhc3NlcnRpb25zIG92ZXIgdG8gc3BlYwogICAgZXhwZWN0YXRpb25zLgoK
        ICAgIG1pbml0ZXN0L2JlbmNobWFyayBpcyBhbiBhd2Vzb21lIHdheSB0byBh
        c3NlcnQgdGhlIHBlcmZvcm1hbmNlIG9mIHlvdXIKICAgIGFsZ29yaXRobXMg
        aW4gYSByZXBlYXRhYmxlIG1hbm5lci4gTm93IHlvdSBjYW4gYXNzZXJ0IHRo
        YXQgeW91ciBuZXdiCiAgICBjby13b3JrZXIgZG9lc24ndCByZXBsYWNlIHlv
        dXIgbGluZWFyIGFsZ29yaXRobSB3aXRoIGFuIGV4cG9uZW50aWFsCiAgICBv
        bmUhCgogICAgbWluaXRlc3QvbW9jayBieSBTdGV2ZW4gQmFrZXIsIGlzIGEg
        YmVhdXRpZnVsbHkgdGlueSBtb2NrIChhbmQgc3R1YikKICAgIG9iamVjdCBm
        cmFtZXdvcmsuCgogICAgbWluaXRlc3QvcHJpZGUgc2hvd3MgcHJpZGUgaW4g
        dGVzdGluZyBhbmQgYWRkcyBjb2xvcmluZyB0byB5b3VyIHRlc3QKICAgIG91
        dHB1dC4gSSBndWVzcyBpdCBpcyBhbiBleGFtcGxlIG9mIGhvdyB0byB3cml0
        ZSBJTyBwaXBlcyB0b28uIDpQCgogICAgbWluaXRlc3QvdW5pdCBpcyBtZWFu
        dCB0byBoYXZlIGEgY2xlYW4gaW1wbGVtZW50YXRpb24gZm9yIGxhbmd1YWdl
        CiAgICBpbXBsZW1lbnRvcnMgdGhhdCBuZWVkIGEgbWluaW1hbCBzZXQgb2Yg
        bWV0aG9kcyB0byBib290c3RyYXAgYSB3b3JraW5nCiAgICB0ZXN0IHN1aXRl
        LiBGb3IgZXhhbXBsZSwgdGhlcmUgaXMgbm8gbWFnaWMgaW52b2x2ZWQgZm9y
        IHRlc3QtY2FzZQogICAgZGlzY292ZXJ5LgoKICAgICAgICAiQWdhaW4sIEkg
        Y2FuJ3QgcHJhaXNlIGVub3VnaCB0aGUgaWRlYSBvZiBhIHRlc3Rpbmcvc3Bl
        Y2luZwogICAgICAgICBmcmFtZXdvcmsgdGhhdCBJIGNhbiBhY3R1YWxseSBy
        ZWFkIGluIGZ1bGwgaW4gb25lIHNpdHRpbmchIgoKICAgICAgICAtLSBQaW90
        ciBTem90a293c2tpCgogICAgQ29tcGFyaW5nIHRvIHJzcGVjOgoKICAgICAg
        ICByc3BlYyBpcyBhIHRlc3RpbmcgRFNMLiBtaW5pdGVzdCBpcyBydWJ5LgoK
        ICAgICAgICAtLSBBZGFtIEhhd2tpbnMsICJCb3cgQmVmb3JlIE1pbmlUZXN0
        IgoKICAgIG1pbml0ZXN0IGRvZXNuJ3QgcmVpbnZlbnQgYW55dGhpbmcgdGhh
        dCBydWJ5IGFscmVhZHkgcHJvdmlkZXMsIGxpa2U6CiAgICBjbGFzc2VzLCBt
        b2R1bGVzLCBpbmhlcml0YW5jZSwgbWV0aG9kcy4gVGhpcyBtZWFucyB5b3Ug
        b25seSBoYXZlIHRvCiAgICBsZWFybiBydWJ5IHRvIHVzZSBtaW5pdGVzdCBh
        bmQgYWxsIG9mIHlvdXIgcmVndWxhciBPTyBwcmFjdGljZXMgbGlrZQogICAg
        ZXh0cmFjdC1tZXRob2QgcmVmYWN0b3JpbmdzIHN0aWxsIGFwcGx5LgogIGRv
        d25sb2Fkc19jb3VudDogMTc5MzA2NgogIG1ldGFkYXRhOiB7fQogIG51bWJl
        cjogNS44LjEKICBzdW1tYXJ5OiBtaW5pdGVzdCBwcm92aWRlcyBhIGNvbXBs
        ZXRlIHN1aXRlIG9mIHRlc3RpbmcgZmFjaWxpdGllcyBzdXBwb3J0aW5nIFRE
        RCwKICAgIEJERCwgbW9ja2luZywgYW5kIGJlbmNobWFya2luZwogIHBsYXRm
        b3JtOiBydWJ5CiAgcnVieWdlbXNfdmVyc2lvbjogIj49IDAiCiAgcnVieV92
        ZXJzaW9uOiAiPj0gMCIKICBwcmVyZWxlYXNlOiBmYWxzZQogIGxpY2Vuc2Vz
        OgogIC0gTUlUCiAgcmVxdWlyZW1lbnRzOiBbXQogIHNoYTogYzhkMjc2M2Vm
        MGYzYzg2NDY0YjgzZWQ2MDg3Njc3MmExZTdmZjY2OWM1NjJiYjYzMDY0Njc5
        Y2Y1MTEwOTEwMwotIGF1dGhvcnM6IFJ5YW4gRGF2aXMKICBidWlsdF9hdDog
        JzIwMTUtMDgtMDZUMDA6MDA6MDAuMDAwWicKICBjcmVhdGVkX2F0OiAnMjAx
        NS0wOC0wNlQyMTo1MToyMC41OTFaJwogIGRlc2NyaXB0aW9uOiB8LQogICAg
        bWluaXRlc3QgcHJvdmlkZXMgYSBjb21wbGV0ZSBzdWl0ZSBvZiB0ZXN0aW5n
        IGZhY2lsaXRpZXMgc3VwcG9ydGluZwogICAgVERELCBCREQsIG1vY2tpbmcs
        IGFuZCBiZW5jaG1hcmtpbmcuCgogICAgICAgICJJIGhhZCBhIGNsYXNzIHdp
        dGggSmltIFdlaXJpY2ggb24gdGVzdGluZyBsYXN0IHdlZWsgYW5kIHdlIHdl
        cmUKICAgICAgICAgYWxsb3dlZCB0byBjaG9vc2Ugb3VyIHRlc3RpbmcgZnJh
        bWV3b3Jrcy4gS2lyayBIYWluZXMgYW5kIEkgd2VyZQogICAgICAgICBwYWly
        ZWQgdXAgYW5kIHdlIGNyYWNrZWQgb3BlbiB0aGUgY29kZSBmb3IgYSBmZXcg
        dGVzdAogICAgICAgICBmcmFtZXdvcmtzLi4uCgogICAgICAgICBJIE1VU1Qg
        c2F5IHRoYXQgbWluaXRlc3QgaXMgKnZlcnkqIHJlYWRhYmxlIC8gdW5kZXJz
        dGFuZGFibGUKICAgICAgICAgY29tcGFyZWQgdG8gdGhlICdvdGhlciB0d28n
        IG9wdGlvbnMgd2UgbG9va2VkIGF0LiBOaWNlbHkgZG9uZSBhbmQKICAgICAg
        ICAgdGhhbmsgeW91IGZvciBoZWxwaW5nIHVzIGtlZXAgb3VyIG1lbnRhbCBz
        YW5pdHkuIgoKICAgICAgICAtLSBXYXluZSBFLiBTZWd1aW4KCiAgICBtaW5p
        dGVzdC91bml0IGlzIGEgc21hbGwgYW5kIGluY3JlZGlibHkgZmFzdCB1bml0
        IHRlc3RpbmcgZnJhbWV3b3JrLgogICAgSXQgcHJvdmlkZXMgYSByaWNoIHNl
        dCBvZiBhc3NlcnRpb25zIHRvIG1ha2UgeW91ciB0ZXN0cyBjbGVhbiBhbmQK
        ICAgIHJlYWRhYmxlLgoKICAgIG1pbml0ZXN0L3NwZWMgaXMgYSBmdW5jdGlv
        bmFsbHkgY29tcGxldGUgc3BlYyBlbmdpbmUuIEl0IGhvb2tzIG9udG8KICAg
        IG1pbml0ZXN0L3VuaXQgYW5kIHNlYW1sZXNzbHkgYnJpZGdlcyB0ZXN0IGFz
        c2VydGlvbnMgb3ZlciB0byBzcGVjCiAgICBleHBlY3RhdGlvbnMuCgogICAg
        bWluaXRlc3QvYmVuY2htYXJrIGlzIGFuIGF3ZXNvbWUgd2F5IHRvIGFzc2Vy
        dCB0aGUgcGVyZm9ybWFuY2Ugb2YgeW91cgogICAgYWxnb3JpdGhtcyBpbiBh
        IHJlcGVhdGFibGUgbWFubmVyLiBOb3cgeW91IGNhbiBhc3NlcnQgdGhhdCB5
        b3VyIG5ld2IKICAgIGNvLXdvcmtlciBkb2Vzbid0IHJlcGxhY2UgeW91ciBs
        aW5lYXIgYWxnb3JpdGhtIHdpdGggYW4gZXhwb25lbnRpYWwKICAgIG9uZSEK
        CiAgICBtaW5pdGVzdC9tb2NrIGJ5IFN0ZXZlbiBCYWtlciwgaXMgYSBiZWF1
        dGlmdWxseSB0aW55IG1vY2sgKGFuZCBzdHViKQogICAgb2JqZWN0IGZyYW1l
        d29yay4KCiAgICBtaW5pdGVzdC9wcmlkZSBzaG93cyBwcmlkZSBpbiB0ZXN0
        aW5nIGFuZCBhZGRzIGNvbG9yaW5nIHRvIHlvdXIgdGVzdAogICAgb3V0cHV0
        LiBJIGd1ZXNzIGl0IGlzIGFuIGV4YW1wbGUgb2YgaG93IHRvIHdyaXRlIElP
        IHBpcGVzIHRvby4gOlAKCiAgICBtaW5pdGVzdC91bml0IGlzIG1lYW50IHRv
        IGhhdmUgYSBjbGVhbiBpbXBsZW1lbnRhdGlvbiBmb3IgbGFuZ3VhZ2UKICAg
        IGltcGxlbWVudG9ycyB0aGF0IG5lZWQgYSBtaW5pbWFsIHNldCBvZiBtZXRo
        b2RzIHRvIGJvb3RzdHJhcCBhIHdvcmtpbmcKICAgIHRlc3Qgc3VpdGUuIEZv
        ciBleGFtcGxlLCB0aGVyZSBpcyBubyBtYWdpYyBpbnZvbHZlZCBmb3IgdGVz
        dC1jYXNlCiAgICBkaXNjb3ZlcnkuCgogICAgICAgICJBZ2FpbiwgSSBjYW4n
        dCBwcmFpc2UgZW5vdWdoIHRoZSBpZGVhIG9mIGEgdGVzdGluZy9zcGVjaW5n
        CiAgICAgICAgIGZyYW1ld29yayB0aGF0IEkgY2FuIGFjdHVhbGx5IHJlYWQg
        aW4gZnVsbCBpbiBvbmUgc2l0dGluZyEiCgogICAgICAgIC0tIFBpb3RyIFN6
        b3Rrb3dza2kKCiAgICBDb21wYXJpbmcgdG8gcnNwZWM6CgogICAgICAgIHJz
        cGVjIGlzIGEgdGVzdGluZyBEU0wuIG1pbml0ZXN0IGlzIHJ1YnkuCgogICAg
        ICAgIC0tIEFkYW0gSGF3a2lucywgIkJvdyBCZWZvcmUgTWluaVRlc3QiCgog
        ICAgbWluaXRlc3QgZG9lc24ndCByZWludmVudCBhbnl0aGluZyB0aGF0IHJ1
        YnkgYWxyZWFkeSBwcm92aWRlcywgbGlrZToKICAgIGNsYXNzZXMsIG1vZHVs
        ZXMsIGluaGVyaXRhbmNlLCBtZXRob2RzLiBUaGlzIG1lYW5zIHlvdSBvbmx5
        IGhhdmUgdG8KICAgIGxlYXJuIHJ1YnkgdG8gdXNlIG1pbml0ZXN0IGFuZCBh
        bGwgb2YgeW91ciByZWd1bGFyIE9PIHByYWN0aWNlcyBsaWtlCiAgICBleHRy
        YWN0LW1ldGhvZCByZWZhY3RvcmluZ3Mgc3RpbGwgYXBwbHkuCiAgZG93bmxv
        YWRzX2NvdW50OiAyNjkzNjc4CiAgbWV0YWRhdGE6IHt9CiAgbnVtYmVyOiA1
        LjguMAogIHN1bW1hcnk6IG1pbml0ZXN0IHByb3ZpZGVzIGEgY29tcGxldGUg
        c3VpdGUgb2YgdGVzdGluZyBmYWNpbGl0aWVzIHN1cHBvcnRpbmcgVERELAog
        ICAgQkRELCBtb2NraW5nLCBhbmQgYmVuY2htYXJraW5nCiAgcGxhdGZvcm06
        IHJ1YnkKICBydWJ5Z2Vtc192ZXJzaW9uOiAiPj0gMCIKICBydWJ5X3ZlcnNp
        b246ICI+PSAwIgogIHByZXJlbGVhc2U6IGZhbHNlCiAgbGljZW5zZXM6CiAg
        LSBNSVQKICByZXF1aXJlbWVudHM6IFtdCiAgc2hhOiA4NzVkZTI3ODRiOTdi
        NzEwZGE3NmM2ODJlNzI1MDk1Y2E2YzUxNDIwOTNhMDc0NzQxMTRlNTJjZDZk
        ZWEwOTUzCi0gYXV0aG9yczogUnlhbiBEYXZpcwogIGJ1aWx0X2F0OiAnMjAx
        NS0wNS0yN1QwMDowMDowMC4wMDBaJwogIGNyZWF0ZWRfYXQ6ICcyMDE1LTA1
        LTI3VDIxOjQyOjU3LjIwOFonCiAgZGVzY3JpcHRpb246IHwtCiAgICBtaW5p
        dGVzdCBwcm92aWRlcyBhIGNvbXBsZXRlIHN1aXRlIG9mIHRlc3RpbmcgZmFj
        aWxpdGllcyBzdXBwb3J0aW5nCiAgICBUREQsIEJERCwgbW9ja2luZywgYW5k
        IGJlbmNobWFya2luZy4KCiAgICAgICAgIkkgaGFkIGEgY2xhc3Mgd2l0aCBK
        aW0gV2VpcmljaCBvbiB0ZXN0aW5nIGxhc3Qgd2VlayBhbmQgd2Ugd2VyZQog
        ICAgICAgICBhbGxvd2VkIHRvIGNob29zZSBvdXIgdGVzdGluZyBmcmFtZXdv
        cmtzLiBLaXJrIEhhaW5lcyBhbmQgSSB3ZXJlCiAgICAgICAgIHBhaXJlZCB1
        cCBhbmQgd2UgY3JhY2tlZCBvcGVuIHRoZSBjb2RlIGZvciBhIGZldyB0ZXN0
        CiAgICAgICAgIGZyYW1ld29ya3MuLi4KCiAgICAgICAgIEkgTVVTVCBzYXkg
        dGhhdCBtaW5pdGVzdCBpcyAqdmVyeSogcmVhZGFibGUgLyB1bmRlcnN0YW5k
        YWJsZQogICAgICAgICBjb21wYXJlZCB0byB0aGUgJ290aGVyIHR3bycgb3B0
        aW9ucyB3ZSBsb29rZWQgYXQuIE5pY2VseSBkb25lIGFuZAogICAgICAgICB0
        aGFuayB5b3UgZm9yIGhlbHBpbmcgdXMga2VlcCBvdXIgbWVudGFsIHNhbml0
        eS4iCgogICAgICAgIC0tIFdheW5lIEUuIFNlZ3VpbgoKICAgIG1pbml0ZXN0
        L3VuaXQgaXMgYSBzbWFsbCBhbmQgaW5jcmVkaWJseSBmYXN0IHVuaXQgdGVz
        dGluZyBmcmFtZXdvcmsuCiAgICBJdCBwcm92aWRlcyBhIHJpY2ggc2V0IG9m
        IGFzc2VydGlvbnMgdG8gbWFrZSB5b3VyIHRlc3RzIGNsZWFuIGFuZAogICAg
        cmVhZGFibGUuCgogICAgbWluaXRlc3Qvc3BlYyBpcyBhIGZ1bmN0aW9uYWxs
        eSBjb21wbGV0ZSBzcGVjIGVuZ2luZS4gSXQgaG9va3Mgb250bwogICAgbWlu
        aXRlc3QvdW5pdCBhbmQgc2VhbWxlc3NseSBicmlkZ2VzIHRlc3QgYXNzZXJ0
        aW9ucyBvdmVyIHRvIHNwZWMKICAgIGV4cGVjdGF0aW9ucy4KCiAgICBtaW5p
        dGVzdC9iZW5jaG1hcmsgaXMgYW4gYXdlc29tZSB3YXkgdG8gYXNzZXJ0IHRo
        ZSBwZXJmb3JtYW5jZSBvZiB5b3VyCiAgICBhbGdvcml0aG1zIGluIGEgcmVw
        ZWF0YWJsZSBtYW5uZXIuIE5vdyB5b3UgY2FuIGFzc2VydCB0aGF0IHlvdXIg
        bmV3YgogICAgY28td29ya2VyIGRvZXNuJ3QgcmVwbGFjZSB5b3VyIGxpbmVh
        ciBhbGdvcml0aG0gd2l0aCBhbiBleHBvbmVudGlhbAogICAgb25lIQoKICAg
        IG1pbml0ZXN0L21vY2sgYnkgU3RldmVuIEJha2VyLCBpcyBhIGJlYXV0aWZ1
        bGx5IHRpbnkgbW9jayAoYW5kIHN0dWIpCiAgICBvYmplY3QgZnJhbWV3b3Jr
        LgoKICAgIG1pbml0ZXN0L3ByaWRlIHNob3dzIHByaWRlIGluIHRlc3Rpbmcg
        YW5kIGFkZHMgY29sb3JpbmcgdG8geW91ciB0ZXN0CiAgICBvdXRwdXQuIEkg
        Z3Vlc3MgaXQgaXMgYW4gZXhhbXBsZSBvZiBob3cgdG8gd3JpdGUgSU8gcGlw
        ZXMgdG9vLiA6UAoKICAgIG1pbml0ZXN0L3VuaXQgaXMgbWVhbnQgdG8gaGF2
        ZSBhIGNsZWFuIGltcGxlbWVudGF0aW9uIGZvciBsYW5ndWFnZQogICAgaW1w
        bGVtZW50b3JzIHRoYXQgbmVlZCBhIG1pbmltYWwgc2V0IG9mIG1ldGhvZHMg
        dG8gYm9vdHN0cmFwIGEgd29ya2luZwogICAgdGVzdCBzdWl0ZS4gRm9yIGV4
        YW1wbGUsIHRoZXJlIGlzIG5vIG1hZ2ljIGludm9sdmVkIGZvciB0ZXN0LWNh
        c2UKICAgIGRpc2NvdmVyeS4KCiAgICAgICAgIkFnYWluLCBJIGNhbid0IHBy
        YWlzZSBlbm91Z2ggdGhlIGlkZWEgb2YgYSB0ZXN0aW5nL3NwZWNpbmcKICAg
        ICAgICAgZnJhbWV3b3JrIHRoYXQgSSBjYW4gYWN0dWFsbHkgcmVhZCBpbiBm
        dWxsIGluIG9uZSBzaXR0aW5nISIKCiAgICAgICAgLS0gUGlvdHIgU3pvdGtv
        d3NraQoKICAgIENvbXBhcmluZyB0byByc3BlYzoKCiAgICAgICAgcnNwZWMg
        aXMgYSB0ZXN0aW5nIERTTC4gbWluaXRlc3QgaXMgcnVieS4KCiAgICAgICAg
        LS0gQWRhbSBIYXdraW5zLCAiQm93IEJlZm9yZSBNaW5pVGVzdCIKCiAgICBt
        aW5pdGVzdCBkb2Vzbid0IHJlaW52ZW50IGFueXRoaW5nIHRoYXQgcnVieSBh
        bHJlYWR5IHByb3ZpZGVzLCBsaWtlOgogICAgY2xhc3NlcywgbW9kdWxlcywg
        aW5oZXJpdGFuY2UsIG1ldGhvZHMuIFRoaXMgbWVhbnMgeW91IG9ubHkgaGF2
        ZSB0bwogICAgbGVhcm4gcnVieSB0byB1c2UgbWluaXRlc3QgYW5kIGFsbCBv
        ZiB5b3VyIHJlZ3VsYXIgT08gcHJhY3RpY2VzIGxpa2UKICAgIGV4dHJhY3Qt
        bWV0aG9kIHJlZmFjdG9yaW5ncyBzdGlsbCBhcHBseS4KICBkb3dubG9hZHNf
        Y291bnQ6IDQ0MTI3NTgKICBtZXRhZGF0YToge30KICBudW1iZXI6IDUuNy4w
        CiAgc3VtbWFyeTogbWluaXRlc3QgcHJvdmlkZXMgYSBjb21wbGV0ZSBzdWl0
        ZSBvZiB0ZXN0aW5nIGZhY2lsaXRpZXMgc3VwcG9ydGluZyBUREQsCiAgICBC
        REQsIG1vY2tpbmcsIGFuZCBiZW5jaG1hcmtpbmcKICBwbGF0Zm9ybTogcnVi
        eQogIHJ1YnlnZW1zX3ZlcnNpb246ICI+PSAwIgogIHJ1YnlfdmVyc2lvbjog
        Ij49IDAiCiAgcHJlcmVsZWFzZTogZmFsc2UKICBsaWNlbnNlczoKICAtIE1J
        VAogIHJlcXVpcmVtZW50czogW10KICBzaGE6IDA4ZWYxMGQxZTYzMTRmZDBk
        YzlhNzFlYTY5N2ZkMTk2ZDE1M2Q2YmJmZmE4YzZmN2I4MzUwOTczYTc3MmI4
        NjcKLSBhdXRob3JzOiBSeWFuIERhdmlzCiAgYnVpbHRfYXQ6ICcyMDE1LTA0
        LTI3VDAwOjAwOjAwLjAwMFonCiAgY3JlYXRlZF9hdDogJzIwMTUtMDQtMjdU
        MjE6MzA6MjEuNjE1WicKICBkZXNjcmlwdGlvbjogfC0KICAgIG1pbml0ZXN0
        IHByb3ZpZGVzIGEgY29tcGxldGUgc3VpdGUgb2YgdGVzdGluZyBmYWNpbGl0
        aWVzIHN1cHBvcnRpbmcKICAgIFRERCwgQkRELCBtb2NraW5nLCBhbmQgYmVu
        Y2htYXJraW5nLgoKICAgICAgICAiSSBoYWQgYSBjbGFzcyB3aXRoIEppbSBX
        ZWlyaWNoIG9uIHRlc3RpbmcgbGFzdCB3ZWVrIGFuZCB3ZSB3ZXJlCiAgICAg
        ICAgIGFsbG93ZWQgdG8gY2hvb3NlIG91ciB0ZXN0aW5nIGZyYW1ld29ya3Mu
        IEtpcmsgSGFpbmVzIGFuZCBJIHdlcmUKICAgICAgICAgcGFpcmVkIHVwIGFu
        ZCB3ZSBjcmFja2VkIG9wZW4gdGhlIGNvZGUgZm9yIGEgZmV3IHRlc3QKICAg
        ICAgICAgZnJhbWV3b3Jrcy4uLgoKICAgICAgICAgSSBNVVNUIHNheSB0aGF0
        IG1pbml0ZXN0IGlzICp2ZXJ5KiByZWFkYWJsZSAvIHVuZGVyc3RhbmRhYmxl
        CiAgICAgICAgIGNvbXBhcmVkIHRvIHRoZSAnb3RoZXIgdHdvJyBvcHRpb25z
        IHdlIGxvb2tlZCBhdC4gTmljZWx5IGRvbmUgYW5kCiAgICAgICAgIHRoYW5r
        IHlvdSBmb3IgaGVscGluZyB1cyBrZWVwIG91ciBtZW50YWwgc2FuaXR5LiIK
        CiAgICAgICAgLS0gV2F5bmUgRS4gU2VndWluCgogICAgbWluaXRlc3QvdW5p
        dCBpcyBhIHNtYWxsIGFuZCBpbmNyZWRpYmx5IGZhc3QgdW5pdCB0ZXN0aW5n
        IGZyYW1ld29yay4KICAgIEl0IHByb3ZpZGVzIGEgcmljaCBzZXQgb2YgYXNz
        ZXJ0aW9ucyB0byBtYWtlIHlvdXIgdGVzdHMgY2xlYW4gYW5kCiAgICByZWFk
        YWJsZS4KCiAgICBtaW5pdGVzdC9zcGVjIGlzIGEgZnVuY3Rpb25hbGx5IGNv
        bXBsZXRlIHNwZWMgZW5naW5lLiBJdCBob29rcyBvbnRvCiAgICBtaW5pdGVz
        dC91bml0IGFuZCBzZWFtbGVzc2x5IGJyaWRnZXMgdGVzdCBhc3NlcnRpb25z
        IG92ZXIgdG8gc3BlYwogICAgZXhwZWN0YXRpb25zLgoKICAgIG1pbml0ZXN0
        L2JlbmNobWFyayBpcyBhbiBhd2Vzb21lIHdheSB0byBhc3NlcnQgdGhlIHBl
        cmZvcm1hbmNlIG9mIHlvdXIKICAgIGFsZ29yaXRobXMgaW4gYSByZXBlYXRh
        YmxlIG1hbm5lci4gTm93IHlvdSBjYW4gYXNzZXJ0IHRoYXQgeW91ciBuZXdi
        CiAgICBjby13b3JrZXIgZG9lc24ndCByZXBsYWNlIHlvdXIgbGluZWFyIGFs
        Z29yaXRobSB3aXRoIGFuIGV4cG9uZW50aWFsCiAgICBvbmUhCgogICAgbWlu
        aXRlc3QvbW9jayBieSBTdGV2ZW4gQmFrZXIsIGlzIGEgYmVhdXRpZnVsbHkg
        dGlueSBtb2NrIChhbmQgc3R1YikKICAgIG9iamVjdCBmcmFtZXdvcmsuCgog
        ICAgbWluaXRlc3QvcHJpZGUgc2hvd3MgcHJpZGUgaW4gdGVzdGluZyBhbmQg
        YWRkcyBjb2xvcmluZyB0byB5b3VyIHRlc3QKICAgIG91dHB1dC4gSSBndWVz
        cyBpdCBpcyBhbiBleGFtcGxlIG9mIGhvdyB0byB3cml0ZSBJTyBwaXBlcyB0
        b28uIDpQCgogICAgbWluaXRlc3QvdW5pdCBpcyBtZWFudCB0byBoYXZlIGEg
        Y2xlYW4gaW1wbGVtZW50YXRpb24gZm9yIGxhbmd1YWdlCiAgICBpbXBsZW1l
        bnRvcnMgdGhhdCBuZWVkIGEgbWluaW1hbCBzZXQgb2YgbWV0aG9kcyB0byBi
        b290c3RyYXAgYSB3b3JraW5nCiAgICB0ZXN0IHN1aXRlLiBGb3IgZXhhbXBs
        ZSwgdGhlcmUgaXMgbm8gbWFnaWMgaW52b2x2ZWQgZm9yIHRlc3QtY2FzZQog
        ICAgZGlzY292ZXJ5LgoKICAgICAgICAiQWdhaW4sIEkgY2FuJ3QgcHJhaXNl
        IGVub3VnaCB0aGUgaWRlYSBvZiBhIHRlc3Rpbmcvc3BlY2luZwogICAgICAg
        ICBmcmFtZXdvcmsgdGhhdCBJIGNhbiBhY3R1YWxseSByZWFkIGluIGZ1bGwg
        aW4gb25lIHNpdHRpbmchIgoKICAgICAgICAtLSBQaW90ciBTem90a293c2tp
        CgogICAgQ29tcGFyaW5nIHRvIHJzcGVjOgoKICAgICAgICByc3BlYyBpcyBh
        IHRlc3RpbmcgRFNMLiBtaW5pdGVzdCBpcyBydWJ5LgoKICAgICAgICAtLSBB
        ZGFtIEhhd2tpbnMsICJCb3cgQmVmb3JlIE1pbmlUZXN0IgoKICAgIG1pbml0
        ZXN0IGRvZXNuJ3QgcmVpbnZlbnQgYW55dGhpbmcgdGhhdCBydWJ5IGFscmVh
        ZHkgcHJvdmlkZXMsIGxpa2U6CiAgICBjbGFzc2VzLCBtb2R1bGVzLCBpbmhl
        cml0YW5jZSwgbWV0aG9kcy4gVGhpcyBtZWFucyB5b3Ugb25seSBoYXZlIHRv
        CiAgICBsZWFybiBydWJ5IHRvIHVzZSBtaW5pdGVzdCBhbmQgYWxsIG9mIHlv
        dXIgcmVndWxhciBPTyBwcmFjdGljZXMgbGlrZQogICAgZXh0cmFjdC1tZXRo
        b2QgcmVmYWN0b3JpbmdzIHN0aWxsIGFwcGx5LgogIGRvd25sb2Fkc19jb3Vu
        dDogMTM2MTMzNQogIG1ldGFkYXRhOiB7fQogIG51bWJlcjogNS42LjEKICBz
        dW1tYXJ5OiBtaW5pdGVzdCBwcm92aWRlcyBhIGNvbXBsZXRlIHN1aXRlIG9m
        IHRlc3RpbmcgZmFjaWxpdGllcyBzdXBwb3J0aW5nIFRERCwKICAgIEJERCwg
        bW9ja2luZywgYW5kIGJlbmNobWFya2luZwogIHBsYXRmb3JtOiBydWJ5CiAg
        cnVieWdlbXNfdmVyc2lvbjogIj49IDAiCiAgcnVieV92ZXJzaW9uOiAiPj0g
        MCIKICBwcmVyZWxlYXNlOiBmYWxzZQogIGxpY2Vuc2VzOgogIC0gTUlUCiAg
        cmVxdWlyZW1lbnRzOiBbXQogIHNoYTogYzI5M2Q0OTcwNDlhYTY2M2RjNjMz
        MmI5NDBiZGFjOWRkMzA1MmI2MmNjZmU5NDNjNGZiNWIxMzAxNTRmODZiMQot
        IGF1dGhvcnM6IFJ5YW4gRGF2aXMKICBidWlsdF9hdDogJzIwMTUtMDQtMTNU
        MDA6MDA6MDAuMDAwWicKICBjcmVhdGVkX2F0OiAnMjAxNS0wNC0xM1QyMjow
        ODo0OC42NjRaJwogIGRlc2NyaXB0aW9uOiB8LQogICAgbWluaXRlc3QgcHJv
        dmlkZXMgYSBjb21wbGV0ZSBzdWl0ZSBvZiB0ZXN0aW5nIGZhY2lsaXRpZXMg
        c3VwcG9ydGluZwogICAgVERELCBCREQsIG1vY2tpbmcsIGFuZCBiZW5jaG1h
        cmtpbmcuCgogICAgICAgICJJIGhhZCBhIGNsYXNzIHdpdGggSmltIFdlaXJp
        Y2ggb24gdGVzdGluZyBsYXN0IHdlZWsgYW5kIHdlIHdlcmUKICAgICAgICAg
        YWxsb3dlZCB0byBjaG9vc2Ugb3VyIHRlc3RpbmcgZnJhbWV3b3Jrcy4gS2ly
        ayBIYWluZXMgYW5kIEkgd2VyZQogICAgICAgICBwYWlyZWQgdXAgYW5kIHdl
        IGNyYWNrZWQgb3BlbiB0aGUgY29kZSBmb3IgYSBmZXcgdGVzdAogICAgICAg
        ICBmcmFtZXdvcmtzLi4uCgogICAgICAgICBJIE1VU1Qgc2F5IHRoYXQgbWlu
        aXRlc3QgaXMgKnZlcnkqIHJlYWRhYmxlIC8gdW5kZXJzdGFuZGFibGUKICAg
        ICAgICAgY29tcGFyZWQgdG8gdGhlICdvdGhlciB0d28nIG9wdGlvbnMgd2Ug
        bG9va2VkIGF0LiBOaWNlbHkgZG9uZSBhbmQKICAgICAgICAgdGhhbmsgeW91
        IGZvciBoZWxwaW5nIHVzIGtlZXAgb3VyIG1lbnRhbCBzYW5pdHkuIgoKICAg
        ICAgICAtLSBXYXluZSBFLiBTZWd1aW4KCiAgICBtaW5pdGVzdC91bml0IGlz
        IGEgc21hbGwgYW5kIGluY3JlZGlibHkgZmFzdCB1bml0IHRlc3RpbmcgZnJh
        bWV3b3JrLgogICAgSXQgcHJvdmlkZXMgYSByaWNoIHNldCBvZiBhc3NlcnRp
        b25zIHRvIG1ha2UgeW91ciB0ZXN0cyBjbGVhbiBhbmQKICAgIHJlYWRhYmxl
        LgoKICAgIG1pbml0ZXN0L3NwZWMgaXMgYSBmdW5jdGlvbmFsbHkgY29tcGxl
        dGUgc3BlYyBlbmdpbmUuIEl0IGhvb2tzIG9udG8KICAgIG1pbml0ZXN0L3Vu
        aXQgYW5kIHNlYW1sZXNzbHkgYnJpZGdlcyB0ZXN0IGFzc2VydGlvbnMgb3Zl
        ciB0byBzcGVjCiAgICBleHBlY3RhdGlvbnMuCgogICAgbWluaXRlc3QvYmVu
        Y2htYXJrIGlzIGFuIGF3ZXNvbWUgd2F5IHRvIGFzc2VydCB0aGUgcGVyZm9y
        bWFuY2Ugb2YgeW91cgogICAgYWxnb3JpdGhtcyBpbiBhIHJlcGVhdGFibGUg
        bWFubmVyLiBOb3cgeW91IGNhbiBhc3NlcnQgdGhhdCB5b3VyIG5ld2IKICAg
        IGNvLXdvcmtlciBkb2Vzbid0IHJlcGxhY2UgeW91ciBsaW5lYXIgYWxnb3Jp
        dGhtIHdpdGggYW4gZXhwb25lbnRpYWwKICAgIG9uZSEKCiAgICBtaW5pdGVz
        dC9tb2NrIGJ5IFN0ZXZlbiBCYWtlciwgaXMgYSBiZWF1dGlmdWxseSB0aW55
        IG1vY2sgKGFuZCBzdHViKQogICAgb2JqZWN0IGZyYW1ld29yay4KCiAgICBt
        aW5pdGVzdC9wcmlkZSBzaG93cyBwcmlkZSBpbiB0ZXN0aW5nIGFuZCBhZGRz
        IGNvbG9yaW5nIHRvIHlvdXIgdGVzdAogICAgb3V0cHV0LiBJIGd1ZXNzIGl0
        IGlzIGFuIGV4YW1wbGUgb2YgaG93IHRvIHdyaXRlIElPIHBpcGVzIHRvby4g
        OlAKCiAgICBtaW5pdGVzdC91bml0IGlzIG1lYW50IHRvIGhhdmUgYSBjbGVh
        biBpbXBsZW1lbnRhdGlvbiBmb3IgbGFuZ3VhZ2UKICAgIGltcGxlbWVudG9y
        cyB0aGF0IG5lZWQgYSBtaW5pbWFsIHNldCBvZiBtZXRob2RzIHRvIGJvb3Rz
        dHJhcCBhIHdvcmtpbmcKICAgIHRlc3Qgc3VpdGUuIEZvciBleGFtcGxlLCB0
        aGVyZSBpcyBubyBtYWdpYyBpbnZvbHZlZCBmb3IgdGVzdC1jYXNlCiAgICBk
        aXNjb3ZlcnkuCgogICAgICAgICJBZ2FpbiwgSSBjYW4ndCBwcmFpc2UgZW5v
        dWdoIHRoZSBpZGVhIG9mIGEgdGVzdGluZy9zcGVjaW5nCiAgICAgICAgIGZy
        YW1ld29yayB0aGF0IEkgY2FuIGFjdHVhbGx5IHJlYWQgaW4gZnVsbCBpbiBv
        bmUgc2l0dGluZyEiCgogICAgICAgIC0tIFBpb3RyIFN6b3Rrb3dza2kKCiAg
        ICBDb21wYXJpbmcgdG8gcnNwZWM6CgogICAgICAgIHJzcGVjIGlzIGEgdGVz
        dGluZyBEU0wuIG1pbml0ZXN0IGlzIHJ1YnkuCgogICAgICAgIC0tIEFkYW0g
        SGF3a2lucywgIkJvdyBCZWZvcmUgTWluaVRlc3QiCgogICAgbWluaXRlc3Qg
        ZG9lc24ndCByZWludmVudCBhbnl0aGluZyB0aGF0IHJ1YnkgYWxyZWFkeSBw
        cm92aWRlcywgbGlrZToKICAgIGNsYXNzZXMsIG1vZHVsZXMsIGluaGVyaXRh
        bmNlLCBtZXRob2RzLiBUaGlzIG1lYW5zIHlvdSBvbmx5IGhhdmUgdG8KICAg
        IGxlYXJuIHJ1YnkgdG8gdXNlIG1pbml0ZXN0IGFuZCBhbGwgb2YgeW91ciBy
        ZWd1bGFyIE9PIHByYWN0aWNlcyBsaWtlCiAgICBleHRyYWN0LW1ldGhvZCBy
        ZWZhY3RvcmluZ3Mgc3RpbGwgYXBwbHkuCiAgZG93bmxvYWRzX2NvdW50OiAx
        MDA2MTQ1CiAgbWV0YWRhdGE6IHt9CiAgbnVtYmVyOiA1LjYuMAogIHN1bW1h
        cnk6IG1pbml0ZXN0IHByb3ZpZGVzIGEgY29tcGxldGUgc3VpdGUgb2YgdGVz
        dGluZyBmYWNpbGl0aWVzIHN1cHBvcnRpbmcgVERELAogICAgQkRELCBtb2Nr
        aW5nLCBhbmQgYmVuY2htYXJraW5nCiAgcGxhdGZvcm06IHJ1YnkKICBydWJ5
        Z2Vtc192ZXJzaW9uOiAiPj0gMCIKICBydWJ5X3ZlcnNpb246ICI+PSAwIgog
        IHByZXJlbGVhc2U6IGZhbHNlCiAgbGljZW5zZXM6CiAgLSBNSVQKICByZXF1
        aXJlbWVudHM6IFtdCiAgc2hhOiAzYmEyY2NhMGRlZjc0MjllOTZlNDEwODhh
        MzBmZTljMGNkNDdjMGViYzE4NzNjYzFkYjYxNWIyYzQzNmVmZjEyCi0gYXV0
        aG9yczogUnlhbiBEYXZpcwogIGJ1aWx0X2F0OiAnMjAxNS0wMS0xMFQwMDow
        MDowMC4wMDBaJwogIGNyZWF0ZWRfYXQ6ICcyMDE1LTAxLTEwVDAwOjM1OjEx
        LjkwNlonCiAgZGVzY3JpcHRpb246IHwtCiAgICBtaW5pdGVzdCBwcm92aWRl
        cyBhIGNvbXBsZXRlIHN1aXRlIG9mIHRlc3RpbmcgZmFjaWxpdGllcyBzdXBw
        b3J0aW5nCiAgICBUREQsIEJERCwgbW9ja2luZywgYW5kIGJlbmNobWFya2lu
        Zy4KCiAgICAgICAgIkkgaGFkIGEgY2xhc3Mgd2l0aCBKaW0gV2VpcmljaCBv
        biB0ZXN0aW5nIGxhc3Qgd2VlayBhbmQgd2Ugd2VyZQogICAgICAgICBhbGxv
        d2VkIHRvIGNob29zZSBvdXIgdGVzdGluZyBmcmFtZXdvcmtzLiBLaXJrIEhh
        aW5lcyBhbmQgSSB3ZXJlCiAgICAgICAgIHBhaXJlZCB1cCBhbmQgd2UgY3Jh
        Y2tlZCBvcGVuIHRoZSBjb2RlIGZvciBhIGZldyB0ZXN0CiAgICAgICAgIGZy
        YW1ld29ya3MuLi4KCiAgICAgICAgIEkgTVVTVCBzYXkgdGhhdCBtaW5pdGVz
        dCBpcyAqdmVyeSogcmVhZGFibGUgLyB1bmRlcnN0YW5kYWJsZQogICAgICAg
        ICBjb21wYXJlZCB0byB0aGUgJ290aGVyIHR3bycgb3B0aW9ucyB3ZSBsb29r
        ZWQgYXQuIE5pY2VseSBkb25lIGFuZAogICAgICAgICB0aGFuayB5b3UgZm9y
        IGhlbHBpbmcgdXMga2VlcCBvdXIgbWVudGFsIHNhbml0eS4iCgogICAgICAg
        IC0tIFdheW5lIEUuIFNlZ3VpbgoKICAgIG1pbml0ZXN0L3VuaXQgaXMgYSBz
        bWFsbCBhbmQgaW5jcmVkaWJseSBmYXN0IHVuaXQgdGVzdGluZyBmcmFtZXdv
        cmsuCiAgICBJdCBwcm92aWRlcyBhIHJpY2ggc2V0IG9mIGFzc2VydGlvbnMg
        dG8gbWFrZSB5b3VyIHRlc3RzIGNsZWFuIGFuZAogICAgcmVhZGFibGUuCgog
        ICAgbWluaXRlc3Qvc3BlYyBpcyBhIGZ1bmN0aW9uYWxseSBjb21wbGV0ZSBz
        cGVjIGVuZ2luZS4gSXQgaG9va3Mgb250bwogICAgbWluaXRlc3QvdW5pdCBh
        bmQgc2VhbWxlc3NseSBicmlkZ2VzIHRlc3QgYXNzZXJ0aW9ucyBvdmVyIHRv
        IHNwZWMKICAgIGV4cGVjdGF0aW9ucy4KCiAgICBtaW5pdGVzdC9iZW5jaG1h
        cmsgaXMgYW4gYXdlc29tZSB3YXkgdG8gYXNzZXJ0IHRoZSBwZXJmb3JtYW5j
        ZSBvZiB5b3VyCiAgICBhbGdvcml0aG1zIGluIGEgcmVwZWF0YWJsZSBtYW5u
        ZXIuIE5vdyB5b3UgY2FuIGFzc2VydCB0aGF0IHlvdXIgbmV3YgogICAgY28t
        d29ya2VyIGRvZXNuJ3QgcmVwbGFjZSB5b3VyIGxpbmVhciBhbGdvcml0aG0g
        d2l0aCBhbiBleHBvbmVudGlhbAogICAgb25lIQoKICAgIG1pbml0ZXN0L21v
        Y2sgYnkgU3RldmVuIEJha2VyLCBpcyBhIGJlYXV0aWZ1bGx5IHRpbnkgbW9j
        ayAoYW5kIHN0dWIpCiAgICBvYmplY3QgZnJhbWV3b3JrLgoKICAgIG1pbml0
        ZXN0L3ByaWRlIHNob3dzIHByaWRlIGluIHRlc3RpbmcgYW5kIGFkZHMgY29s
        b3JpbmcgdG8geW91ciB0ZXN0CiAgICBvdXRwdXQuIEkgZ3Vlc3MgaXQgaXMg
        YW4gZXhhbXBsZSBvZiBob3cgdG8gd3JpdGUgSU8gcGlwZXMgdG9vLiA6UAoK
        ICAgIG1pbml0ZXN0L3VuaXQgaXMgbWVhbnQgdG8gaGF2ZSBhIGNsZWFuIGlt
        cGxlbWVudGF0aW9uIGZvciBsYW5ndWFnZQogICAgaW1wbGVtZW50b3JzIHRo
        YXQgbmVlZCBhIG1pbmltYWwgc2V0IG9mIG1ldGhvZHMgdG8gYm9vdHN0cmFw
        IGEgd29ya2luZwogICAgdGVzdCBzdWl0ZS4gRm9yIGV4YW1wbGUsIHRoZXJl
        IGlzIG5vIG1hZ2ljIGludm9sdmVkIGZvciB0ZXN0LWNhc2UKICAgIGRpc2Nv
        dmVyeS4KCiAgICAgICAgIkFnYWluLCBJIGNhbid0IHByYWlzZSBlbm91Z2gg
        dGhlIGlkZWEgb2YgYSB0ZXN0aW5nL3NwZWNpbmcKICAgICAgICAgZnJhbWV3
        b3JrIHRoYXQgSSBjYW4gYWN0dWFsbHkgcmVhZCBpbiBmdWxsIGluIG9uZSBz
        aXR0aW5nISIKCiAgICAgICAgLS0gUGlvdHIgU3pvdGtvd3NraQoKICAgIENv
        bXBhcmluZyB0byByc3BlYzoKCiAgICAgICAgcnNwZWMgaXMgYSB0ZXN0aW5n
        IERTTC4gbWluaXRlc3QgaXMgcnVieS4KCiAgICAgICAgLS0gQWRhbSBIYXdr
        aW5zLCAiQm93IEJlZm9yZSBNaW5pVGVzdCIKCiAgICBtaW5pdGVzdCBkb2Vz
        bid0IHJlaW52ZW50IGFueXRoaW5nIHRoYXQgcnVieSBhbHJlYWR5IHByb3Zp
        ZGVzLCBsaWtlOgogICAgY2xhc3NlcywgbW9kdWxlcywgaW5oZXJpdGFuY2Us
        IG1ldGhvZHMuIFRoaXMgbWVhbnMgeW91IG9ubHkgaGF2ZSB0bwogICAgbGVh
        cm4gcnVieSB0byB1c2UgbWluaXRlc3QgYW5kIGFsbCBvZiB5b3VyIHJlZ3Vs
        YXIgT08gcHJhY3RpY2VzIGxpa2UKICAgIGV4dHJhY3QtbWV0aG9kIHJlZmFj
        dG9yaW5ncyBzdGlsbCBhcHBseS4KICBkb3dubG9hZHNfY291bnQ6IDEzODA1
        ODM4CiAgbWV0YWRhdGE6IHt9CiAgbnVtYmVyOiA1LjUuMQogIHN1bW1hcnk6
        IG1pbml0ZXN0IHByb3ZpZGVzIGEgY29tcGxldGUgc3VpdGUgb2YgdGVzdGlu
        ZyBmYWNpbGl0aWVzIHN1cHBvcnRpbmcgVERELAogICAgQkRELCBtb2NraW5n
        LCBhbmQgYmVuY2htYXJraW5nCiAgcGxhdGZvcm06IHJ1YnkKICBydWJ5Z2Vt
        c192ZXJzaW9uOiAiPj0gMCIKICBydWJ5X3ZlcnNpb246ICI+PSAwIgogIHBy
        ZXJlbGVhc2U6IGZhbHNlCiAgbGljZW5zZXM6CiAgLSBNSVQKICByZXF1aXJl
        bWVudHM6IFtdCiAgc2hhOiBkNjNiMzEzNmNjNDgyOTVhMWU4MGI2YTNmYjM2
        MzhjMzAyNGU2MzJjZTUzMTA3YWQzY2MzZjNmYTMyYjAxMmMxCi0gYXV0aG9y
        czogUnlhbiBEYXZpcwogIGJ1aWx0X2F0OiAnMjAxNC0xMi0xMlQwMDowMDow
        MC4wMDBaJwogIGNyZWF0ZWRfYXQ6ICcyMDE0LTEyLTEyVDIzOjE5OjM1Ljk1
        N1onCiAgZGVzY3JpcHRpb246IHwtCiAgICBtaW5pdGVzdCBwcm92aWRlcyBh
        IGNvbXBsZXRlIHN1aXRlIG9mIHRlc3RpbmcgZmFjaWxpdGllcyBzdXBwb3J0
        aW5nCiAgICBUREQsIEJERCwgbW9ja2luZywgYW5kIGJlbmNobWFya2luZy4K
        CiAgICAgICAgIkkgaGFkIGEgY2xhc3Mgd2l0aCBKaW0gV2VpcmljaCBvbiB0
        ZXN0aW5nIGxhc3Qgd2VlayBhbmQgd2Ugd2VyZQogICAgICAgICBhbGxvd2Vk
        IHRvIGNob29zZSBvdXIgdGVzdGluZyBmcmFtZXdvcmtzLiBLaXJrIEhhaW5l
        cyBhbmQgSSB3ZXJlCiAgICAgICAgIHBhaXJlZCB1cCBhbmQgd2UgY3JhY2tl
        ZCBvcGVuIHRoZSBjb2RlIGZvciBhIGZldyB0ZXN0CiAgICAgICAgIGZyYW1l
        d29ya3MuLi4KCiAgICAgICAgIEkgTVVTVCBzYXkgdGhhdCBtaW5pdGVzdCBp
        cyAqdmVyeSogcmVhZGFibGUgLyB1bmRlcnN0YW5kYWJsZQogICAgICAgICBj
        b21wYXJlZCB0byB0aGUgJ290aGVyIHR3bycgb3B0aW9ucyB3ZSBsb29rZWQg
        YXQuIE5pY2VseSBkb25lIGFuZAogICAgICAgICB0aGFuayB5b3UgZm9yIGhl
        bHBpbmcgdXMga2VlcCBvdXIgbWVudGFsIHNhbml0eS4iCgogICAgICAgIC0t
        IFdheW5lIEUuIFNlZ3VpbgoKICAgIG1pbml0ZXN0L3VuaXQgaXMgYSBzbWFs
        bCBhbmQgaW5jcmVkaWJseSBmYXN0IHVuaXQgdGVzdGluZyBmcmFtZXdvcmsu
        CiAgICBJdCBwcm92aWRlcyBhIHJpY2ggc2V0IG9mIGFzc2VydGlvbnMgdG8g
        bWFrZSB5b3VyIHRlc3RzIGNsZWFuIGFuZAogICAgcmVhZGFibGUuCgogICAg
        bWluaXRlc3Qvc3BlYyBpcyBhIGZ1bmN0aW9uYWxseSBjb21wbGV0ZSBzcGVj
        IGVuZ2luZS4gSXQgaG9va3Mgb250bwogICAgbWluaXRlc3QvdW5pdCBhbmQg
        c2VhbWxlc3NseSBicmlkZ2VzIHRlc3QgYXNzZXJ0aW9ucyBvdmVyIHRvIHNw
        ZWMKICAgIGV4cGVjdGF0aW9ucy4KCiAgICBtaW5pdGVzdC9iZW5jaG1hcmsg
        aXMgYW4gYXdlc29tZSB3YXkgdG8gYXNzZXJ0IHRoZSBwZXJmb3JtYW5jZSBv
        ZiB5b3VyCiAgICBhbGdvcml0aG1zIGluIGEgcmVwZWF0YWJsZSBtYW5uZXIu
        IE5vdyB5b3UgY2FuIGFzc2VydCB0aGF0IHlvdXIgbmV3YgogICAgY28td29y
        a2VyIGRvZXNuJ3QgcmVwbGFjZSB5b3VyIGxpbmVhciBhbGdvcml0aG0gd2l0
        aCBhbiBleHBvbmVudGlhbAogICAgb25lIQoKICAgIG1pbml0ZXN0L21vY2sg
        YnkgU3RldmVuIEJha2VyLCBpcyBhIGJlYXV0aWZ1bGx5IHRpbnkgbW9jayAo
        YW5kIHN0dWIpCiAgICBvYmplY3QgZnJhbWV3b3JrLgoKICAgIG1pbml0ZXN0
        L3ByaWRlIHNob3dzIHByaWRlIGluIHRlc3RpbmcgYW5kIGFkZHMgY29sb3Jp
        bmcgdG8geW91ciB0ZXN0CiAgICBvdXRwdXQuIEkgZ3Vlc3MgaXQgaXMgYW4g
        ZXhhbXBsZSBvZiBob3cgdG8gd3JpdGUgSU8gcGlwZXMgdG9vLiA6UAoKICAg
        IG1pbml0ZXN0L3VuaXQgaXMgbWVhbnQgdG8gaGF2ZSBhIGNsZWFuIGltcGxl
        bWVudGF0aW9uIGZvciBsYW5ndWFnZQogICAgaW1wbGVtZW50b3JzIHRoYXQg
        bmVlZCBhIG1pbmltYWwgc2V0IG9mIG1ldGhvZHMgdG8gYm9vdHN0cmFwIGEg
        d29ya2luZwogICAgdGVzdCBzdWl0ZS4gRm9yIGV4YW1wbGUsIHRoZXJlIGlz
        IG5vIG1hZ2ljIGludm9sdmVkIGZvciB0ZXN0LWNhc2UKICAgIGRpc2NvdmVy
        eS4KCiAgICAgICAgIkFnYWluLCBJIGNhbid0IHByYWlzZSBlbm91Z2ggdGhl
        IGlkZWEgb2YgYSB0ZXN0aW5nL3NwZWNpbmcKICAgICAgICAgZnJhbWV3b3Jr
        IHRoYXQgSSBjYW4gYWN0dWFsbHkgcmVhZCBpbiBmdWxsIGluIG9uZSBzaXR0
        aW5nISIKCiAgICAgICAgLS0gUGlvdHIgU3pvdGtvd3NraQoKICAgIENvbXBh
        cmluZyB0byByc3BlYzoKCiAgICAgICAgcnNwZWMgaXMgYSB0ZXN0aW5nIERT
        TC4gbWluaXRlc3QgaXMgcnVieS4KCiAgICAgICAgLS0gQWRhbSBIYXdraW5z
        LCAiQm93IEJlZm9yZSBNaW5pVGVzdCIKCiAgICBtaW5pdGVzdCBkb2Vzbid0
        IHJlaW52ZW50IGFueXRoaW5nIHRoYXQgcnVieSBhbHJlYWR5IHByb3ZpZGVz
        LCBsaWtlOgogICAgY2xhc3NlcywgbW9kdWxlcywgaW5oZXJpdGFuY2UsIG1l
        dGhvZHMuIFRoaXMgbWVhbnMgeW91IG9ubHkgaGF2ZSB0bwogICAgbGVhcm4g
        cnVieSB0byB1c2UgbWluaXRlc3QgYW5kIGFsbCBvZiB5b3VyIHJlZ3VsYXIg
        T08gcHJhY3RpY2VzIGxpa2UKICAgIGV4dHJhY3QtbWV0aG9kIHJlZmFjdG9y
        aW5ncyBzdGlsbCBhcHBseS4KICBkb3dubG9hZHNfY291bnQ6IDExNzEwOTQK
        ICBtZXRhZGF0YToge30KICBudW1iZXI6IDUuNS4wCiAgc3VtbWFyeTogbWlu
        aXRlc3QgcHJvdmlkZXMgYSBjb21wbGV0ZSBzdWl0ZSBvZiB0ZXN0aW5nIGZh
        Y2lsaXRpZXMgc3VwcG9ydGluZyBUREQsCiAgICBCREQsIG1vY2tpbmcsIGFu
        ZCBiZW5jaG1hcmtpbmcKICBwbGF0Zm9ybTogcnVieQogIHJ1YnlnZW1zX3Zl
        cnNpb246ICI+PSAwIgogIHJ1YnlfdmVyc2lvbjogIj49IDAiCiAgcHJlcmVs
        ZWFzZTogZmFsc2UKICBsaWNlbnNlczoKICAtIE1JVAogIHJlcXVpcmVtZW50
        czogW10KICBzaGE6IDAyNzdjMDc3MzgzMDNiNzE4NDQxMGE1NjFjYWZiMDI1
        MmM2NmNiMjhmMzc4NGVhMTdlNTY0MDg3NjgxMWY4Y2YKLSBhdXRob3JzOiBS
        eWFuIERhdmlzCiAgYnVpbHRfYXQ6ICcyMDE0LTExLTExVDAwOjAwOjAwLjAw
        MFonCiAgY3JlYXRlZF9hdDogJzIwMTQtMTEtMTFUMjM6NDQ6MzIuNjY1WicK
        ICBkZXNjcmlwdGlvbjogfC0KICAgIG1pbml0ZXN0IHByb3ZpZGVzIGEgY29t
        cGxldGUgc3VpdGUgb2YgdGVzdGluZyBmYWNpbGl0aWVzIHN1cHBvcnRpbmcK
        ICAgIFRERCwgQkRELCBtb2NraW5nLCBhbmQgYmVuY2htYXJraW5nLgoKICAg
        ICAgICAiSSBoYWQgYSBjbGFzcyB3aXRoIEppbSBXZWlyaWNoIG9uIHRlc3Rp
        bmcgbGFzdCB3ZWVrIGFuZCB3ZSB3ZXJlCiAgICAgICAgIGFsbG93ZWQgdG8g
        Y2hvb3NlIG91ciB0ZXN0aW5nIGZyYW1ld29ya3MuIEtpcmsgSGFpbmVzIGFu
        ZCBJIHdlcmUKICAgICAgICAgcGFpcmVkIHVwIGFuZCB3ZSBjcmFja2VkIG9w
        ZW4gdGhlIGNvZGUgZm9yIGEgZmV3IHRlc3QKICAgICAgICAgZnJhbWV3b3Jr
        cy4uLgoKICAgICAgICAgSSBNVVNUIHNheSB0aGF0IG1pbml0ZXN0IGlzICp2
        ZXJ5KiByZWFkYWJsZSAvIHVuZGVyc3RhbmRhYmxlCiAgICAgICAgIGNvbXBh
        cmVkIHRvIHRoZSAnb3RoZXIgdHdvJyBvcHRpb25zIHdlIGxvb2tlZCBhdC4g
        TmljZWx5IGRvbmUgYW5kCiAgICAgICAgIHRoYW5rIHlvdSBmb3IgaGVscGlu
        ZyB1cyBrZWVwIG91ciBtZW50YWwgc2FuaXR5LiIKCiAgICAgICAgLS0gV2F5
        bmUgRS4gU2VndWluCgogICAgbWluaXRlc3QvdW5pdCBpcyBhIHNtYWxsIGFu
        ZCBpbmNyZWRpYmx5IGZhc3QgdW5pdCB0ZXN0aW5nIGZyYW1ld29yay4KICAg
        IEl0IHByb3ZpZGVzIGEgcmljaCBzZXQgb2YgYXNzZXJ0aW9ucyB0byBtYWtl
        IHlvdXIgdGVzdHMgY2xlYW4gYW5kCiAgICByZWFkYWJsZS4KCiAgICBtaW5p
        dGVzdC9zcGVjIGlzIGEgZnVuY3Rpb25hbGx5IGNvbXBsZXRlIHNwZWMgZW5n
        aW5lLiBJdCBob29rcyBvbnRvCiAgICBtaW5pdGVzdC91bml0IGFuZCBzZWFt
        bGVzc2x5IGJyaWRnZXMgdGVzdCBhc3NlcnRpb25zIG92ZXIgdG8gc3BlYwog
        ICAgZXhwZWN0YXRpb25zLgoKICAgIG1pbml0ZXN0L2JlbmNobWFyayBpcyBh
        biBhd2Vzb21lIHdheSB0byBhc3NlcnQgdGhlIHBlcmZvcm1hbmNlIG9mIHlv
        dXIKICAgIGFsZ29yaXRobXMgaW4gYSByZXBlYXRhYmxlIG1hbm5lci4gTm93
        IHlvdSBjYW4gYXNzZXJ0IHRoYXQgeW91ciBuZXdiCiAgICBjby13b3JrZXIg
        ZG9lc24ndCByZXBsYWNlIHlvdXIgbGluZWFyIGFsZ29yaXRobSB3aXRoIGFu
        IGV4cG9uZW50aWFsCiAgICBvbmUhCgogICAgbWluaXRlc3QvbW9jayBieSBT
        dGV2ZW4gQmFrZXIsIGlzIGEgYmVhdXRpZnVsbHkgdGlueSBtb2NrIChhbmQg
        c3R1YikKICAgIG9iamVjdCBmcmFtZXdvcmsuCgogICAgbWluaXRlc3QvcHJp
        ZGUgc2hvd3MgcHJpZGUgaW4gdGVzdGluZyBhbmQgYWRkcyBjb2xvcmluZyB0
        byB5b3VyIHRlc3QKICAgIG91dHB1dC4gSSBndWVzcyBpdCBpcyBhbiBleGFt
        cGxlIG9mIGhvdyB0byB3cml0ZSBJTyBwaXBlcyB0b28uIDpQCgogICAgbWlu
        aXRlc3QvdW5pdCBpcyBtZWFudCB0byBoYXZlIGEgY2xlYW4gaW1wbGVtZW50
        YXRpb24gZm9yIGxhbmd1YWdlCiAgICBpbXBsZW1lbnRvcnMgdGhhdCBuZWVk
        IGEgbWluaW1hbCBzZXQgb2YgbWV0aG9kcyB0byBib290c3RyYXAgYSB3b3Jr
        aW5nCiAgICB0ZXN0IHN1aXRlLiBGb3IgZXhhbXBsZSwgdGhlcmUgaXMgbm8g
        bWFnaWMgaW52b2x2ZWQgZm9yIHRlc3QtY2FzZQogICAgZGlzY292ZXJ5LgoK
        ICAgICAgICAiQWdhaW4sIEkgY2FuJ3QgcHJhaXNlIGVub3VnaCB0aGUgaWRl
        YSBvZiBhIHRlc3Rpbmcvc3BlY2luZwogICAgICAgICBmcmFtZXdvcmsgdGhh
        dCBJIGNhbiBhY3R1YWxseSByZWFkIGluIGZ1bGwgaW4gb25lIHNpdHRpbmch
        IgoKICAgICAgICAtLSBQaW90ciBTem90a293c2tpCgogICAgQ29tcGFyaW5n
        IHRvIHJzcGVjOgoKICAgICAgICByc3BlYyBpcyBhIHRlc3RpbmcgRFNMLiBt
        aW5pdGVzdCBpcyBydWJ5LgoKICAgICAgICAtLSBBZGFtIEhhd2tpbnMsICJC
        b3cgQmVmb3JlIE1pbmlUZXN0IgoKICAgIG1pbml0ZXN0IGRvZXNuJ3QgcmVp
        bnZlbnQgYW55dGhpbmcgdGhhdCBydWJ5IGFscmVhZHkgcHJvdmlkZXMsIGxp
        a2U6CiAgICBjbGFzc2VzLCBtb2R1bGVzLCBpbmhlcml0YW5jZSwgbWV0aG9k
        cy4gVGhpcyBtZWFucyB5b3Ugb25seSBoYXZlIHRvCiAgICBsZWFybiBydWJ5
        IHRvIHVzZSBtaW5pdGVzdCBhbmQgYWxsIG9mIHlvdXIgcmVndWxhciBPTyBw
        cmFjdGljZXMgbGlrZQogICAgZXh0cmFjdC1tZXRob2QgcmVmYWN0b3Jpbmdz
        IHN0aWxsIGFwcGx5LgogIGRvd25sb2Fkc19jb3VudDogMTQzNjAyOAogIG1l
        dGFkYXRhOiB7fQogIG51bWJlcjogNS40LjMKICBzdW1tYXJ5OiBtaW5pdGVz
        dCBwcm92aWRlcyBhIGNvbXBsZXRlIHN1aXRlIG9mIHRlc3RpbmcgZmFjaWxp
        dGllcyBzdXBwb3J0aW5nIFRERCwKICAgIEJERCwgbW9ja2luZywgYW5kIGJl
        bmNobWFya2luZwogIHBsYXRmb3JtOiBydWJ5CiAgcnVieWdlbXNfdmVyc2lv
        bjogIj49IDAiCiAgcnVieV92ZXJzaW9uOiAiPj0gMCIKICBwcmVyZWxlYXNl
        OiBmYWxzZQogIGxpY2Vuc2VzOgogIC0gTUlUCiAgcmVxdWlyZW1lbnRzOiBb
        XQogIHNoYTogYTQxYjU0YjFjNmU2NGIxMDJmZTc4YmYyNjUwNDU4OTY4NDVj
        MzgxNzdhMTBiZGIzMmQwNGNhZjRlMDY1NDJmMwotIGF1dGhvcnM6IFJ5YW4g
        RGF2aXMKICBidWlsdF9hdDogJzIwMTQtMDktMjZUMDA6MDA6MDAuMDAwWicK
        ICBjcmVhdGVkX2F0OiAnMjAxNC0wOS0yNlQyMzo0OTo1Mi43MzhaJwogIGRl
        c2NyaXB0aW9uOiB8LQogICAgbWluaXRlc3QgcHJvdmlkZXMgYSBjb21wbGV0
        ZSBzdWl0ZSBvZiB0ZXN0aW5nIGZhY2lsaXRpZXMgc3VwcG9ydGluZwogICAg
        VERELCBCREQsIG1vY2tpbmcsIGFuZCBiZW5jaG1hcmtpbmcuCgogICAgICAg
        ICJJIGhhZCBhIGNsYXNzIHdpdGggSmltIFdlaXJpY2ggb24gdGVzdGluZyBs
        YXN0IHdlZWsgYW5kIHdlIHdlcmUKICAgICAgICAgYWxsb3dlZCB0byBjaG9v
        c2Ugb3VyIHRlc3RpbmcgZnJhbWV3b3Jrcy4gS2lyayBIYWluZXMgYW5kIEkg
        d2VyZQogICAgICAgICBwYWlyZWQgdXAgYW5kIHdlIGNyYWNrZWQgb3BlbiB0
        aGUgY29kZSBmb3IgYSBmZXcgdGVzdAogICAgICAgICBmcmFtZXdvcmtzLi4u
        CgogICAgICAgICBJIE1VU1Qgc2F5IHRoYXQgbWluaXRlc3QgaXMgKnZlcnkq
        IHJlYWRhYmxlIC8gdW5kZXJzdGFuZGFibGUKICAgICAgICAgY29tcGFyZWQg
        dG8gdGhlICdvdGhlciB0d28nIG9wdGlvbnMgd2UgbG9va2VkIGF0LiBOaWNl
        bHkgZG9uZSBhbmQKICAgICAgICAgdGhhbmsgeW91IGZvciBoZWxwaW5nIHVz
        IGtlZXAgb3VyIG1lbnRhbCBzYW5pdHkuIgoKICAgICAgICAtLSBXYXluZSBF
        LiBTZWd1aW4KCiAgICBtaW5pdGVzdC91bml0IGlzIGEgc21hbGwgYW5kIGlu
        Y3JlZGlibHkgZmFzdCB1bml0IHRlc3RpbmcgZnJhbWV3b3JrLgogICAgSXQg
        cHJvdmlkZXMgYSByaWNoIHNldCBvZiBhc3NlcnRpb25zIHRvIG1ha2UgeW91
        ciB0ZXN0cyBjbGVhbiBhbmQKICAgIHJlYWRhYmxlLgoKICAgIG1pbml0ZXN0
        L3NwZWMgaXMgYSBmdW5jdGlvbmFsbHkgY29tcGxldGUgc3BlYyBlbmdpbmUu
        IEl0IGhvb2tzIG9udG8KICAgIG1pbml0ZXN0L3VuaXQgYW5kIHNlYW1sZXNz
        bHkgYnJpZGdlcyB0ZXN0IGFzc2VydGlvbnMgb3ZlciB0byBzcGVjCiAgICBl
        eHBlY3RhdGlvbnMuCgogICAgbWluaXRlc3QvYmVuY2htYXJrIGlzIGFuIGF3
        ZXNvbWUgd2F5IHRvIGFzc2VydCB0aGUgcGVyZm9ybWFuY2Ugb2YgeW91cgog
        ICAgYWxnb3JpdGhtcyBpbiBhIHJlcGVhdGFibGUgbWFubmVyLiBOb3cgeW91
        IGNhbiBhc3NlcnQgdGhhdCB5b3VyIG5ld2IKICAgIGNvLXdvcmtlciBkb2Vz
        bid0IHJlcGxhY2UgeW91ciBsaW5lYXIgYWxnb3JpdGhtIHdpdGggYW4gZXhw
        b25lbnRpYWwKICAgIG9uZSEKCiAgICBtaW5pdGVzdC9tb2NrIGJ5IFN0ZXZl
        biBCYWtlciwgaXMgYSBiZWF1dGlmdWxseSB0aW55IG1vY2sgKGFuZCBzdHVi
        KQogICAgb2JqZWN0IGZyYW1ld29yay4KCiAgICBtaW5pdGVzdC9wcmlkZSBz
        aG93cyBwcmlkZSBpbiB0ZXN0aW5nIGFuZCBhZGRzIGNvbG9yaW5nIHRvIHlv
        dXIgdGVzdAogICAgb3V0cHV0LiBJIGd1ZXNzIGl0IGlzIGFuIGV4YW1wbGUg
        b2YgaG93IHRvIHdyaXRlIElPIHBpcGVzIHRvby4gOlAKCiAgICBtaW5pdGVz
        dC91bml0IGlzIG1lYW50IHRvIGhhdmUgYSBjbGVhbiBpbXBsZW1lbnRhdGlv
        biBmb3IgbGFuZ3VhZ2UKICAgIGltcGxlbWVudG9ycyB0aGF0IG5lZWQgYSBt
        aW5pbWFsIHNldCBvZiBtZXRob2RzIHRvIGJvb3RzdHJhcCBhIHdvcmtpbmcK
        ICAgIHRlc3Qgc3VpdGUuIEZvciBleGFtcGxlLCB0aGVyZSBpcyBubyBtYWdp
        YyBpbnZvbHZlZCBmb3IgdGVzdC1jYXNlCiAgICBkaXNjb3ZlcnkuCgogICAg
        ICAgICJBZ2FpbiwgSSBjYW4ndCBwcmFpc2UgZW5vdWdoIHRoZSBpZGVhIG9m
        IGEgdGVzdGluZy9zcGVjaW5nCiAgICAgICAgIGZyYW1ld29yayB0aGF0IEkg
        Y2FuIGFjdHVhbGx5IHJlYWQgaW4gZnVsbCBpbiBvbmUgc2l0dGluZyEiCgog
        ICAgICAgIC0tIFBpb3RyIFN6b3Rrb3dza2kKCiAgICBDb21wYXJpbmcgdG8g
        cnNwZWM6CgogICAgICAgIHJzcGVjIGlzIGEgdGVzdGluZyBEU0wuIG1pbml0
        ZXN0IGlzIHJ1YnkuCgogICAgICAgIC0tIEFkYW0gSGF3a2lucywgIkJvdyBC
        ZWZvcmUgTWluaVRlc3QiCgogICAgbWluaXRlc3QgZG9lc24ndCByZWludmVu
        dCBhbnl0aGluZyB0aGF0IHJ1YnkgYWxyZWFkeSBwcm92aWRlcywgbGlrZToK
        ICAgIGNsYXNzZXMsIG1vZHVsZXMsIGluaGVyaXRhbmNlLCBtZXRob2RzLiBU
        aGlzIG1lYW5zIHlvdSBvbmx5IGhhdmUgdG8KICAgIGxlYXJuIHJ1YnkgdG8g
        dXNlIG1pbml0ZXN0IGFuZCBhbGwgb2YgeW91ciByZWd1bGFyIE9PIHByYWN0
        aWNlcyBsaWtlCiAgICBleHRyYWN0LW1ldGhvZCByZWZhY3RvcmluZ3Mgc3Rp
        bGwgYXBwbHkuCiAgZG93bmxvYWRzX2NvdW50OiAxNTYwNDAzCiAgbWV0YWRh
        dGE6IHt9CiAgbnVtYmVyOiA1LjQuMgogIHN1bW1hcnk6IG1pbml0ZXN0IHBy
        b3ZpZGVzIGEgY29tcGxldGUgc3VpdGUgb2YgdGVzdGluZyBmYWNpbGl0aWVz
        IHN1cHBvcnRpbmcgVERELAogICAgQkRELCBtb2NraW5nLCBhbmQgYmVuY2ht
        YXJraW5nCiAgcGxhdGZvcm06IHJ1YnkKICBydWJ5Z2Vtc192ZXJzaW9uOiAi
        Pj0gMCIKICBydWJ5X3ZlcnNpb246ICI+PSAwIgogIHByZXJlbGVhc2U6IGZh
        bHNlCiAgbGljZW5zZXM6CiAgLSBNSVQKICByZXF1aXJlbWVudHM6IFtdCiAg
        c2hhOiA2Y2U4YjNiZmM5ODRlZTkyN2Q4YTJjNDU1NjdkZGNmMWQyOGRlZmU3
        N2FkYjVmMjFhYjcyZGVkOTM0NTMwNWQwCi0gYXV0aG9yczogUnlhbiBEYXZp
        cwogIGJ1aWx0X2F0OiAnMjAxNC0wOC0yOFQwMDowMDowMC4wMDBaJwogIGNy
        ZWF0ZWRfYXQ6ICcyMDE0LTA4LTI4VDIyOjMzOjQ3LjE1OVonCiAgZGVzY3Jp
        cHRpb246IHwtCiAgICBtaW5pdGVzdCBwcm92aWRlcyBhIGNvbXBsZXRlIHN1
        aXRlIG9mIHRlc3RpbmcgZmFjaWxpdGllcyBzdXBwb3J0aW5nCiAgICBUREQs
        IEJERCwgbW9ja2luZywgYW5kIGJlbmNobWFya2luZy4KCiAgICAgICAgIkkg
        aGFkIGEgY2xhc3Mgd2l0aCBKaW0gV2VpcmljaCBvbiB0ZXN0aW5nIGxhc3Qg
        d2VlayBhbmQgd2Ugd2VyZQogICAgICAgICBhbGxvd2VkIHRvIGNob29zZSBv
        dXIgdGVzdGluZyBmcmFtZXdvcmtzLiBLaXJrIEhhaW5lcyBhbmQgSSB3ZXJl
        CiAgICAgICAgIHBhaXJlZCB1cCBhbmQgd2UgY3JhY2tlZCBvcGVuIHRoZSBj
        b2RlIGZvciBhIGZldyB0ZXN0CiAgICAgICAgIGZyYW1ld29ya3MuLi4KCiAg
        ICAgICAgIEkgTVVTVCBzYXkgdGhhdCBtaW5pdGVzdCBpcyAqdmVyeSogcmVh
        ZGFibGUgLyB1bmRlcnN0YW5kYWJsZQogICAgICAgICBjb21wYXJlZCB0byB0
        aGUgJ290aGVyIHR3bycgb3B0aW9ucyB3ZSBsb29rZWQgYXQuIE5pY2VseSBk
        b25lIGFuZAogICAgICAgICB0aGFuayB5b3UgZm9yIGhlbHBpbmcgdXMga2Vl
        cCBvdXIgbWVudGFsIHNhbml0eS4iCgogICAgICAgIC0tIFdheW5lIEUuIFNl
        Z3VpbgoKICAgIG1pbml0ZXN0L3VuaXQgaXMgYSBzbWFsbCBhbmQgaW5jcmVk
        aWJseSBmYXN0IHVuaXQgdGVzdGluZyBmcmFtZXdvcmsuCiAgICBJdCBwcm92
        aWRlcyBhIHJpY2ggc2V0IG9mIGFzc2VydGlvbnMgdG8gbWFrZSB5b3VyIHRl
        c3RzIGNsZWFuIGFuZAogICAgcmVhZGFibGUuCgogICAgbWluaXRlc3Qvc3Bl
        YyBpcyBhIGZ1bmN0aW9uYWxseSBjb21wbGV0ZSBzcGVjIGVuZ2luZS4gSXQg
        aG9va3Mgb250bwogICAgbWluaXRlc3QvdW5pdCBhbmQgc2VhbWxlc3NseSBi
        cmlkZ2VzIHRlc3QgYXNzZXJ0aW9ucyBvdmVyIHRvIHNwZWMKICAgIGV4cGVj
        dGF0aW9ucy4KCiAgICBtaW5pdGVzdC9iZW5jaG1hcmsgaXMgYW4gYXdlc29t
        ZSB3YXkgdG8gYXNzZXJ0IHRoZSBwZXJmb3JtYW5jZSBvZiB5b3VyCiAgICBh
        bGdvcml0aG1zIGluIGEgcmVwZWF0YWJsZSBtYW5uZXIuIE5vdyB5b3UgY2Fu
        IGFzc2VydCB0aGF0IHlvdXIgbmV3YgogICAgY28td29ya2VyIGRvZXNuJ3Qg
        cmVwbGFjZSB5b3VyIGxpbmVhciBhbGdvcml0aG0gd2l0aCBhbiBleHBvbmVu
        dGlhbAogICAgb25lIQoKICAgIG1pbml0ZXN0L21vY2sgYnkgU3RldmVuIEJh
        a2VyLCBpcyBhIGJlYXV0aWZ1bGx5IHRpbnkgbW9jayAoYW5kIHN0dWIpCiAg
        ICBvYmplY3QgZnJhbWV3b3JrLgoKICAgIG1pbml0ZXN0L3ByaWRlIHNob3dz
        IHByaWRlIGluIHRlc3RpbmcgYW5kIGFkZHMgY29sb3JpbmcgdG8geW91ciB0
        ZXN0CiAgICBvdXRwdXQuIEkgZ3Vlc3MgaXQgaXMgYW4gZXhhbXBsZSBvZiBo
        b3cgdG8gd3JpdGUgSU8gcGlwZXMgdG9vLiA6UAoKICAgIG1pbml0ZXN0L3Vu
        aXQgaXMgbWVhbnQgdG8gaGF2ZSBhIGNsZWFuIGltcGxlbWVudGF0aW9uIGZv
        ciBsYW5ndWFnZQogICAgaW1wbGVtZW50b3JzIHRoYXQgbmVlZCBhIG1pbmlt
        YWwgc2V0IG9mIG1ldGhvZHMgdG8gYm9vdHN0cmFwIGEgd29ya2luZwogICAg
        dGVzdCBzdWl0ZS4gRm9yIGV4YW1wbGUsIHRoZXJlIGlzIG5vIG1hZ2ljIGlu
        dm9sdmVkIGZvciB0ZXN0LWNhc2UKICAgIGRpc2NvdmVyeS4KCiAgICAgICAg
        IkFnYWluLCBJIGNhbid0IHByYWlzZSBlbm91Z2ggdGhlIGlkZWEgb2YgYSB0
        ZXN0aW5nL3NwZWNpbmcKICAgICAgICAgZnJhbWV3b3JrIHRoYXQgSSBjYW4g
        YWN0dWFsbHkgcmVhZCBpbiBmdWxsIGluIG9uZSBzaXR0aW5nISIKCiAgICAg
        ICAgLS0gUGlvdHIgU3pvdGtvd3NraQoKICAgIENvbXBhcmluZyB0byByc3Bl
        YzoKCiAgICAgICAgcnNwZWMgaXMgYSB0ZXN0aW5nIERTTC4gbWluaXRlc3Qg
        aXMgcnVieS4KCiAgICAgICAgLS0gQWRhbSBIYXdraW5zLCAiQm93IEJlZm9y
        ZSBNaW5pVGVzdCIKCiAgICBtaW5pdGVzdCBkb2Vzbid0IHJlaW52ZW50IGFu
        eXRoaW5nIHRoYXQgcnVieSBhbHJlYWR5IHByb3ZpZGVzLCBsaWtlOgogICAg
        Y2xhc3NlcywgbW9kdWxlcywgaW5oZXJpdGFuY2UsIG1ldGhvZHMuIFRoaXMg
        bWVhbnMgeW91IG9ubHkgaGF2ZSB0bwogICAgbGVhcm4gcnVieSB0byB1c2Ug
        bWluaXRlc3QgYW5kIGFsbCBvZiB5b3VyIHJlZ3VsYXIgT08gcHJhY3RpY2Vz
        IGxpa2UKICAgIGV4dHJhY3QtbWV0aG9kIHJlZmFjdG9yaW5ncyBzdGlsbCBh
        cHBseS4KICBkb3dubG9hZHNfY291bnQ6IDk1Njk3NwogIG1ldGFkYXRhOiB7
        fQogIG51bWJlcjogNS40LjEKICBzdW1tYXJ5OiBtaW5pdGVzdCBwcm92aWRl
        cyBhIGNvbXBsZXRlIHN1aXRlIG9mIHRlc3RpbmcgZmFjaWxpdGllcyBzdXBw
        b3J0aW5nIFRERCwKICAgIEJERCwgbW9ja2luZywgYW5kIGJlbmNobWFya2lu
        ZwogIHBsYXRmb3JtOiBydWJ5CiAgcnVieWdlbXNfdmVyc2lvbjogIj49IDAi
        CiAgcnVieV92ZXJzaW9uOiAiPj0gMCIKICBwcmVyZWxlYXNlOiBmYWxzZQog
        IGxpY2Vuc2VzOgogIC0gTUlUCiAgcmVxdWlyZW1lbnRzOiBbXQogIHNoYTog
        OTllODMyMjNjNjlhYzNiYjk4Y2IyZGMyYmY4NTdiNjgzOTcxOWNiNjFjZmU1
        YjNlZTFjZjZlYjQ4YmY4MzgxMgotIGF1dGhvcnM6IFJ5YW4gRGF2aXMKICBi
        dWlsdF9hdDogJzIwMTQtMDctMDdUMDA6MDA6MDAuMDAwWicKICBjcmVhdGVk
        X2F0OiAnMjAxNC0wNy0wN1QyMTozNzozOS44MzFaJwogIGRlc2NyaXB0aW9u
        OiB8LQogICAgbWluaXRlc3QgcHJvdmlkZXMgYSBjb21wbGV0ZSBzdWl0ZSBv
        ZiB0ZXN0aW5nIGZhY2lsaXRpZXMgc3VwcG9ydGluZwogICAgVERELCBCREQs
        IG1vY2tpbmcsIGFuZCBiZW5jaG1hcmtpbmcuCgogICAgICAgICJJIGhhZCBh
        IGNsYXNzIHdpdGggSmltIFdlaXJpY2ggb24gdGVzdGluZyBsYXN0IHdlZWsg
        YW5kIHdlIHdlcmUKICAgICAgICAgYWxsb3dlZCB0byBjaG9vc2Ugb3VyIHRl
        c3RpbmcgZnJhbWV3b3Jrcy4gS2lyayBIYWluZXMgYW5kIEkgd2VyZQogICAg
        ICAgICBwYWlyZWQgdXAgYW5kIHdlIGNyYWNrZWQgb3BlbiB0aGUgY29kZSBm
        b3IgYSBmZXcgdGVzdAogICAgICAgICBmcmFtZXdvcmtzLi4uCgogICAgICAg
        ICBJIE1VU1Qgc2F5IHRoYXQgbWluaXRlc3QgaXMgKnZlcnkqIHJlYWRhYmxl
        IC8gdW5kZXJzdGFuZGFibGUKICAgICAgICAgY29tcGFyZWQgdG8gdGhlICdv
        dGhlciB0d28nIG9wdGlvbnMgd2UgbG9va2VkIGF0LiBOaWNlbHkgZG9uZSBh
        bmQKICAgICAgICAgdGhhbmsgeW91IGZvciBoZWxwaW5nIHVzIGtlZXAgb3Vy
        IG1lbnRhbCBzYW5pdHkuIgoKICAgICAgICAtLSBXYXluZSBFLiBTZWd1aW4K
        CiAgICBtaW5pdGVzdC91bml0IGlzIGEgc21hbGwgYW5kIGluY3JlZGlibHkg
        ZmFzdCB1bml0IHRlc3RpbmcgZnJhbWV3b3JrLgogICAgSXQgcHJvdmlkZXMg
        YSByaWNoIHNldCBvZiBhc3NlcnRpb25zIHRvIG1ha2UgeW91ciB0ZXN0cyBj
        bGVhbiBhbmQKICAgIHJlYWRhYmxlLgoKICAgIG1pbml0ZXN0L3NwZWMgaXMg
        YSBmdW5jdGlvbmFsbHkgY29tcGxldGUgc3BlYyBlbmdpbmUuIEl0IGhvb2tz
        IG9udG8KICAgIG1pbml0ZXN0L3VuaXQgYW5kIHNlYW1sZXNzbHkgYnJpZGdl
        cyB0ZXN0IGFzc2VydGlvbnMgb3ZlciB0byBzcGVjCiAgICBleHBlY3RhdGlv
        bnMuCgogICAgbWluaXRlc3QvYmVuY2htYXJrIGlzIGFuIGF3ZXNvbWUgd2F5
        IHRvIGFzc2VydCB0aGUgcGVyZm9ybWFuY2Ugb2YgeW91cgogICAgYWxnb3Jp
        dGhtcyBpbiBhIHJlcGVhdGFibGUgbWFubmVyLiBOb3cgeW91IGNhbiBhc3Nl
        cnQgdGhhdCB5b3VyIG5ld2IKICAgIGNvLXdvcmtlciBkb2Vzbid0IHJlcGxh
        Y2UgeW91ciBsaW5lYXIgYWxnb3JpdGhtIHdpdGggYW4gZXhwb25lbnRpYWwK
        ICAgIG9uZSEKCiAgICBtaW5pdGVzdC9tb2NrIGJ5IFN0ZXZlbiBCYWtlciwg
        aXMgYSBiZWF1dGlmdWxseSB0aW55IG1vY2sgKGFuZCBzdHViKQogICAgb2Jq
        ZWN0IGZyYW1ld29yay4KCiAgICBtaW5pdGVzdC9wcmlkZSBzaG93cyBwcmlk
        ZSBpbiB0ZXN0aW5nIGFuZCBhZGRzIGNvbG9yaW5nIHRvIHlvdXIgdGVzdAog
        ICAgb3V0cHV0LiBJIGd1ZXNzIGl0IGlzIGFuIGV4YW1wbGUgb2YgaG93IHRv
        IHdyaXRlIElPIHBpcGVzIHRvby4gOlAKCiAgICBtaW5pdGVzdC91bml0IGlz
        IG1lYW50IHRvIGhhdmUgYSBjbGVhbiBpbXBsZW1lbnRhdGlvbiBmb3IgbGFu
        Z3VhZ2UKICAgIGltcGxlbWVudG9ycyB0aGF0IG5lZWQgYSBtaW5pbWFsIHNl
        dCBvZiBtZXRob2RzIHRvIGJvb3RzdHJhcCBhIHdvcmtpbmcKICAgIHRlc3Qg
        c3VpdGUuIEZvciBleGFtcGxlLCB0aGVyZSBpcyBubyBtYWdpYyBpbnZvbHZl
        ZCBmb3IgdGVzdC1jYXNlCiAgICBkaXNjb3ZlcnkuCgogICAgICAgICJBZ2Fp
        biwgSSBjYW4ndCBwcmFpc2UgZW5vdWdoIHRoZSBpZGVhIG9mIGEgdGVzdGlu
        Zy9zcGVjaW5nCiAgICAgICAgIGZyYW1ld29yayB0aGF0IEkgY2FuIGFjdHVh
        bGx5IHJlYWQgaW4gZnVsbCBpbiBvbmUgc2l0dGluZyEiCgogICAgICAgIC0t
        IFBpb3RyIFN6b3Rrb3dza2kKCiAgICBDb21wYXJpbmcgdG8gcnNwZWM6Cgog
        ICAgICAgIHJzcGVjIGlzIGEgdGVzdGluZyBEU0wuIG1pbml0ZXN0IGlzIHJ1
        YnkuCgogICAgICAgIC0tIEFkYW0gSGF3a2lucywgIkJvdyBCZWZvcmUgTWlu
        aVRlc3QiCgogICAgbWluaXRlc3QgZG9lc24ndCByZWludmVudCBhbnl0aGlu
        ZyB0aGF0IHJ1YnkgYWxyZWFkeSBwcm92aWRlcywgbGlrZToKICAgIGNsYXNz
        ZXMsIG1vZHVsZXMsIGluaGVyaXRhbmNlLCBtZXRob2RzLiBUaGlzIG1lYW5z
        IHlvdSBvbmx5IGhhdmUgdG8KICAgIGxlYXJuIHJ1YnkgdG8gdXNlIG1pbml0
        ZXN0IGFuZCBhbGwgb2YgeW91ciByZWd1bGFyIE9PIHByYWN0aWNlcyBsaWtl
        CiAgICBleHRyYWN0LW1ldGhvZCByZWZhY3RvcmluZ3Mgc3RpbGwgYXBwbHku
        CiAgZG93bmxvYWRzX2NvdW50OiAxMzg0NjA1CiAgbWV0YWRhdGE6IHt9CiAg
        bnVtYmVyOiA1LjQuMAogIHN1bW1hcnk6IG1pbml0ZXN0IHByb3ZpZGVzIGEg
        Y29tcGxldGUgc3VpdGUgb2YgdGVzdGluZyBmYWNpbGl0aWVzIHN1cHBvcnRp
        bmcgVERELAogICAgQkRELCBtb2NraW5nLCBhbmQgYmVuY2htYXJraW5nCiAg
        cGxhdGZvcm06IHJ1YnkKICBydWJ5Z2Vtc192ZXJzaW9uOiAiPj0gMCIKICBy
        dWJ5X3ZlcnNpb246ICI+PSAwIgogIHByZXJlbGVhc2U6IGZhbHNlCiAgbGlj
        ZW5zZXM6CiAgLSBNSVQKICByZXF1aXJlbWVudHM6IFtdCiAgc2hhOiAzNDkz
        ZTdiNWQzZDQ3MDY2ZjQyZTJjYjVmNzBiMjE3N2NhODJhYjMxOThmMDk3MjQ3
        Yjg4ZjJmMjMxNzU1ZDAwCi0gYXV0aG9yczogUnlhbiBEYXZpcwogIGJ1aWx0
        X2F0OiAnMjAxNC0wNi0xOFQwMDowMDowMC4wMDBaJwogIGNyZWF0ZWRfYXQ6
        ICcyMDE0LTA2LTE4VDAwOjA2OjE5Ljc5OFonCiAgZGVzY3JpcHRpb246IHwt
        CiAgICBtaW5pdGVzdCBwcm92aWRlcyBhIGNvbXBsZXRlIHN1aXRlIG9mIHRl
        c3RpbmcgZmFjaWxpdGllcyBzdXBwb3J0aW5nCiAgICBUREQsIEJERCwgbW9j
        a2luZywgYW5kIGJlbmNobWFya2luZy4KCiAgICAgICAgIkkgaGFkIGEgY2xh
        c3Mgd2l0aCBKaW0gV2VpcmljaCBvbiB0ZXN0aW5nIGxhc3Qgd2VlayBhbmQg
        d2Ugd2VyZQogICAgICAgICBhbGxvd2VkIHRvIGNob29zZSBvdXIgdGVzdGlu
        ZyBmcmFtZXdvcmtzLiBLaXJrIEhhaW5lcyBhbmQgSSB3ZXJlCiAgICAgICAg
        IHBhaXJlZCB1cCBhbmQgd2UgY3JhY2tlZCBvcGVuIHRoZSBjb2RlIGZvciBh
        IGZldyB0ZXN0CiAgICAgICAgIGZyYW1ld29ya3MuLi4KCiAgICAgICAgIEkg
        TVVTVCBzYXkgdGhhdCBtaW5pdGVzdCBpcyAqdmVyeSogcmVhZGFibGUgLyB1
        bmRlcnN0YW5kYWJsZQogICAgICAgICBjb21wYXJlZCB0byB0aGUgJ290aGVy
        IHR3bycgb3B0aW9ucyB3ZSBsb29rZWQgYXQuIE5pY2VseSBkb25lIGFuZAog
        ICAgICAgICB0aGFuayB5b3UgZm9yIGhlbHBpbmcgdXMga2VlcCBvdXIgbWVu
        dGFsIHNhbml0eS4iCgogICAgICAgIC0tIFdheW5lIEUuIFNlZ3VpbgoKICAg
        IG1pbml0ZXN0L3VuaXQgaXMgYSBzbWFsbCBhbmQgaW5jcmVkaWJseSBmYXN0
        IHVuaXQgdGVzdGluZyBmcmFtZXdvcmsuCiAgICBJdCBwcm92aWRlcyBhIHJp
        Y2ggc2V0IG9mIGFzc2VydGlvbnMgdG8gbWFrZSB5b3VyIHRlc3RzIGNsZWFu
        IGFuZAogICAgcmVhZGFibGUuCgogICAgbWluaXRlc3Qvc3BlYyBpcyBhIGZ1
        bmN0aW9uYWxseSBjb21wbGV0ZSBzcGVjIGVuZ2luZS4gSXQgaG9va3Mgb250
        bwogICAgbWluaXRlc3QvdW5pdCBhbmQgc2VhbWxlc3NseSBicmlkZ2VzIHRl
        c3QgYXNzZXJ0aW9ucyBvdmVyIHRvIHNwZWMKICAgIGV4cGVjdGF0aW9ucy4K
        CiAgICBtaW5pdGVzdC9iZW5jaG1hcmsgaXMgYW4gYXdlc29tZSB3YXkgdG8g
        YXNzZXJ0IHRoZSBwZXJmb3JtYW5jZSBvZiB5b3VyCiAgICBhbGdvcml0aG1z
        IGluIGEgcmVwZWF0YWJsZSBtYW5uZXIuIE5vdyB5b3UgY2FuIGFzc2VydCB0
        aGF0IHlvdXIgbmV3YgogICAgY28td29ya2VyIGRvZXNuJ3QgcmVwbGFjZSB5
        b3VyIGxpbmVhciBhbGdvcml0aG0gd2l0aCBhbiBleHBvbmVudGlhbAogICAg
        b25lIQoKICAgIG1pbml0ZXN0L21vY2sgYnkgU3RldmVuIEJha2VyLCBpcyBh
        IGJlYXV0aWZ1bGx5IHRpbnkgbW9jayAoYW5kIHN0dWIpCiAgICBvYmplY3Qg
        ZnJhbWV3b3JrLgoKICAgIG1pbml0ZXN0L3ByaWRlIHNob3dzIHByaWRlIGlu
        IHRlc3RpbmcgYW5kIGFkZHMgY29sb3JpbmcgdG8geW91ciB0ZXN0CiAgICBv
        dXRwdXQuIEkgZ3Vlc3MgaXQgaXMgYW4gZXhhbXBsZSBvZiBob3cgdG8gd3Jp
        dGUgSU8gcGlwZXMgdG9vLiA6UAoKICAgIG1pbml0ZXN0L3VuaXQgaXMgbWVh
        bnQgdG8gaGF2ZSBhIGNsZWFuIGltcGxlbWVudGF0aW9uIGZvciBsYW5ndWFn
        ZQogICAgaW1wbGVtZW50b3JzIHRoYXQgbmVlZCBhIG1pbmltYWwgc2V0IG9m
        IG1ldGhvZHMgdG8gYm9vdHN0cmFwIGEgd29ya2luZwogICAgdGVzdCBzdWl0
        ZS4gRm9yIGV4YW1wbGUsIHRoZXJlIGlzIG5vIG1hZ2ljIGludm9sdmVkIGZv
        ciB0ZXN0LWNhc2UKICAgIGRpc2NvdmVyeS4KCiAgICAgICAgIkFnYWluLCBJ
        IGNhbid0IHByYWlzZSBlbm91Z2ggdGhlIGlkZWEgb2YgYSB0ZXN0aW5nL3Nw
        ZWNpbmcKICAgICAgICAgZnJhbWV3b3JrIHRoYXQgSSBjYW4gYWN0dWFsbHkg
        cmVhZCBpbiBmdWxsIGluIG9uZSBzaXR0aW5nISIKCiAgICAgICAgLS0gUGlv
        dHIgU3pvdGtvd3NraQoKICAgIENvbXBhcmluZyB0byByc3BlYzoKCiAgICAg
        ICAgcnNwZWMgaXMgYSB0ZXN0aW5nIERTTC4gbWluaXRlc3QgaXMgcnVieS4K
        CiAgICAgICAgLS0gQWRhbSBIYXdraW5zLCAiQm93IEJlZm9yZSBNaW5pVGVz
        dCIKCiAgICBtaW5pdGVzdCBkb2Vzbid0IHJlaW52ZW50IGFueXRoaW5nIHRo
        YXQgcnVieSBhbHJlYWR5IHByb3ZpZGVzLCBsaWtlOgogICAgY2xhc3Nlcywg
        bW9kdWxlcywgaW5oZXJpdGFuY2UsIG1ldGhvZHMuIFRoaXMgbWVhbnMgeW91
        IG9ubHkgaGF2ZSB0bwogICAgbGVhcm4gcnVieSB0byB1c2UgbWluaXRlc3Qg
        YW5kIGFsbCBvZiB5b3VyIHJlZ3VsYXIgT08gcHJhY3RpY2VzIGxpa2UKICAg
        IGV4dHJhY3QtbWV0aG9kIHJlZmFjdG9yaW5ncyBzdGlsbCBhcHBseS4KICBk
        b3dubG9hZHNfY291bnQ6IDYzMzk5NwogIG1ldGFkYXRhOiB7fQogIG51bWJl
        cjogNS4zLjUKICBzdW1tYXJ5OiBtaW5pdGVzdCBwcm92aWRlcyBhIGNvbXBs
        ZXRlIHN1aXRlIG9mIHRlc3RpbmcgZmFjaWxpdGllcyBzdXBwb3J0aW5nIFRE
        RCwKICAgIEJERCwgbW9ja2luZywgYW5kIGJlbmNobWFya2luZwogIHBsYXRm
        b3JtOiBydWJ5CiAgcnVieWdlbXNfdmVyc2lvbjogIj49IDAiCiAgcnVieV92
        ZXJzaW9uOiAiPj0gMCIKICBwcmVyZWxlYXNlOiBmYWxzZQogIGxpY2Vuc2Vz
        OgogIC0gTUlUCiAgcmVxdWlyZW1lbnRzOiBbXQogIHNoYTogYjk5ZmIwNzdh
        NmFjZTQ3ZDQ5NmY5ODEwNDEzOTVlYzU2NWI5YTFhNTljNDVhNzNhMmVkZDg4
        MGJiMjc0OTNhMgotIGF1dGhvcnM6IFJ5YW4gRGF2aXMKICBidWlsdF9hdDog
        JzIwMTQtMDUtMTVUMDA6MDA6MDAuMDAwWicKICBjcmVhdGVkX2F0OiAnMjAx
        NC0wNS0xNVQyMzozNDoxOS43MjdaJwogIGRlc2NyaXB0aW9uOiB8LQogICAg
        bWluaXRlc3QgcHJvdmlkZXMgYSBjb21wbGV0ZSBzdWl0ZSBvZiB0ZXN0aW5n
        IGZhY2lsaXRpZXMgc3VwcG9ydGluZwogICAgVERELCBCREQsIG1vY2tpbmcs
        IGFuZCBiZW5jaG1hcmtpbmcuCgogICAgICAgICJJIGhhZCBhIGNsYXNzIHdp
        dGggSmltIFdlaXJpY2ggb24gdGVzdGluZyBsYXN0IHdlZWsgYW5kIHdlIHdl
        cmUKICAgICAgICAgYWxsb3dlZCB0byBjaG9vc2Ugb3VyIHRlc3RpbmcgZnJh
        bWV3b3Jrcy4gS2lyayBIYWluZXMgYW5kIEkgd2VyZQogICAgICAgICBwYWly
        ZWQgdXAgYW5kIHdlIGNyYWNrZWQgb3BlbiB0aGUgY29kZSBmb3IgYSBmZXcg
        dGVzdAogICAgICAgICBmcmFtZXdvcmtzLi4uCgogICAgICAgICBJIE1VU1Qg
        c2F5IHRoYXQgbWluaXRlc3QgaXMgKnZlcnkqIHJlYWRhYmxlIC8gdW5kZXJz
        dGFuZGFibGUKICAgICAgICAgY29tcGFyZWQgdG8gdGhlICdvdGhlciB0d28n
        IG9wdGlvbnMgd2UgbG9va2VkIGF0LiBOaWNlbHkgZG9uZSBhbmQKICAgICAg
        ICAgdGhhbmsgeW91IGZvciBoZWxwaW5nIHVzIGtlZXAgb3VyIG1lbnRhbCBz
        YW5pdHkuIgoKICAgICAgICAtLSBXYXluZSBFLiBTZWd1aW4KCiAgICBtaW5p
        dGVzdC91bml0IGlzIGEgc21hbGwgYW5kIGluY3JlZGlibHkgZmFzdCB1bml0
        IHRlc3RpbmcgZnJhbWV3b3JrLgogICAgSXQgcHJvdmlkZXMgYSByaWNoIHNl
        dCBvZiBhc3NlcnRpb25zIHRvIG1ha2UgeW91ciB0ZXN0cyBjbGVhbiBhbmQK
        ICAgIHJlYWRhYmxlLgoKICAgIG1pbml0ZXN0L3NwZWMgaXMgYSBmdW5jdGlv
        bmFsbHkgY29tcGxldGUgc3BlYyBlbmdpbmUuIEl0IGhvb2tzIG9udG8KICAg
        IG1pbml0ZXN0L3VuaXQgYW5kIHNlYW1sZXNzbHkgYnJpZGdlcyB0ZXN0IGFz
        c2VydGlvbnMgb3ZlciB0byBzcGVjCiAgICBleHBlY3RhdGlvbnMuCgogICAg
        bWluaXRlc3QvYmVuY2htYXJrIGlzIGFuIGF3ZXNvbWUgd2F5IHRvIGFzc2Vy
        dCB0aGUgcGVyZm9ybWFuY2Ugb2YgeW91cgogICAgYWxnb3JpdGhtcyBpbiBh
        IHJlcGVhdGFibGUgbWFubmVyLiBOb3cgeW91IGNhbiBhc3NlcnQgdGhhdCB5
        b3VyIG5ld2IKICAgIGNvLXdvcmtlciBkb2Vzbid0IHJlcGxhY2UgeW91ciBs
        aW5lYXIgYWxnb3JpdGhtIHdpdGggYW4gZXhwb25lbnRpYWwKICAgIG9uZSEK
        CiAgICBtaW5pdGVzdC9tb2NrIGJ5IFN0ZXZlbiBCYWtlciwgaXMgYSBiZWF1
        dGlmdWxseSB0aW55IG1vY2sgKGFuZCBzdHViKQogICAgb2JqZWN0IGZyYW1l
        d29yay4KCiAgICBtaW5pdGVzdC9wcmlkZSBzaG93cyBwcmlkZSBpbiB0ZXN0
        aW5nIGFuZCBhZGRzIGNvbG9yaW5nIHRvIHlvdXIgdGVzdAogICAgb3V0cHV0
        LiBJIGd1ZXNzIGl0IGlzIGFuIGV4YW1wbGUgb2YgaG93IHRvIHdyaXRlIElP
        IHBpcGVzIHRvby4gOlAKCiAgICBtaW5pdGVzdC91bml0IGlzIG1lYW50IHRv
        IGhhdmUgYSBjbGVhbiBpbXBsZW1lbnRhdGlvbiBmb3IgbGFuZ3VhZ2UKICAg
        IGltcGxlbWVudG9ycyB0aGF0IG5lZWQgYSBtaW5pbWFsIHNldCBvZiBtZXRo
        b2RzIHRvIGJvb3RzdHJhcCBhIHdvcmtpbmcKICAgIHRlc3Qgc3VpdGUuIEZv
        ciBleGFtcGxlLCB0aGVyZSBpcyBubyBtYWdpYyBpbnZvbHZlZCBmb3IgdGVz
        dC1jYXNlCiAgICBkaXNjb3ZlcnkuCgogICAgICAgICJBZ2FpbiwgSSBjYW4n
        dCBwcmFpc2UgZW5vdWdoIHRoZSBpZGVhIG9mIGEgdGVzdGluZy9zcGVjaW5n
        CiAgICAgICAgIGZyYW1ld29yayB0aGF0IEkgY2FuIGFjdHVhbGx5IHJlYWQg
        aW4gZnVsbCBpbiBvbmUgc2l0dGluZyEiCgogICAgICAgIC0tIFBpb3RyIFN6
        b3Rrb3dza2kKCiAgICBDb21wYXJpbmcgdG8gcnNwZWM6CgogICAgICAgIHJz
        cGVjIGlzIGEgdGVzdGluZyBEU0wuIG1pbml0ZXN0IGlzIHJ1YnkuCgogICAg
        ICAgIC0tIEFkYW0gSGF3a2lucywgIkJvdyBCZWZvcmUgTWluaVRlc3QiCgog
        ICAgbWluaXRlc3QgZG9lc24ndCByZWludmVudCBhbnl0aGluZyB0aGF0IHJ1
        YnkgYWxyZWFkeSBwcm92aWRlcywgbGlrZToKICAgIGNsYXNzZXMsIG1vZHVs
        ZXMsIGluaGVyaXRhbmNlLCBtZXRob2RzLiBUaGlzIG1lYW5zIHlvdSBvbmx5
        IGhhdmUgdG8KICAgIGxlYXJuIHJ1YnkgdG8gdXNlIG1pbml0ZXN0IGFuZCBh
        bGwgb2YgeW91ciByZWd1bGFyIE9PIHByYWN0aWNlcyBsaWtlCiAgICBleHRy
        YWN0LW1ldGhvZCByZWZhY3RvcmluZ3Mgc3RpbGwgYXBwbHkuCiAgZG93bmxv
        YWRzX2NvdW50OiA3NTc4NjQKICBtZXRhZGF0YToge30KICBudW1iZXI6IDUu
        My40CiAgc3VtbWFyeTogbWluaXRlc3QgcHJvdmlkZXMgYSBjb21wbGV0ZSBz
        dWl0ZSBvZiB0ZXN0aW5nIGZhY2lsaXRpZXMgc3VwcG9ydGluZyBUREQsCiAg
        ICBCREQsIG1vY2tpbmcsIGFuZCBiZW5jaG1hcmtpbmcKICBwbGF0Zm9ybTog
        cnVieQogIHJ1YnlnZW1zX3ZlcnNpb246ICI+PSAwIgogIHJ1YnlfdmVyc2lv
        bjogIj49IDAiCiAgcHJlcmVsZWFzZTogZmFsc2UKICBsaWNlbnNlczoKICAt
        IE1JVAogIHJlcXVpcmVtZW50czogW10KICBzaGE6IDZmYTNlNzBkOTA1MzRl
        MjliNjAzZjUxNmExZmUxYTBlOTlhYjU0YWViNDJlYTQ1MjIyOTU1ZTNmMTkz
        MGVhMzMKLSBhdXRob3JzOiBSeWFuIERhdmlzCiAgYnVpbHRfYXQ6ICcyMDE0
        LTA0LTE0VDAwOjAwOjAwLjAwMFonCiAgY3JlYXRlZF9hdDogJzIwMTQtMDQt
        MTRUMjE6NDI6MTcuNTk1WicKICBkZXNjcmlwdGlvbjogfC0KICAgIG1pbml0
        ZXN0IHByb3ZpZGVzIGEgY29tcGxldGUgc3VpdGUgb2YgdGVzdGluZyBmYWNp
        bGl0aWVzIHN1cHBvcnRpbmcKICAgIFRERCwgQkRELCBtb2NraW5nLCBhbmQg
        YmVuY2htYXJraW5nLgoKICAgICAgICAiSSBoYWQgYSBjbGFzcyB3aXRoIEpp
        bSBXZWlyaWNoIG9uIHRlc3RpbmcgbGFzdCB3ZWVrIGFuZCB3ZSB3ZXJlCiAg
        ICAgICAgIGFsbG93ZWQgdG8gY2hvb3NlIG91ciB0ZXN0aW5nIGZyYW1ld29y
        a3MuIEtpcmsgSGFpbmVzIGFuZCBJIHdlcmUKICAgICAgICAgcGFpcmVkIHVw
        IGFuZCB3ZSBjcmFja2VkIG9wZW4gdGhlIGNvZGUgZm9yIGEgZmV3IHRlc3QK
        ICAgICAgICAgZnJhbWV3b3Jrcy4uLgoKICAgICAgICAgSSBNVVNUIHNheSB0
        aGF0IG1pbml0ZXN0IGlzICp2ZXJ5KiByZWFkYWJsZSAvIHVuZGVyc3RhbmRh
        YmxlCiAgICAgICAgIGNvbXBhcmVkIHRvIHRoZSAnb3RoZXIgdHdvJyBvcHRp
        b25zIHdlIGxvb2tlZCBhdC4gTmljZWx5IGRvbmUgYW5kCiAgICAgICAgIHRo
        YW5rIHlvdSBmb3IgaGVscGluZyB1cyBrZWVwIG91ciBtZW50YWwgc2FuaXR5
        LiIKCiAgICAgICAgLS0gV2F5bmUgRS4gU2VndWluCgogICAgbWluaXRlc3Qv
        dW5pdCBpcyBhIHNtYWxsIGFuZCBpbmNyZWRpYmx5IGZhc3QgdW5pdCB0ZXN0
        aW5nIGZyYW1ld29yay4KICAgIEl0IHByb3ZpZGVzIGEgcmljaCBzZXQgb2Yg
        YXNzZXJ0aW9ucyB0byBtYWtlIHlvdXIgdGVzdHMgY2xlYW4gYW5kCiAgICBy
        ZWFkYWJsZS4KCiAgICBtaW5pdGVzdC9zcGVjIGlzIGEgZnVuY3Rpb25hbGx5
        IGNvbXBsZXRlIHNwZWMgZW5naW5lLiBJdCBob29rcyBvbnRvCiAgICBtaW5p
        dGVzdC91bml0IGFuZCBzZWFtbGVzc2x5IGJyaWRnZXMgdGVzdCBhc3NlcnRp
        b25zIG92ZXIgdG8gc3BlYwogICAgZXhwZWN0YXRpb25zLgoKICAgIG1pbml0
        ZXN0L2JlbmNobWFyayBpcyBhbiBhd2Vzb21lIHdheSB0byBhc3NlcnQgdGhl
        IHBlcmZvcm1hbmNlIG9mIHlvdXIKICAgIGFsZ29yaXRobXMgaW4gYSByZXBl
        YXRhYmxlIG1hbm5lci4gTm93IHlvdSBjYW4gYXNzZXJ0IHRoYXQgeW91ciBu
        ZXdiCiAgICBjby13b3JrZXIgZG9lc24ndCByZXBsYWNlIHlvdXIgbGluZWFy
        IGFsZ29yaXRobSB3aXRoIGFuIGV4cG9uZW50aWFsCiAgICBvbmUhCgogICAg
        bWluaXRlc3QvbW9jayBieSBTdGV2ZW4gQmFrZXIsIGlzIGEgYmVhdXRpZnVs
        bHkgdGlueSBtb2NrIChhbmQgc3R1YikKICAgIG9iamVjdCBmcmFtZXdvcmsu
        CgogICAgbWluaXRlc3QvcHJpZGUgc2hvd3MgcHJpZGUgaW4gdGVzdGluZyBh
        bmQgYWRkcyBjb2xvcmluZyB0byB5b3VyIHRlc3QKICAgIG91dHB1dC4gSSBn
        dWVzcyBpdCBpcyBhbiBleGFtcGxlIG9mIGhvdyB0byB3cml0ZSBJTyBwaXBl
        cyB0b28uIDpQCgogICAgbWluaXRlc3QvdW5pdCBpcyBtZWFudCB0byBoYXZl
        IGEgY2xlYW4gaW1wbGVtZW50YXRpb24gZm9yIGxhbmd1YWdlCiAgICBpbXBs
        ZW1lbnRvcnMgdGhhdCBuZWVkIGEgbWluaW1hbCBzZXQgb2YgbWV0aG9kcyB0
        byBib290c3RyYXAgYSB3b3JraW5nCiAgICB0ZXN0IHN1aXRlLiBGb3IgZXhh
        bXBsZSwgdGhlcmUgaXMgbm8gbWFnaWMgaW52b2x2ZWQgZm9yIHRlc3QtY2Fz
        ZQogICAgZGlzY292ZXJ5LgoKICAgICAgICAiQWdhaW4sIEkgY2FuJ3QgcHJh
        aXNlIGVub3VnaCB0aGUgaWRlYSBvZiBhIHRlc3Rpbmcvc3BlY2luZwogICAg
        ICAgICBmcmFtZXdvcmsgdGhhdCBJIGNhbiBhY3R1YWxseSByZWFkIGluIGZ1
        bGwgaW4gb25lIHNpdHRpbmchIgoKICAgICAgICAtLSBQaW90ciBTem90a293
        c2tpCgogICAgQ29tcGFyaW5nIHRvIHJzcGVjOgoKICAgICAgICByc3BlYyBp
        cyBhIHRlc3RpbmcgRFNMLiBtaW5pdGVzdCBpcyBydWJ5LgoKICAgICAgICAt
        LSBBZGFtIEhhd2tpbnMsICJCb3cgQmVmb3JlIE1pbmlUZXN0IgoKICAgIG1p
        bml0ZXN0IGRvZXNuJ3QgcmVpbnZlbnQgYW55dGhpbmcgdGhhdCBydWJ5IGFs
        cmVhZHkgcHJvdmlkZXMsIGxpa2U6CiAgICBjbGFzc2VzLCBtb2R1bGVzLCBp
        bmhlcml0YW5jZSwgbWV0aG9kcy4gVGhpcyBtZWFucyB5b3Ugb25seSBoYXZl
        IHRvCiAgICBsZWFybiBydWJ5IHRvIHVzZSBtaW5pdGVzdCBhbmQgYWxsIG9m
        IHlvdXIgcmVndWxhciBPTyBwcmFjdGljZXMgbGlrZQogICAgZXh0cmFjdC1t
        ZXRob2QgcmVmYWN0b3JpbmdzIHN0aWxsIGFwcGx5LgogIGRvd25sb2Fkc19j
        b3VudDogOTQxNDY3CiAgbWV0YWRhdGE6IHt9CiAgbnVtYmVyOiA1LjMuMwog
        IHN1bW1hcnk6IG1pbml0ZXN0IHByb3ZpZGVzIGEgY29tcGxldGUgc3VpdGUg
        b2YgdGVzdGluZyBmYWNpbGl0aWVzIHN1cHBvcnRpbmcgVERELAogICAgQkRE
        LCBtb2NraW5nLCBhbmQgYmVuY2htYXJraW5nCiAgcGxhdGZvcm06IHJ1YnkK
        ICBydWJ5Z2Vtc192ZXJzaW9uOiAiPj0gMCIKICBydWJ5X3ZlcnNpb246ICI+
        PSAwIgogIHByZXJlbGVhc2U6IGZhbHNlCiAgbGljZW5zZXM6CiAgLSBNSVQK
        ICByZXF1aXJlbWVudHM6IFtdCiAgc2hhOiBiMTdjNTYwMjM1ZTZhYjk2ZWQy
        NDNkN2E4MjFlNDM3MGFmMTMxNmFkN2E4NDUxODhkMjJjNTZkN2Q3MTMwMmQ0
        Ci0gYXV0aG9yczogUnlhbiBEYXZpcwogIGJ1aWx0X2F0OiAnMjAxNC0wNC0w
        MlQwMDowMDowMC4wMDBaJwogIGNyZWF0ZWRfYXQ6ICcyMDE0LTA0LTAyVDIy
        OjU0OjM4Ljc5OVonCiAgZGVzY3JpcHRpb246IHwtCiAgICBtaW5pdGVzdCBw
        cm92aWRlcyBhIGNvbXBsZXRlIHN1aXRlIG9mIHRlc3RpbmcgZmFjaWxpdGll
        cyBzdXBwb3J0aW5nCiAgICBUREQsIEJERCwgbW9ja2luZywgYW5kIGJlbmNo
        bWFya2luZy4KCiAgICAgICAgIkkgaGFkIGEgY2xhc3Mgd2l0aCBKaW0gV2Vp
        cmljaCBvbiB0ZXN0aW5nIGxhc3Qgd2VlayBhbmQgd2Ugd2VyZQogICAgICAg
        ICBhbGxvd2VkIHRvIGNob29zZSBvdXIgdGVzdGluZyBmcmFtZXdvcmtzLiBL
        aXJrIEhhaW5lcyBhbmQgSSB3ZXJlCiAgICAgICAgIHBhaXJlZCB1cCBhbmQg
        d2UgY3JhY2tlZCBvcGVuIHRoZSBjb2RlIGZvciBhIGZldyB0ZXN0CiAgICAg
        ICAgIGZyYW1ld29ya3MuLi4KCiAgICAgICAgIEkgTVVTVCBzYXkgdGhhdCBt
        aW5pdGVzdCBpcyAqdmVyeSogcmVhZGFibGUgLyB1bmRlcnN0YW5kYWJsZQog
        ICAgICAgICBjb21wYXJlZCB0byB0aGUgJ290aGVyIHR3bycgb3B0aW9ucyB3
        ZSBsb29rZWQgYXQuIE5pY2VseSBkb25lIGFuZAogICAgICAgICB0aGFuayB5
        b3UgZm9yIGhlbHBpbmcgdXMga2VlcCBvdXIgbWVudGFsIHNhbml0eS4iCgog
        ICAgICAgIC0tIFdheW5lIEUuIFNlZ3VpbgoKICAgIG1pbml0ZXN0L3VuaXQg
        aXMgYSBzbWFsbCBhbmQgaW5jcmVkaWJseSBmYXN0IHVuaXQgdGVzdGluZyBm
        cmFtZXdvcmsuCiAgICBJdCBwcm92aWRlcyBhIHJpY2ggc2V0IG9mIGFzc2Vy
        dGlvbnMgdG8gbWFrZSB5b3VyIHRlc3RzIGNsZWFuIGFuZAogICAgcmVhZGFi
        bGUuCgogICAgbWluaXRlc3Qvc3BlYyBpcyBhIGZ1bmN0aW9uYWxseSBjb21w
        bGV0ZSBzcGVjIGVuZ2luZS4gSXQgaG9va3Mgb250bwogICAgbWluaXRlc3Qv
        dW5pdCBhbmQgc2VhbWxlc3NseSBicmlkZ2VzIHRlc3QgYXNzZXJ0aW9ucyBv
        dmVyIHRvIHNwZWMKICAgIGV4cGVjdGF0aW9ucy4KCiAgICBtaW5pdGVzdC9i
        ZW5jaG1hcmsgaXMgYW4gYXdlc29tZSB3YXkgdG8gYXNzZXJ0IHRoZSBwZXJm
        b3JtYW5jZSBvZiB5b3VyCiAgICBhbGdvcml0aG1zIGluIGEgcmVwZWF0YWJs
        ZSBtYW5uZXIuIE5vdyB5b3UgY2FuIGFzc2VydCB0aGF0IHlvdXIgbmV3Ygog
        ICAgY28td29ya2VyIGRvZXNuJ3QgcmVwbGFjZSB5b3VyIGxpbmVhciBhbGdv
        cml0aG0gd2l0aCBhbiBleHBvbmVudGlhbAogICAgb25lIQoKICAgIG1pbml0
        ZXN0L21vY2sgYnkgU3RldmVuIEJha2VyLCBpcyBhIGJlYXV0aWZ1bGx5IHRp
        bnkgbW9jayAoYW5kIHN0dWIpCiAgICBvYmplY3QgZnJhbWV3b3JrLgoKICAg
        IG1pbml0ZXN0L3ByaWRlIHNob3dzIHByaWRlIGluIHRlc3RpbmcgYW5kIGFk
        ZHMgY29sb3JpbmcgdG8geW91ciB0ZXN0CiAgICBvdXRwdXQuIEkgZ3Vlc3Mg
        aXQgaXMgYW4gZXhhbXBsZSBvZiBob3cgdG8gd3JpdGUgSU8gcGlwZXMgdG9v
        LiA6UAoKICAgIG1pbml0ZXN0L3VuaXQgaXMgbWVhbnQgdG8gaGF2ZSBhIGNs
        ZWFuIGltcGxlbWVudGF0aW9uIGZvciBsYW5ndWFnZQogICAgaW1wbGVtZW50
        b3JzIHRoYXQgbmVlZCBhIG1pbmltYWwgc2V0IG9mIG1ldGhvZHMgdG8gYm9v
        dHN0cmFwIGEgd29ya2luZwogICAgdGVzdCBzdWl0ZS4gRm9yIGV4YW1wbGUs
        IHRoZXJlIGlzIG5vIG1hZ2ljIGludm9sdmVkIGZvciB0ZXN0LWNhc2UKICAg
        IGRpc2NvdmVyeS4KCiAgICAgICAgIkFnYWluLCBJIGNhbid0IHByYWlzZSBl
        bm91Z2ggdGhlIGlkZWEgb2YgYSB0ZXN0aW5nL3NwZWNpbmcKICAgICAgICAg
        ZnJhbWV3b3JrIHRoYXQgSSBjYW4gYWN0dWFsbHkgcmVhZCBpbiBmdWxsIGlu
        IG9uZSBzaXR0aW5nISIKCiAgICAgICAgLS0gUGlvdHIgU3pvdGtvd3NraQoK
        ICAgIENvbXBhcmluZyB0byByc3BlYzoKCiAgICAgICAgcnNwZWMgaXMgYSB0
        ZXN0aW5nIERTTC4gbWluaXRlc3QgaXMgcnVieS4KCiAgICAgICAgLS0gQWRh
        bSBIYXdraW5zLCAiQm93IEJlZm9yZSBNaW5pVGVzdCIKCiAgICBtaW5pdGVz
        dCBkb2Vzbid0IHJlaW52ZW50IGFueXRoaW5nIHRoYXQgcnVieSBhbHJlYWR5
        IHByb3ZpZGVzLCBsaWtlOgogICAgY2xhc3NlcywgbW9kdWxlcywgaW5oZXJp
        dGFuY2UsIG1ldGhvZHMuIFRoaXMgbWVhbnMgeW91IG9ubHkgaGF2ZSB0bwog
        ICAgbGVhcm4gcnVieSB0byB1c2UgbWluaXRlc3QgYW5kIGFsbCBvZiB5b3Vy
        IHJlZ3VsYXIgT08gcHJhY3RpY2VzIGxpa2UKICAgIGV4dHJhY3QtbWV0aG9k
        IHJlZmFjdG9yaW5ncyBzdGlsbCBhcHBseS4KICBkb3dubG9hZHNfY291bnQ6
        IDE0MjU5MgogIG1ldGFkYXRhOiB7fQogIG51bWJlcjogNS4zLjIKICBzdW1t
        YXJ5OiBtaW5pdGVzdCBwcm92aWRlcyBhIGNvbXBsZXRlIHN1aXRlIG9mIHRl
        c3RpbmcgZmFjaWxpdGllcyBzdXBwb3J0aW5nIFRERCwKICAgIEJERCwgbW9j
        a2luZywgYW5kIGJlbmNobWFya2luZwogIHBsYXRmb3JtOiBydWJ5CiAgcnVi
        eWdlbXNfdmVyc2lvbjogIj49IDAiCiAgcnVieV92ZXJzaW9uOiAiPj0gMCIK
        ICBwcmVyZWxlYXNlOiBmYWxzZQogIGxpY2Vuc2VzOgogIC0gTUlUCiAgcmVx
        dWlyZW1lbnRzOiBbXQogIHNoYTogYjI3OTQxYThlMDlkYzkxZjFkNDVlYjg1
        ZmU0YmRkYzM0YTZiYTAzN2JkY2I1MzQ1NTcwZjk2NTBkZTFkMzI1ZgotIGF1
        dGhvcnM6IFJ5YW4gRGF2aXMKICBidWlsdF9hdDogJzIwMTQtMDMtMTRUMDA6
        MDA6MDAuMDAwWicKICBjcmVhdGVkX2F0OiAnMjAxNC0wMy0xNFQyMzoyMTow
        Ny4zNDlaJwogIGRlc2NyaXB0aW9uOiB8LQogICAgbWluaXRlc3QgcHJvdmlk
        ZXMgYSBjb21wbGV0ZSBzdWl0ZSBvZiB0ZXN0aW5nIGZhY2lsaXRpZXMgc3Vw
        cG9ydGluZwogICAgVERELCBCREQsIG1vY2tpbmcsIGFuZCBiZW5jaG1hcmtp
        bmcuCgogICAgICAgICJJIGhhZCBhIGNsYXNzIHdpdGggSmltIFdlaXJpY2gg
        b24gdGVzdGluZyBsYXN0IHdlZWsgYW5kIHdlIHdlcmUKICAgICAgICAgYWxs
        b3dlZCB0byBjaG9vc2Ugb3VyIHRlc3RpbmcgZnJhbWV3b3Jrcy4gS2lyayBI
        YWluZXMgYW5kIEkgd2VyZQogICAgICAgICBwYWlyZWQgdXAgYW5kIHdlIGNy
        YWNrZWQgb3BlbiB0aGUgY29kZSBmb3IgYSBmZXcgdGVzdAogICAgICAgICBm
        cmFtZXdvcmtzLi4uCgogICAgICAgICBJIE1VU1Qgc2F5IHRoYXQgbWluaXRl
        c3QgaXMgKnZlcnkqIHJlYWRhYmxlIC8gdW5kZXJzdGFuZGFibGUKICAgICAg
        ICAgY29tcGFyZWQgdG8gdGhlICdvdGhlciB0d28nIG9wdGlvbnMgd2UgbG9v
        a2VkIGF0LiBOaWNlbHkgZG9uZSBhbmQKICAgICAgICAgdGhhbmsgeW91IGZv
        ciBoZWxwaW5nIHVzIGtlZXAgb3VyIG1lbnRhbCBzYW5pdHkuIgoKICAgICAg
        ICAtLSBXYXluZSBFLiBTZWd1aW4KCiAgICBtaW5pdGVzdC91bml0IGlzIGEg
        c21hbGwgYW5kIGluY3JlZGlibHkgZmFzdCB1bml0IHRlc3RpbmcgZnJhbWV3
        b3JrLgogICAgSXQgcHJvdmlkZXMgYSByaWNoIHNldCBvZiBhc3NlcnRpb25z
        IHRvIG1ha2UgeW91ciB0ZXN0cyBjbGVhbiBhbmQKICAgIHJlYWRhYmxlLgoK
        ICAgIG1pbml0ZXN0L3NwZWMgaXMgYSBmdW5jdGlvbmFsbHkgY29tcGxldGUg
        c3BlYyBlbmdpbmUuIEl0IGhvb2tzIG9udG8KICAgIG1pbml0ZXN0L3VuaXQg
        YW5kIHNlYW1sZXNzbHkgYnJpZGdlcyB0ZXN0IGFzc2VydGlvbnMgb3ZlciB0
        byBzcGVjCiAgICBleHBlY3RhdGlvbnMuCgogICAgbWluaXRlc3QvYmVuY2ht
        YXJrIGlzIGFuIGF3ZXNvbWUgd2F5IHRvIGFzc2VydCB0aGUgcGVyZm9ybWFu
        Y2Ugb2YgeW91cgogICAgYWxnb3JpdGhtcyBpbiBhIHJlcGVhdGFibGUgbWFu
        bmVyLiBOb3cgeW91IGNhbiBhc3NlcnQgdGhhdCB5b3VyIG5ld2IKICAgIGNv
        LXdvcmtlciBkb2Vzbid0IHJlcGxhY2UgeW91ciBsaW5lYXIgYWxnb3JpdGht
        IHdpdGggYW4gZXhwb25lbnRpYWwKICAgIG9uZSEKCiAgICBtaW5pdGVzdC9t
        b2NrIGJ5IFN0ZXZlbiBCYWtlciwgaXMgYSBiZWF1dGlmdWxseSB0aW55IG1v
        Y2sgKGFuZCBzdHViKQogICAgb2JqZWN0IGZyYW1ld29yay4KCiAgICBtaW5p
        dGVzdC9wcmlkZSBzaG93cyBwcmlkZSBpbiB0ZXN0aW5nIGFuZCBhZGRzIGNv
        bG9yaW5nIHRvIHlvdXIgdGVzdAogICAgb3V0cHV0LiBJIGd1ZXNzIGl0IGlz
        IGFuIGV4YW1wbGUgb2YgaG93IHRvIHdyaXRlIElPIHBpcGVzIHRvby4gOlAK
        CiAgICBtaW5pdGVzdC91bml0IGlzIG1lYW50IHRvIGhhdmUgYSBjbGVhbiBp
        bXBsZW1lbnRhdGlvbiBmb3IgbGFuZ3VhZ2UKICAgIGltcGxlbWVudG9ycyB0
        aGF0IG5lZWQgYSBtaW5pbWFsIHNldCBvZiBtZXRob2RzIHRvIGJvb3RzdHJh
        cCBhIHdvcmtpbmcKICAgIHRlc3Qgc3VpdGUuIEZvciBleGFtcGxlLCB0aGVy
        ZSBpcyBubyBtYWdpYyBpbnZvbHZlZCBmb3IgdGVzdC1jYXNlCiAgICBkaXNj
        b3ZlcnkuCgogICAgICAgICJBZ2FpbiwgSSBjYW4ndCBwcmFpc2UgZW5vdWdo
        IHRoZSBpZGVhIG9mIGEgdGVzdGluZy9zcGVjaW5nCiAgICAgICAgIGZyYW1l
        d29yayB0aGF0IEkgY2FuIGFjdHVhbGx5IHJlYWQgaW4gZnVsbCBpbiBvbmUg
        c2l0dGluZyEiCgogICAgICAgIC0tIFBpb3RyIFN6b3Rrb3dza2kKCiAgICBD
        b21wYXJpbmcgdG8gcnNwZWM6CgogICAgICAgIHJzcGVjIGlzIGEgdGVzdGlu
        ZyBEU0wuIG1pbml0ZXN0IGlzIHJ1YnkuCgogICAgICAgIC0tIEFkYW0gSGF3
        a2lucywgIkJvdyBCZWZvcmUgTWluaVRlc3QiCgogICAgbWluaXRlc3QgZG9l
        c24ndCByZWludmVudCBhbnl0aGluZyB0aGF0IHJ1YnkgYWxyZWFkeSBwcm92
        aWRlcywgbGlrZToKICAgIGNsYXNzZXMsIG1vZHVsZXMsIGluaGVyaXRhbmNl
        LCBtZXRob2RzLiBUaGlzIG1lYW5zIHlvdSBvbmx5IGhhdmUgdG8KICAgIGxl
        YXJuIHJ1YnkgdG8gdXNlIG1pbml0ZXN0IGFuZCBhbGwgb2YgeW91ciByZWd1
        bGFyIE9PIHByYWN0aWNlcyBsaWtlCiAgICBleHRyYWN0LW1ldGhvZCByZWZh
        Y3RvcmluZ3Mgc3RpbGwgYXBwbHkuCiAgZG93bmxvYWRzX2NvdW50OiA4Mjgx
        OAogIG1ldGFkYXRhOiB7fQogIG51bWJlcjogNS4zLjEKICBzdW1tYXJ5OiBt
        aW5pdGVzdCBwcm92aWRlcyBhIGNvbXBsZXRlIHN1aXRlIG9mIHRlc3Rpbmcg
        ZmFjaWxpdGllcyBzdXBwb3J0aW5nIFRERCwKICAgIEJERCwgbW9ja2luZywg
        YW5kIGJlbmNobWFya2luZwogIHBsYXRmb3JtOiBydWJ5CiAgcnVieWdlbXNf
        dmVyc2lvbjogIj49IDAiCiAgcnVieV92ZXJzaW9uOiAKICBwcmVyZWxlYXNl
        OiBmYWxzZQogIGxpY2Vuc2VzOgogIC0gTUlUCiAgcmVxdWlyZW1lbnRzOiBb
        XQogIHNoYTogNzM0Yjc3ZDM4MjA3ZWZmOTkwZjI3YzVjMDE4MGE1NWU3ZTFl
        ZTljZWQwM2IxMTVmMjBiMmRmYjNkOTcwMGViOQotIGF1dGhvcnM6IFJ5YW4g
        RGF2aXMKICBidWlsdF9hdDogJzIwMTQtMDItMjZUMDA6MDA6MDAuMDAwWicK
        ICBjcmVhdGVkX2F0OiAnMjAxNC0wMi0yNlQwMDo0NzoyNi43MjhaJwogIGRl
        c2NyaXB0aW9uOiB8LQogICAgbWluaXRlc3QgcHJvdmlkZXMgYSBjb21wbGV0
        ZSBzdWl0ZSBvZiB0ZXN0aW5nIGZhY2lsaXRpZXMgc3VwcG9ydGluZwogICAg
        VERELCBCREQsIG1vY2tpbmcsIGFuZCBiZW5jaG1hcmtpbmcuCgogICAgICAg
        ICJJIGhhZCBhIGNsYXNzIHdpdGggSmltIFdlaXJpY2ggb24gdGVzdGluZyBs
        YXN0IHdlZWsgYW5kIHdlIHdlcmUKICAgICAgICAgYWxsb3dlZCB0byBjaG9v
        c2Ugb3VyIHRlc3RpbmcgZnJhbWV3b3Jrcy4gS2lyayBIYWluZXMgYW5kIEkg
        d2VyZQogICAgICAgICBwYWlyZWQgdXAgYW5kIHdlIGNyYWNrZWQgb3BlbiB0
        aGUgY29kZSBmb3IgYSBmZXcgdGVzdAogICAgICAgICBmcmFtZXdvcmtzLi4u
        CgogICAgICAgICBJIE1VU1Qgc2F5IHRoYXQgbWluaXRlc3QgaXMgKnZlcnkq
        IHJlYWRhYmxlIC8gdW5kZXJzdGFuZGFibGUKICAgICAgICAgY29tcGFyZWQg
        dG8gdGhlICdvdGhlciB0d28nIG9wdGlvbnMgd2UgbG9va2VkIGF0LiBOaWNl
        bHkgZG9uZSBhbmQKICAgICAgICAgdGhhbmsgeW91IGZvciBoZWxwaW5nIHVz
        IGtlZXAgb3VyIG1lbnRhbCBzYW5pdHkuIgoKICAgICAgICAtLSBXYXluZSBF
        LiBTZWd1aW4KCiAgICBtaW5pdGVzdC91bml0IGlzIGEgc21hbGwgYW5kIGlu
        Y3JlZGlibHkgZmFzdCB1bml0IHRlc3RpbmcgZnJhbWV3b3JrLgogICAgSXQg
        cHJvdmlkZXMgYSByaWNoIHNldCBvZiBhc3NlcnRpb25zIHRvIG1ha2UgeW91
        ciB0ZXN0cyBjbGVhbiBhbmQKICAgIHJlYWRhYmxlLgoKICAgIG1pbml0ZXN0
        L3NwZWMgaXMgYSBmdW5jdGlvbmFsbHkgY29tcGxldGUgc3BlYyBlbmdpbmUu
        IEl0IGhvb2tzIG9udG8KICAgIG1pbml0ZXN0L3VuaXQgYW5kIHNlYW1sZXNz
        bHkgYnJpZGdlcyB0ZXN0IGFzc2VydGlvbnMgb3ZlciB0byBzcGVjCiAgICBl
        eHBlY3RhdGlvbnMuCgogICAgbWluaXRlc3QvYmVuY2htYXJrIGlzIGFuIGF3
        ZXNvbWUgd2F5IHRvIGFzc2VydCB0aGUgcGVyZm9ybWFuY2Ugb2YgeW91cgog
        ICAgYWxnb3JpdGhtcyBpbiBhIHJlcGVhdGFibGUgbWFubmVyLiBOb3cgeW91
        IGNhbiBhc3NlcnQgdGhhdCB5b3VyIG5ld2IKICAgIGNvLXdvcmtlciBkb2Vz
        bid0IHJlcGxhY2UgeW91ciBsaW5lYXIgYWxnb3JpdGhtIHdpdGggYW4gZXhw
        b25lbnRpYWwKICAgIG9uZSEKCiAgICBtaW5pdGVzdC9tb2NrIGJ5IFN0ZXZl
        biBCYWtlciwgaXMgYSBiZWF1dGlmdWxseSB0aW55IG1vY2sgKGFuZCBzdHVi
        KQogICAgb2JqZWN0IGZyYW1ld29yay4KCiAgICBtaW5pdGVzdC9wcmlkZSBz
        aG93cyBwcmlkZSBpbiB0ZXN0aW5nIGFuZCBhZGRzIGNvbG9yaW5nIHRvIHlv
        dXIgdGVzdAogICAgb3V0cHV0LiBJIGd1ZXNzIGl0IGlzIGFuIGV4YW1wbGUg
        b2YgaG93IHRvIHdyaXRlIElPIHBpcGVzIHRvby4gOlAKCiAgICBtaW5pdGVz
        dC91bml0IGlzIG1lYW50IHRvIGhhdmUgYSBjbGVhbiBpbXBsZW1lbnRhdGlv
        biBmb3IgbGFuZ3VhZ2UKICAgIGltcGxlbWVudG9ycyB0aGF0IG5lZWQgYSBt
        aW5pbWFsIHNldCBvZiBtZXRob2RzIHRvIGJvb3RzdHJhcCBhIHdvcmtpbmcK
        ICAgIHRlc3Qgc3VpdGUuIEZvciBleGFtcGxlLCB0aGVyZSBpcyBubyBtYWdp
        YyBpbnZvbHZlZCBmb3IgdGVzdC1jYXNlCiAgICBkaXNjb3ZlcnkuCgogICAg
        ICAgICJBZ2FpbiwgSSBjYW4ndCBwcmFpc2UgZW5vdWdoIHRoZSBpZGVhIG9m
        IGEgdGVzdGluZy9zcGVjaW5nCiAgICAgICAgIGZyYW1ld29yayB0aGF0IEkg
        Y2FuIGFjdHVhbGx5IHJlYWQgaW4gZnVsbCBpbiBvbmUgc2l0dGluZyEiCgog
        ICAgICAgIC0tIFBpb3RyIFN6b3Rrb3dza2kKCiAgICBDb21wYXJpbmcgdG8g
        cnNwZWM6CgogICAgICAgIHJzcGVjIGlzIGEgdGVzdGluZyBEU0wuIG1pbml0
        ZXN0IGlzIHJ1YnkuCgogICAgICAgIC0tIEFkYW0gSGF3a2lucywgIkJvdyBC
        ZWZvcmUgTWluaVRlc3QiCgogICAgbWluaXRlc3QgZG9lc24ndCByZWludmVu
        dCBhbnl0aGluZyB0aGF0IHJ1YnkgYWxyZWFkeSBwcm92aWRlcywgbGlrZToK
        ICAgIGNsYXNzZXMsIG1vZHVsZXMsIGluaGVyaXRhbmNlLCBtZXRob2RzLiBU
        aGlzIG1lYW5zIHlvdSBvbmx5IGhhdmUgdG8KICAgIGxlYXJuIHJ1YnkgdG8g
        dXNlIG1pbml0ZXN0IGFuZCBhbGwgb2YgeW91ciByZWd1bGFyIE9PIHByYWN0
        aWNlcyBsaWtlCiAgICBleHRyYWN0LW1ldGhvZCByZWZhY3RvcmluZ3Mgc3Rp
        bGwgYXBwbHkuCiAgZG93bmxvYWRzX2NvdW50OiA5MTkyNgogIG1ldGFkYXRh
        OiB7fQogIG51bWJlcjogNS4zLjAKICBzdW1tYXJ5OiBtaW5pdGVzdCBwcm92
        aWRlcyBhIGNvbXBsZXRlIHN1aXRlIG9mIHRlc3RpbmcgZmFjaWxpdGllcyBz
        dXBwb3J0aW5nIFRERCwKICAgIEJERCwgbW9ja2luZywgYW5kIGJlbmNobWFy
        a2luZwogIHBsYXRmb3JtOiBydWJ5CiAgcnVieWdlbXNfdmVyc2lvbjogIj49
        IDAiCiAgcnVieV92ZXJzaW9uOiAKICBwcmVyZWxlYXNlOiBmYWxzZQogIGxp
        Y2Vuc2VzOgogIC0gTUlUCiAgcmVxdWlyZW1lbnRzOiBbXQogIHNoYTogODA2
        ODNiNjRhODZkMDZhNDgzMGZiZmRiMTU5MTM4NDMyN2MyZTUzNzczYTMxNjJm
        ZWVlOGViMjZlYjI4YmJhYgotIGF1dGhvcnM6IFJ5YW4gRGF2aXMKICBidWls
        dF9hdDogJzIwMTQtMDItMTFUMDA6MDA6MDAuMDAwWicKICBjcmVhdGVkX2F0
        OiAnMjAxNC0wMi0xMVQwMDoxNDozNC44MjZaJwogIGRlc2NyaXB0aW9uOiB8
        LQogICAgbWluaXRlc3QgcHJvdmlkZXMgYSBjb21wbGV0ZSBzdWl0ZSBvZiB0
        ZXN0aW5nIGZhY2lsaXRpZXMgc3VwcG9ydGluZwogICAgVERELCBCREQsIG1v
        Y2tpbmcsIGFuZCBiZW5jaG1hcmtpbmcuCgogICAgICAgICJJIGhhZCBhIGNs
        YXNzIHdpdGggSmltIFdlaXJpY2ggb24gdGVzdGluZyBsYXN0IHdlZWsgYW5k
        IHdlIHdlcmUKICAgICAgICAgYWxsb3dlZCB0byBjaG9vc2Ugb3VyIHRlc3Rp
        bmcgZnJhbWV3b3Jrcy4gS2lyayBIYWluZXMgYW5kIEkgd2VyZQogICAgICAg
        ICBwYWlyZWQgdXAgYW5kIHdlIGNyYWNrZWQgb3BlbiB0aGUgY29kZSBmb3Ig
        YSBmZXcgdGVzdAogICAgICAgICBmcmFtZXdvcmtzLi4uCgogICAgICAgICBJ
        IE1VU1Qgc2F5IHRoYXQgbWluaXRlc3QgaXMgKnZlcnkqIHJlYWRhYmxlIC8g
        dW5kZXJzdGFuZGFibGUKICAgICAgICAgY29tcGFyZWQgdG8gdGhlICdvdGhl
        ciB0d28nIG9wdGlvbnMgd2UgbG9va2VkIGF0LiBOaWNlbHkgZG9uZSBhbmQK
        ICAgICAgICAgdGhhbmsgeW91IGZvciBoZWxwaW5nIHVzIGtlZXAgb3VyIG1l
        bnRhbCBzYW5pdHkuIgoKICAgICAgICAtLSBXYXluZSBFLiBTZWd1aW4KCiAg
        ICBtaW5pdGVzdC91bml0IGlzIGEgc21hbGwgYW5kIGluY3JlZGlibHkgZmFz
        dCB1bml0IHRlc3RpbmcgZnJhbWV3b3JrLgogICAgSXQgcHJvdmlkZXMgYSBy
        aWNoIHNldCBvZiBhc3NlcnRpb25zIHRvIG1ha2UgeW91ciB0ZXN0cyBjbGVh
        biBhbmQKICAgIHJlYWRhYmxlLgoKICAgIG1pbml0ZXN0L3NwZWMgaXMgYSBm
        dW5jdGlvbmFsbHkgY29tcGxldGUgc3BlYyBlbmdpbmUuIEl0IGhvb2tzIG9u
        dG8KICAgIG1pbml0ZXN0L3VuaXQgYW5kIHNlYW1sZXNzbHkgYnJpZGdlcyB0
        ZXN0IGFzc2VydGlvbnMgb3ZlciB0byBzcGVjCiAgICBleHBlY3RhdGlvbnMu
        CgogICAgbWluaXRlc3QvYmVuY2htYXJrIGlzIGFuIGF3ZXNvbWUgd2F5IHRv
        IGFzc2VydCB0aGUgcGVyZm9ybWFuY2Ugb2YgeW91cgogICAgYWxnb3JpdGht
        cyBpbiBhIHJlcGVhdGFibGUgbWFubmVyLiBOb3cgeW91IGNhbiBhc3NlcnQg
        dGhhdCB5b3VyIG5ld2IKICAgIGNvLXdvcmtlciBkb2Vzbid0IHJlcGxhY2Ug
        eW91ciBsaW5lYXIgYWxnb3JpdGhtIHdpdGggYW4gZXhwb25lbnRpYWwKICAg
        IG9uZSEKCiAgICBtaW5pdGVzdC9tb2NrIGJ5IFN0ZXZlbiBCYWtlciwgaXMg
        YSBiZWF1dGlmdWxseSB0aW55IG1vY2sgKGFuZCBzdHViKQogICAgb2JqZWN0
        IGZyYW1ld29yay4KCiAgICBtaW5pdGVzdC9wcmlkZSBzaG93cyBwcmlkZSBp
        biB0ZXN0aW5nIGFuZCBhZGRzIGNvbG9yaW5nIHRvIHlvdXIgdGVzdAogICAg
        b3V0cHV0LiBJIGd1ZXNzIGl0IGlzIGFuIGV4YW1wbGUgb2YgaG93IHRvIHdy
        aXRlIElPIHBpcGVzIHRvby4gOlAKCiAgICBtaW5pdGVzdC91bml0IGlzIG1l
        YW50IHRvIGhhdmUgYSBjbGVhbiBpbXBsZW1lbnRhdGlvbiBmb3IgbGFuZ3Vh
        Z2UKICAgIGltcGxlbWVudG9ycyB0aGF0IG5lZWQgYSBtaW5pbWFsIHNldCBv
        ZiBtZXRob2RzIHRvIGJvb3RzdHJhcCBhIHdvcmtpbmcKICAgIHRlc3Qgc3Vp
        dGUuIEZvciBleGFtcGxlLCB0aGVyZSBpcyBubyBtYWdpYyBpbnZvbHZlZCBm
        b3IgdGVzdC1jYXNlCiAgICBkaXNjb3ZlcnkuCgogICAgICAgICJBZ2Fpbiwg
        SSBjYW4ndCBwcmFpc2UgZW5vdWdoIHRoZSBpZGVhIG9mIGEgdGVzdGluZy9z
        cGVjaW5nCiAgICAgICAgIGZyYW1ld29yayB0aGF0IEkgY2FuIGFjdHVhbGx5
        IHJlYWQgaW4gZnVsbCBpbiBvbmUgc2l0dGluZyEiCgogICAgICAgIC0tIFBp
        b3RyIFN6b3Rrb3dza2kKCiAgICBDb21wYXJpbmcgdG8gcnNwZWM6CgogICAg
        ICAgIHJzcGVjIGlzIGEgdGVzdGluZyBEU0wuIG1pbml0ZXN0IGlzIHJ1Ynku
        CgogICAgICAgIC0tIEFkYW0gSGF3a2lucywgIkJvdyBCZWZvcmUgTWluaVRl
        c3QiCgogICAgbWluaXRlc3QgZG9lc24ndCByZWludmVudCBhbnl0aGluZyB0
        aGF0IHJ1YnkgYWxyZWFkeSBwcm92aWRlcywgbGlrZToKICAgIGNsYXNzZXMs
        IG1vZHVsZXMsIGluaGVyaXRhbmNlLCBtZXRob2RzLiBUaGlzIG1lYW5zIHlv
        dSBvbmx5IGhhdmUgdG8KICAgIGxlYXJuIHJ1YnkgdG8gdXNlIG1pbml0ZXN0
        IGFuZCBhbGwgb2YgeW91ciByZWd1bGFyIE9PIHByYWN0aWNlcyBsaWtlCiAg
        ICBleHRyYWN0LW1ldGhvZCByZWZhY3RvcmluZ3Mgc3RpbGwgYXBwbHkuCiAg
        ZG93bmxvYWRzX2NvdW50OiAxMDc5NTQKICBtZXRhZGF0YToge30KICBudW1i
        ZXI6IDUuMi4zCiAgc3VtbWFyeTogbWluaXRlc3QgcHJvdmlkZXMgYSBjb21w
        bGV0ZSBzdWl0ZSBvZiB0ZXN0aW5nIGZhY2lsaXRpZXMgc3VwcG9ydGluZyBU
        REQsCiAgICBCREQsIG1vY2tpbmcsIGFuZCBiZW5jaG1hcmtpbmcKICBwbGF0
        Zm9ybTogcnVieQogIHJ1YnlnZW1zX3ZlcnNpb246ICI+PSAwIgogIHJ1Ynlf
        dmVyc2lvbjogCiAgcHJlcmVsZWFzZTogZmFsc2UKICBsaWNlbnNlczoKICAt
        IE1JVAogIHJlcXVpcmVtZW50czogW10KICBzaGE6IGIxNWMzMWJiMjQ1OWMy
        NmI5NjFmODNhN2RiMDkzZDU4NTIxMWU3NWRiMjRmZjYyZjk3NzA2NzVjNTEw
        NjM4NWUKLSBhdXRob3JzOiBSeWFuIERhdmlzCiAgYnVpbHRfYXQ6ICcyMDE0
        LTAxLTIyVDAwOjAwOjAwLjAwMFonCiAgY3JlYXRlZF9hdDogJzIwMTQtMDEt
        MjJUMjI6NTc6MDUuODE3WicKICBkZXNjcmlwdGlvbjogfC0KICAgIG1pbml0
        ZXN0IHByb3ZpZGVzIGEgY29tcGxldGUgc3VpdGUgb2YgdGVzdGluZyBmYWNp
        bGl0aWVzIHN1cHBvcnRpbmcKICAgIFRERCwgQkRELCBtb2NraW5nLCBhbmQg
        YmVuY2htYXJraW5nLgoKICAgICAgICAiSSBoYWQgYSBjbGFzcyB3aXRoIEpp
        bSBXZWlyaWNoIG9uIHRlc3RpbmcgbGFzdCB3ZWVrIGFuZCB3ZSB3ZXJlCiAg
        ICAgICAgIGFsbG93ZWQgdG8gY2hvb3NlIG91ciB0ZXN0aW5nIGZyYW1ld29y
        a3MuIEtpcmsgSGFpbmVzIGFuZCBJIHdlcmUKICAgICAgICAgcGFpcmVkIHVw
        IGFuZCB3ZSBjcmFja2VkIG9wZW4gdGhlIGNvZGUgZm9yIGEgZmV3IHRlc3QK
        ICAgICAgICAgZnJhbWV3b3Jrcy4uLgoKICAgICAgICAgSSBNVVNUIHNheSB0
        aGF0IG1pbml0ZXN0IGlzICp2ZXJ5KiByZWFkYWJsZSAvIHVuZGVyc3RhbmRh
        YmxlCiAgICAgICAgIGNvbXBhcmVkIHRvIHRoZSAnb3RoZXIgdHdvJyBvcHRp
        b25zIHdlIGxvb2tlZCBhdC4gTmljZWx5IGRvbmUgYW5kCiAgICAgICAgIHRo
        YW5rIHlvdSBmb3IgaGVscGluZyB1cyBrZWVwIG91ciBtZW50YWwgc2FuaXR5
        LiIKCiAgICAgICAgLS0gV2F5bmUgRS4gU2VndWluCgogICAgbWluaXRlc3Qv
        dW5pdCBpcyBhIHNtYWxsIGFuZCBpbmNyZWRpYmx5IGZhc3QgdW5pdCB0ZXN0
        aW5nIGZyYW1ld29yay4KICAgIEl0IHByb3ZpZGVzIGEgcmljaCBzZXQgb2Yg
        YXNzZXJ0aW9ucyB0byBtYWtlIHlvdXIgdGVzdHMgY2xlYW4gYW5kCiAgICBy
        ZWFkYWJsZS4KCiAgICBtaW5pdGVzdC9zcGVjIGlzIGEgZnVuY3Rpb25hbGx5
        IGNvbXBsZXRlIHNwZWMgZW5naW5lLiBJdCBob29rcyBvbnRvCiAgICBtaW5p
        dGVzdC91bml0IGFuZCBzZWFtbGVzc2x5IGJyaWRnZXMgdGVzdCBhc3NlcnRp
        b25zIG92ZXIgdG8gc3BlYwogICAgZXhwZWN0YXRpb25zLgoKICAgIG1pbml0
        ZXN0L2JlbmNobWFyayBpcyBhbiBhd2Vzb21lIHdheSB0byBhc3NlcnQgdGhl
        IHBlcmZvcm1hbmNlIG9mIHlvdXIKICAgIGFsZ29yaXRobXMgaW4gYSByZXBl
        YXRhYmxlIG1hbm5lci4gTm93IHlvdSBjYW4gYXNzZXJ0IHRoYXQgeW91ciBu
        ZXdiCiAgICBjby13b3JrZXIgZG9lc24ndCByZXBsYWNlIHlvdXIgbGluZWFy
        IGFsZ29yaXRobSB3aXRoIGFuIGV4cG9uZW50aWFsCiAgICBvbmUhCgogICAg
        bWluaXRlc3QvbW9jayBieSBTdGV2ZW4gQmFrZXIsIGlzIGEgYmVhdXRpZnVs
        bHkgdGlueSBtb2NrIChhbmQgc3R1YikKICAgIG9iamVjdCBmcmFtZXdvcmsu
        CgogICAgbWluaXRlc3QvcHJpZGUgc2hvd3MgcHJpZGUgaW4gdGVzdGluZyBh
        bmQgYWRkcyBjb2xvcmluZyB0byB5b3VyIHRlc3QKICAgIG91dHB1dC4gSSBn
        dWVzcyBpdCBpcyBhbiBleGFtcGxlIG9mIGhvdyB0byB3cml0ZSBJTyBwaXBl
        cyB0b28uIDpQCgogICAgbWluaXRlc3QvdW5pdCBpcyBtZWFudCB0byBoYXZl
        IGEgY2xlYW4gaW1wbGVtZW50YXRpb24gZm9yIGxhbmd1YWdlCiAgICBpbXBs
        ZW1lbnRvcnMgdGhhdCBuZWVkIGEgbWluaW1hbCBzZXQgb2YgbWV0aG9kcyB0
        byBib290c3RyYXAgYSB3b3JraW5nCiAgICB0ZXN0IHN1aXRlLiBGb3IgZXhh
        bXBsZSwgdGhlcmUgaXMgbm8gbWFnaWMgaW52b2x2ZWQgZm9yIHRlc3QtY2Fz
        ZQogICAgZGlzY292ZXJ5LgoKICAgICAgICAiQWdhaW4sIEkgY2FuJ3QgcHJh
        aXNlIGVub3VnaCB0aGUgaWRlYSBvZiBhIHRlc3Rpbmcvc3BlY2luZwogICAg
        ICAgICBmcmFtZXdvcmsgdGhhdCBJIGNhbiBhY3R1YWxseSByZWFkIGluIGZ1
        bGwgaW4gb25lIHNpdHRpbmchIgoKICAgICAgICAtLSBQaW90ciBTem90a293
        c2tpCgogICAgQ29tcGFyaW5nIHRvIHJzcGVjOgoKICAgICAgICByc3BlYyBp
        cyBhIHRlc3RpbmcgRFNMLiBtaW5pdGVzdCBpcyBydWJ5LgoKICAgICAgICAt
        LSBBZGFtIEhhd2tpbnMsICJCb3cgQmVmb3JlIE1pbmlUZXN0IgoKICAgIG1p
        bml0ZXN0IGRvZXNuJ3QgcmVpbnZlbnQgYW55dGhpbmcgdGhhdCBydWJ5IGFs
        cmVhZHkgcHJvdmlkZXMsIGxpa2U6CiAgICBjbGFzc2VzLCBtb2R1bGVzLCBp
        bmhlcml0YW5jZSwgbWV0aG9kcy4gVGhpcyBtZWFucyB5b3Ugb25seSBoYXZl
        IHRvCiAgICBsZWFybiBydWJ5IHRvIHVzZSBtaW5pdGVzdCBhbmQgYWxsIG9m
        IHlvdXIgcmVndWxhciBPTyBwcmFjdGljZXMgbGlrZQogICAgZXh0cmFjdC1t
        ZXRob2QgcmVmYWN0b3JpbmdzIHN0aWxsIGFwcGx5LgogIGRvd25sb2Fkc19j
        b3VudDogNzEyMzcKICBtZXRhZGF0YToge30KICBudW1iZXI6IDUuMi4yCiAg
        c3VtbWFyeTogbWluaXRlc3QgcHJvdmlkZXMgYSBjb21wbGV0ZSBzdWl0ZSBv
        ZiB0ZXN0aW5nIGZhY2lsaXRpZXMgc3VwcG9ydGluZyBUREQsCiAgICBCREQs
        IG1vY2tpbmcsIGFuZCBiZW5jaG1hcmtpbmcKICBwbGF0Zm9ybTogcnVieQog
        IHJ1YnlnZW1zX3ZlcnNpb246ICI+PSAwIgogIHJ1YnlfdmVyc2lvbjogCiAg
        cHJlcmVsZWFzZTogZmFsc2UKICBsaWNlbnNlczoKICAtIE1JVAogIHJlcXVp
        cmVtZW50czogW10KICBzaGE6IGIxNzJlNzEzZmY4ODhiMWQ1OTM4Nzg3YTQz
        MzhiYmI2Njg3MGIwMDM1OTY1OTVkNDYzODlkYmE5ZmVjMzE2NWMKLSBhdXRo
        b3JzOiBSeWFuIERhdmlzCiAgYnVpbHRfYXQ6ICcyMDE0LTAxLTA4VDAwOjAw
        OjAwLjAwMFonCiAgY3JlYXRlZF9hdDogJzIwMTQtMDEtMDhUMDA6MTg6NDgu
        MDg1WicKICBkZXNjcmlwdGlvbjogfC0KICAgIG1pbml0ZXN0IHByb3ZpZGVz
        IGEgY29tcGxldGUgc3VpdGUgb2YgdGVzdGluZyBmYWNpbGl0aWVzIHN1cHBv
        cnRpbmcKICAgIFRERCwgQkRELCBtb2NraW5nLCBhbmQgYmVuY2htYXJraW5n
        LgoKICAgICAgICAiSSBoYWQgYSBjbGFzcyB3aXRoIEppbSBXZWlyaWNoIG9u
        IHRlc3RpbmcgbGFzdCB3ZWVrIGFuZCB3ZSB3ZXJlCiAgICAgICAgIGFsbG93
        ZWQgdG8gY2hvb3NlIG91ciB0ZXN0aW5nIGZyYW1ld29ya3MuIEtpcmsgSGFp
        bmVzIGFuZCBJIHdlcmUKICAgICAgICAgcGFpcmVkIHVwIGFuZCB3ZSBjcmFj
        a2VkIG9wZW4gdGhlIGNvZGUgZm9yIGEgZmV3IHRlc3QKICAgICAgICAgZnJh
        bWV3b3Jrcy4uLgoKICAgICAgICAgSSBNVVNUIHNheSB0aGF0IG1pbml0ZXN0
        IGlzICp2ZXJ5KiByZWFkYWJsZSAvIHVuZGVyc3RhbmRhYmxlCiAgICAgICAg
        IGNvbXBhcmVkIHRvIHRoZSAnb3RoZXIgdHdvJyBvcHRpb25zIHdlIGxvb2tl
        ZCBhdC4gTmljZWx5IGRvbmUgYW5kCiAgICAgICAgIHRoYW5rIHlvdSBmb3Ig
        aGVscGluZyB1cyBrZWVwIG91ciBtZW50YWwgc2FuaXR5LiIKCiAgICAgICAg
        LS0gV2F5bmUgRS4gU2VndWluCgogICAgbWluaXRlc3QvdW5pdCBpcyBhIHNt
        YWxsIGFuZCBpbmNyZWRpYmx5IGZhc3QgdW5pdCB0ZXN0aW5nIGZyYW1ld29y
        ay4KICAgIEl0IHByb3ZpZGVzIGEgcmljaCBzZXQgb2YgYXNzZXJ0aW9ucyB0
        byBtYWtlIHlvdXIgdGVzdHMgY2xlYW4gYW5kCiAgICByZWFkYWJsZS4KCiAg
        ICBtaW5pdGVzdC9zcGVjIGlzIGEgZnVuY3Rpb25hbGx5IGNvbXBsZXRlIHNw
        ZWMgZW5naW5lLiBJdCBob29rcyBvbnRvCiAgICBtaW5pdGVzdC91bml0IGFu
        ZCBzZWFtbGVzc2x5IGJyaWRnZXMgdGVzdCBhc3NlcnRpb25zIG92ZXIgdG8g
        c3BlYwogICAgZXhwZWN0YXRpb25zLgoKICAgIG1pbml0ZXN0L2JlbmNobWFy
        ayBpcyBhbiBhd2Vzb21lIHdheSB0byBhc3NlcnQgdGhlIHBlcmZvcm1hbmNl
        IG9mIHlvdXIKICAgIGFsZ29yaXRobXMgaW4gYSByZXBlYXRhYmxlIG1hbm5l
        ci4gTm93IHlvdSBjYW4gYXNzZXJ0IHRoYXQgeW91ciBuZXdiCiAgICBjby13
        b3JrZXIgZG9lc24ndCByZXBsYWNlIHlvdXIgbGluZWFyIGFsZ29yaXRobSB3
        aXRoIGFuIGV4cG9uZW50aWFsCiAgICBvbmUhCgogICAgbWluaXRlc3QvbW9j
        ayBieSBTdGV2ZW4gQmFrZXIsIGlzIGEgYmVhdXRpZnVsbHkgdGlueSBtb2Nr
        IChhbmQgc3R1YikKICAgIG9iamVjdCBmcmFtZXdvcmsuCgogICAgbWluaXRl
        c3QvcHJpZGUgc2hvd3MgcHJpZGUgaW4gdGVzdGluZyBhbmQgYWRkcyBjb2xv
        cmluZyB0byB5b3VyIHRlc3QKICAgIG91dHB1dC4gSSBndWVzcyBpdCBpcyBh
        biBleGFtcGxlIG9mIGhvdyB0byB3cml0ZSBJTyBwaXBlcyB0b28uIDpQCgog
        ICAgbWluaXRlc3QvdW5pdCBpcyBtZWFudCB0byBoYXZlIGEgY2xlYW4gaW1w
        bGVtZW50YXRpb24gZm9yIGxhbmd1YWdlCiAgICBpbXBsZW1lbnRvcnMgdGhh
        dCBuZWVkIGEgbWluaW1hbCBzZXQgb2YgbWV0aG9kcyB0byBib290c3RyYXAg
        YSB3b3JraW5nCiAgICB0ZXN0IHN1aXRlLiBGb3IgZXhhbXBsZSwgdGhlcmUg
        aXMgbm8gbWFnaWMgaW52b2x2ZWQgZm9yIHRlc3QtY2FzZQogICAgZGlzY292
        ZXJ5LgoKICAgICAgICAiQWdhaW4sIEkgY2FuJ3QgcHJhaXNlIGVub3VnaCB0
        aGUgaWRlYSBvZiBhIHRlc3Rpbmcvc3BlY2luZwogICAgICAgICBmcmFtZXdv
        cmsgdGhhdCBJIGNhbiBhY3R1YWxseSByZWFkIGluIGZ1bGwgaW4gb25lIHNp
        dHRpbmchIgoKICAgICAgICAtLSBQaW90ciBTem90a293c2tpCgogICAgQ29t
        cGFyaW5nIHRvIHJzcGVjOgoKICAgICAgICByc3BlYyBpcyBhIHRlc3Rpbmcg
        RFNMLiBtaW5pdGVzdCBpcyBydWJ5LgoKICAgICAgICAtLSBBZGFtIEhhd2tp
        bnMsICJCb3cgQmVmb3JlIE1pbmlUZXN0IgoKICAgIG1pbml0ZXN0IGRvZXNu
        J3QgcmVpbnZlbnQgYW55dGhpbmcgdGhhdCBydWJ5IGFscmVhZHkgcHJvdmlk
        ZXMsIGxpa2U6CiAgICBjbGFzc2VzLCBtb2R1bGVzLCBpbmhlcml0YW5jZSwg
        bWV0aG9kcy4gVGhpcyBtZWFucyB5b3Ugb25seSBoYXZlIHRvCiAgICBsZWFy
        biBydWJ5IHRvIHVzZSBtaW5pdGVzdCBhbmQgYWxsIG9mIHlvdXIgcmVndWxh
        ciBPTyBwcmFjdGljZXMgbGlrZQogICAgZXh0cmFjdC1tZXRob2QgcmVmYWN0
        b3JpbmdzIHN0aWxsIGFwcGx5LgogIGRvd25sb2Fkc19jb3VudDogNjE1ODgK
        ICBtZXRhZGF0YToge30KICBudW1iZXI6IDUuMi4xCiAgc3VtbWFyeTogbWlu
        aXRlc3QgcHJvdmlkZXMgYSBjb21wbGV0ZSBzdWl0ZSBvZiB0ZXN0aW5nIGZh
        Y2lsaXRpZXMgc3VwcG9ydGluZyBUREQsCiAgICBCREQsIG1vY2tpbmcsIGFu
        ZCBiZW5jaG1hcmtpbmcKICBwbGF0Zm9ybTogcnVieQogIHJ1YnlnZW1zX3Zl
        cnNpb246ICI+PSAwIgogIHJ1YnlfdmVyc2lvbjogCiAgcHJlcmVsZWFzZTog
        ZmFsc2UKICBsaWNlbnNlczoKICAtIE1JVAogIHJlcXVpcmVtZW50czogW10K
        ICBzaGE6IDE1ZTk2ZTA1MDNhOTRiZDdkN2Q1NmNmZWU1ZDk1NTlhOGQ4MDgw
        NWJjYjIwZWNlNWZhZjk5OTdmNzBkMjNjZjYKLSBhdXRob3JzOiBSeWFuIERh
        dmlzCiAgYnVpbHRfYXQ6ICcyMDEzLTEyLTE0VDAwOjAwOjAwLjAwMFonCiAg
        Y3JlYXRlZF9hdDogJzIwMTMtMTItMTRUMDE6MDU6MzkuNTA1WicKICBkZXNj
        cmlwdGlvbjogfC0KICAgIG1pbml0ZXN0IHByb3ZpZGVzIGEgY29tcGxldGUg
        c3VpdGUgb2YgdGVzdGluZyBmYWNpbGl0aWVzIHN1cHBvcnRpbmcKICAgIFRE
        RCwgQkRELCBtb2NraW5nLCBhbmQgYmVuY2htYXJraW5nLgoKICAgICAgICAi
        SSBoYWQgYSBjbGFzcyB3aXRoIEppbSBXZWlyaWNoIG9uIHRlc3RpbmcgbGFz
        dCB3ZWVrIGFuZCB3ZSB3ZXJlCiAgICAgICAgIGFsbG93ZWQgdG8gY2hvb3Nl
        IG91ciB0ZXN0aW5nIGZyYW1ld29ya3MuIEtpcmsgSGFpbmVzIGFuZCBJIHdl
        cmUKICAgICAgICAgcGFpcmVkIHVwIGFuZCB3ZSBjcmFja2VkIG9wZW4gdGhl
        IGNvZGUgZm9yIGEgZmV3IHRlc3QKICAgICAgICAgZnJhbWV3b3Jrcy4uLgoK
        ICAgICAgICAgSSBNVVNUIHNheSB0aGF0IG1pbml0ZXN0IGlzICp2ZXJ5KiBy
        ZWFkYWJsZSAvIHVuZGVyc3RhbmRhYmxlCiAgICAgICAgIGNvbXBhcmVkIHRv
        IHRoZSAnb3RoZXIgdHdvJyBvcHRpb25zIHdlIGxvb2tlZCBhdC4gTmljZWx5
        IGRvbmUgYW5kCiAgICAgICAgIHRoYW5rIHlvdSBmb3IgaGVscGluZyB1cyBr
        ZWVwIG91ciBtZW50YWwgc2FuaXR5LiIKCiAgICAgICAgLS0gV2F5bmUgRS4g
        U2VndWluCgogICAgbWluaXRlc3QvdW5pdCBpcyBhIHNtYWxsIGFuZCBpbmNy
        ZWRpYmx5IGZhc3QgdW5pdCB0ZXN0aW5nIGZyYW1ld29yay4KICAgIEl0IHBy
        b3ZpZGVzIGEgcmljaCBzZXQgb2YgYXNzZXJ0aW9ucyB0byBtYWtlIHlvdXIg
        dGVzdHMgY2xlYW4gYW5kCiAgICByZWFkYWJsZS4KCiAgICBtaW5pdGVzdC9z
        cGVjIGlzIGEgZnVuY3Rpb25hbGx5IGNvbXBsZXRlIHNwZWMgZW5naW5lLiBJ
        dCBob29rcyBvbnRvCiAgICBtaW5pdGVzdC91bml0IGFuZCBzZWFtbGVzc2x5
        IGJyaWRnZXMgdGVzdCBhc3NlcnRpb25zIG92ZXIgdG8gc3BlYwogICAgZXhw
        ZWN0YXRpb25zLgoKICAgIG1pbml0ZXN0L2JlbmNobWFyayBpcyBhbiBhd2Vz
        b21lIHdheSB0byBhc3NlcnQgdGhlIHBlcmZvcm1hbmNlIG9mIHlvdXIKICAg
        IGFsZ29yaXRobXMgaW4gYSByZXBlYXRhYmxlIG1hbm5lci4gTm93IHlvdSBj
        YW4gYXNzZXJ0IHRoYXQgeW91ciBuZXdiCiAgICBjby13b3JrZXIgZG9lc24n
        dCByZXBsYWNlIHlvdXIgbGluZWFyIGFsZ29yaXRobSB3aXRoIGFuIGV4cG9u
        ZW50aWFsCiAgICBvbmUhCgogICAgbWluaXRlc3QvbW9jayBieSBTdGV2ZW4g
        QmFrZXIsIGlzIGEgYmVhdXRpZnVsbHkgdGlueSBtb2NrIChhbmQgc3R1YikK
        ICAgIG9iamVjdCBmcmFtZXdvcmsuCgogICAgbWluaXRlc3QvcHJpZGUgc2hv
        d3MgcHJpZGUgaW4gdGVzdGluZyBhbmQgYWRkcyBjb2xvcmluZyB0byB5b3Vy
        IHRlc3QKICAgIG91dHB1dC4gSSBndWVzcyBpdCBpcyBhbiBleGFtcGxlIG9m
        IGhvdyB0byB3cml0ZSBJTyBwaXBlcyB0b28uIDpQCgogICAgbWluaXRlc3Qv
        dW5pdCBpcyBtZWFudCB0byBoYXZlIGEgY2xlYW4gaW1wbGVtZW50YXRpb24g
        Zm9yIGxhbmd1YWdlCiAgICBpbXBsZW1lbnRvcnMgdGhhdCBuZWVkIGEgbWlu
        aW1hbCBzZXQgb2YgbWV0aG9kcyB0byBib290c3RyYXAgYSB3b3JraW5nCiAg
        ICB0ZXN0IHN1aXRlLiBGb3IgZXhhbXBsZSwgdGhlcmUgaXMgbm8gbWFnaWMg
        aW52b2x2ZWQgZm9yIHRlc3QtY2FzZQogICAgZGlzY292ZXJ5LgoKICAgICAg
        ICAiQWdhaW4sIEkgY2FuJ3QgcHJhaXNlIGVub3VnaCB0aGUgaWRlYSBvZiBh
        IHRlc3Rpbmcvc3BlY2luZwogICAgICAgICBmcmFtZXdvcmsgdGhhdCBJIGNh
        biBhY3R1YWxseSByZWFkIGluIGZ1bGwgaW4gb25lIHNpdHRpbmchIgoKICAg
        ICAgICAtLSBQaW90ciBTem90a293c2tpCgogICAgQ29tcGFyaW5nIHRvIHJz
        cGVjOgoKICAgICAgICByc3BlYyBpcyBhIHRlc3RpbmcgRFNMLiBtaW5pdGVz
        dCBpcyBydWJ5LgoKICAgICAgICAtLSBBZGFtIEhhd2tpbnMsICJCb3cgQmVm
        b3JlIE1pbmlUZXN0IgoKICAgIG1pbml0ZXN0IGRvZXNuJ3QgcmVpbnZlbnQg
        YW55dGhpbmcgdGhhdCBydWJ5IGFscmVhZHkgcHJvdmlkZXMsIGxpa2U6CiAg
        ICBjbGFzc2VzLCBtb2R1bGVzLCBpbmhlcml0YW5jZSwgbWV0aG9kcy4gVGhp
        cyBtZWFucyB5b3Ugb25seSBoYXZlIHRvCiAgICBsZWFybiBydWJ5IHRvIHVz
        ZSBtaW5pdGVzdCBhbmQgYWxsIG9mIHlvdXIgcmVndWxhciBPTyBwcmFjdGlj
        ZXMgbGlrZQogICAgZXh0cmFjdC1tZXRob2QgcmVmYWN0b3JpbmdzIHN0aWxs
        IGFwcGx5LgogIGRvd25sb2Fkc19jb3VudDogODEzMTgKICBtZXRhZGF0YTog
        e30KICBudW1iZXI6IDUuMi4wCiAgc3VtbWFyeTogbWluaXRlc3QgcHJvdmlk
        ZXMgYSBjb21wbGV0ZSBzdWl0ZSBvZiB0ZXN0aW5nIGZhY2lsaXRpZXMgc3Vw
        cG9ydGluZyBUREQsCiAgICBCREQsIG1vY2tpbmcsIGFuZCBiZW5jaG1hcmtp
        bmcKICBwbGF0Zm9ybTogcnVieQogIHJ1YnlnZW1zX3ZlcnNpb246ICI+PSAw
        IgogIHJ1YnlfdmVyc2lvbjogCiAgcHJlcmVsZWFzZTogZmFsc2UKICBsaWNl
        bnNlczoKICAtIE1JVAogIHJlcXVpcmVtZW50czogW10KICBzaGE6IDk2ZmVm
        ZmZlZTUzYjM5ZmIyZjcyYzZjYzkxZmFlYWU5MmQ5NjAyODVmYWY2NDg2ZmNk
        NWUxYTgxODIwNjVmZGQKLSBhdXRob3JzOiBSeWFuIERhdmlzCiAgYnVpbHRf
        YXQ6ICcyMDEzLTEyLTA2VDAwOjAwOjAwLjAwMFonCiAgY3JlYXRlZF9hdDog
        JzIwMTMtMTItMDZUMDA6MTU6MTcuMjQwWicKICBkZXNjcmlwdGlvbjogfC0K
        ICAgIG1pbml0ZXN0IHByb3ZpZGVzIGEgY29tcGxldGUgc3VpdGUgb2YgdGVz
        dGluZyBmYWNpbGl0aWVzIHN1cHBvcnRpbmcKICAgIFRERCwgQkRELCBtb2Nr
        aW5nLCBhbmQgYmVuY2htYXJraW5nLgoKICAgICAgICAiSSBoYWQgYSBjbGFz
        cyB3aXRoIEppbSBXZWlyaWNoIG9uIHRlc3RpbmcgbGFzdCB3ZWVrIGFuZCB3
        ZSB3ZXJlCiAgICAgICAgIGFsbG93ZWQgdG8gY2hvb3NlIG91ciB0ZXN0aW5n
        IGZyYW1ld29ya3MuIEtpcmsgSGFpbmVzIGFuZCBJIHdlcmUKICAgICAgICAg
        cGFpcmVkIHVwIGFuZCB3ZSBjcmFja2VkIG9wZW4gdGhlIGNvZGUgZm9yIGEg
        ZmV3IHRlc3QKICAgICAgICAgZnJhbWV3b3Jrcy4uLgoKICAgICAgICAgSSBN
        VVNUIHNheSB0aGF0IG1pbml0ZXN0IGlzICp2ZXJ5KiByZWFkYWJsZSAvIHVu
        ZGVyc3RhbmRhYmxlCiAgICAgICAgIGNvbXBhcmVkIHRvIHRoZSAnb3RoZXIg
        dHdvJyBvcHRpb25zIHdlIGxvb2tlZCBhdC4gTmljZWx5IGRvbmUgYW5kCiAg
        ICAgICAgIHRoYW5rIHlvdSBmb3IgaGVscGluZyB1cyBrZWVwIG91ciBtZW50
        YWwgc2FuaXR5LiIKCiAgICAgICAgLS0gV2F5bmUgRS4gU2VndWluCgogICAg
        bWluaXRlc3QvdW5pdCBpcyBhIHNtYWxsIGFuZCBpbmNyZWRpYmx5IGZhc3Qg
        dW5pdCB0ZXN0aW5nIGZyYW1ld29yay4KICAgIEl0IHByb3ZpZGVzIGEgcmlj
        aCBzZXQgb2YgYXNzZXJ0aW9ucyB0byBtYWtlIHlvdXIgdGVzdHMgY2xlYW4g
        YW5kCiAgICByZWFkYWJsZS4KCiAgICBtaW5pdGVzdC9zcGVjIGlzIGEgZnVu
        Y3Rpb25hbGx5IGNvbXBsZXRlIHNwZWMgZW5naW5lLiBJdCBob29rcyBvbnRv
        CiAgICBtaW5pdGVzdC91bml0IGFuZCBzZWFtbGVzc2x5IGJyaWRnZXMgdGVz
        dCBhc3NlcnRpb25zIG92ZXIgdG8gc3BlYwogICAgZXhwZWN0YXRpb25zLgoK
        ICAgIG1pbml0ZXN0L2JlbmNobWFyayBpcyBhbiBhd2Vzb21lIHdheSB0byBh
        c3NlcnQgdGhlIHBlcmZvcm1hbmNlIG9mIHlvdXIKICAgIGFsZ29yaXRobXMg
        aW4gYSByZXBlYXRhYmxlIG1hbm5lci4gTm93IHlvdSBjYW4gYXNzZXJ0IHRo
        YXQgeW91ciBuZXdiCiAgICBjby13b3JrZXIgZG9lc24ndCByZXBsYWNlIHlv
        dXIgbGluZWFyIGFsZ29yaXRobSB3aXRoIGFuIGV4cG9uZW50aWFsCiAgICBv
        bmUhCgogICAgbWluaXRlc3QvbW9jayBieSBTdGV2ZW4gQmFrZXIsIGlzIGEg
        YmVhdXRpZnVsbHkgdGlueSBtb2NrIChhbmQgc3R1YikKICAgIG9iamVjdCBm
        cmFtZXdvcmsuCgogICAgbWluaXRlc3QvcHJpZGUgc2hvd3MgcHJpZGUgaW4g
        dGVzdGluZyBhbmQgYWRkcyBjb2xvcmluZyB0byB5b3VyIHRlc3QKICAgIG91
        dHB1dC4gSSBndWVzcyBpdCBpcyBhbiBleGFtcGxlIG9mIGhvdyB0byB3cml0
        ZSBJTyBwaXBlcyB0b28uIDpQCgogICAgbWluaXRlc3QvdW5pdCBpcyBtZWFu
        dCB0byBoYXZlIGEgY2xlYW4gaW1wbGVtZW50YXRpb24gZm9yIGxhbmd1YWdl
        CiAgICBpbXBsZW1lbnRvcnMgdGhhdCBuZWVkIGEgbWluaW1hbCBzZXQgb2Yg
        bWV0aG9kcyB0byBib290c3RyYXAgYSB3b3JraW5nCiAgICB0ZXN0IHN1aXRl
        LiBGb3IgZXhhbXBsZSwgdGhlcmUgaXMgbm8gbWFnaWMgaW52b2x2ZWQgZm9y
        IHRlc3QtY2FzZQogICAgZGlzY292ZXJ5LgoKICAgICAgICAiQWdhaW4sIEkg
        Y2FuJ3QgcHJhaXNlIGVub3VnaCB0aGUgaWRlYSBvZiBhIHRlc3Rpbmcvc3Bl
        Y2luZwogICAgICAgICBmcmFtZXdvcmsgdGhhdCBJIGNhbiBhY3R1YWxseSBy
        ZWFkIGluIGZ1bGwgaW4gb25lIHNpdHRpbmchIgoKICAgICAgICAtLSBQaW90
        ciBTem90a293c2tpCgogICAgQ29tcGFyaW5nIHRvIHJzcGVjOgoKICAgICAg
        ICByc3BlYyBpcyBhIHRlc3RpbmcgRFNMLiBtaW5pdGVzdCBpcyBydWJ5LgoK
        ICAgICAgICAtLSBBZGFtIEhhd2tpbnMsICJCb3cgQmVmb3JlIE1pbmlUZXN0
        IgoKICAgIG1pbml0ZXN0IGRvZXNuJ3QgcmVpbnZlbnQgYW55dGhpbmcgdGhh
        dCBydWJ5IGFscmVhZHkgcHJvdmlkZXMsIGxpa2U6CiAgICBjbGFzc2VzLCBt
        b2R1bGVzLCBpbmhlcml0YW5jZSwgbWV0aG9kcy4gVGhpcyBtZWFucyB5b3Ug
        b25seSBoYXZlIHRvCiAgICBsZWFybiBydWJ5IHRvIHVzZSBtaW5pdGVzdCBh
        bmQgYWxsIG9mIHlvdXIgcmVndWxhciBPTyBwcmFjdGljZXMgbGlrZQogICAg
        ZXh0cmFjdC1tZXRob2QgcmVmYWN0b3JpbmdzIHN0aWxsIGFwcGx5LgogIGRv
        d25sb2Fkc19jb3VudDogMzA0MjY3CiAgbWV0YWRhdGE6IHt9CiAgbnVtYmVy
        OiA1LjEuMAogIHN1bW1hcnk6IG1pbml0ZXN0IHByb3ZpZGVzIGEgY29tcGxl
        dGUgc3VpdGUgb2YgdGVzdGluZyBmYWNpbGl0aWVzIHN1cHBvcnRpbmcgVERE
        LAogICAgQkRELCBtb2NraW5nLCBhbmQgYmVuY2htYXJraW5nCiAgcGxhdGZv
        cm06IHJ1YnkKICBydWJ5Z2Vtc192ZXJzaW9uOiAiPj0gMCIKICBydWJ5X3Zl
        cnNpb246IAogIHByZXJlbGVhc2U6IGZhbHNlCiAgbGljZW5zZXM6CiAgLSBN
        SVQKICByZXF1aXJlbWVudHM6IFtdCiAgc2hhOiA5NWM5MGIxN2Y1ODgyZTcz
        ODQ4OWQwODJjZjVmMTAzMmJmNWEzMzJhN2FkMjVlNDI3NTE4ZTk0ZWMxZmZi
        Nzg3Ci0gYXV0aG9yczogUnlhbiBEYXZpcwogIGJ1aWx0X2F0OiAnMjAxMy0w
        OS0yMVQwMDowMDowMC4wMDBaJwogIGNyZWF0ZWRfYXQ6ICcyMDEzLTA5LTIx
        VDAwOjM2OjI5LjI2OFonCiAgZGVzY3JpcHRpb246IHwtCiAgICBtaW5pdGVz
        dCBwcm92aWRlcyBhIGNvbXBsZXRlIHN1aXRlIG9mIHRlc3RpbmcgZmFjaWxp
        dGllcyBzdXBwb3J0aW5nCiAgICBUREQsIEJERCwgbW9ja2luZywgYW5kIGJl
        bmNobWFya2luZy4KCiAgICAgICAgIkkgaGFkIGEgY2xhc3Mgd2l0aCBKaW0g
        V2VpcmljaCBvbiB0ZXN0aW5nIGxhc3Qgd2VlayBhbmQgd2Ugd2VyZQogICAg
        ICAgICBhbGxvd2VkIHRvIGNob29zZSBvdXIgdGVzdGluZyBmcmFtZXdvcmtz
        LiBLaXJrIEhhaW5lcyBhbmQgSSB3ZXJlCiAgICAgICAgIHBhaXJlZCB1cCBh
        bmQgd2UgY3JhY2tlZCBvcGVuIHRoZSBjb2RlIGZvciBhIGZldyB0ZXN0CiAg
        ICAgICAgIGZyYW1ld29ya3MuLi4KCiAgICAgICAgIEkgTVVTVCBzYXkgdGhh
        dCBtaW5pdGVzdCBpcyAqdmVyeSogcmVhZGFibGUgLyB1bmRlcnN0YW5kYWJs
        ZQogICAgICAgICBjb21wYXJlZCB0byB0aGUgJ290aGVyIHR3bycgb3B0aW9u
        cyB3ZSBsb29rZWQgYXQuIE5pY2VseSBkb25lIGFuZAogICAgICAgICB0aGFu
        ayB5b3UgZm9yIGhlbHBpbmcgdXMga2VlcCBvdXIgbWVudGFsIHNhbml0eS4i
        CgogICAgICAgIC0tIFdheW5lIEUuIFNlZ3VpbgoKICAgIG1pbml0ZXN0L3Vu
        aXQgaXMgYSBzbWFsbCBhbmQgaW5jcmVkaWJseSBmYXN0IHVuaXQgdGVzdGlu
        ZyBmcmFtZXdvcmsuCiAgICBJdCBwcm92aWRlcyBhIHJpY2ggc2V0IG9mIGFz
        c2VydGlvbnMgdG8gbWFrZSB5b3VyIHRlc3RzIGNsZWFuIGFuZAogICAgcmVh
        ZGFibGUuCgogICAgbWluaXRlc3Qvc3BlYyBpcyBhIGZ1bmN0aW9uYWxseSBj
        b21wbGV0ZSBzcGVjIGVuZ2luZS4gSXQgaG9va3Mgb250bwogICAgbWluaXRl
        c3QvdW5pdCBhbmQgc2VhbWxlc3NseSBicmlkZ2VzIHRlc3QgYXNzZXJ0aW9u
        cyBvdmVyIHRvIHNwZWMKICAgIGV4cGVjdGF0aW9ucy4KCiAgICBtaW5pdGVz
        dC9iZW5jaG1hcmsgaXMgYW4gYXdlc29tZSB3YXkgdG8gYXNzZXJ0IHRoZSBw
        ZXJmb3JtYW5jZSBvZiB5b3VyCiAgICBhbGdvcml0aG1zIGluIGEgcmVwZWF0
        YWJsZSBtYW5uZXIuIE5vdyB5b3UgY2FuIGFzc2VydCB0aGF0IHlvdXIgbmV3
        YgogICAgY28td29ya2VyIGRvZXNuJ3QgcmVwbGFjZSB5b3VyIGxpbmVhciBh
        bGdvcml0aG0gd2l0aCBhbiBleHBvbmVudGlhbAogICAgb25lIQoKICAgIG1p
        bml0ZXN0L21vY2sgYnkgU3RldmVuIEJha2VyLCBpcyBhIGJlYXV0aWZ1bGx5
        IHRpbnkgbW9jayAoYW5kIHN0dWIpCiAgICBvYmplY3QgZnJhbWV3b3JrLgoK
        ICAgIG1pbml0ZXN0L3ByaWRlIHNob3dzIHByaWRlIGluIHRlc3RpbmcgYW5k
        IGFkZHMgY29sb3JpbmcgdG8geW91ciB0ZXN0CiAgICBvdXRwdXQuIEkgZ3Vl
        c3MgaXQgaXMgYW4gZXhhbXBsZSBvZiBob3cgdG8gd3JpdGUgSU8gcGlwZXMg
        dG9vLiA6UAoKICAgIG1pbml0ZXN0L3VuaXQgaXMgbWVhbnQgdG8gaGF2ZSBh
        IGNsZWFuIGltcGxlbWVudGF0aW9uIGZvciBsYW5ndWFnZQogICAgaW1wbGVt
        ZW50b3JzIHRoYXQgbmVlZCBhIG1pbmltYWwgc2V0IG9mIG1ldGhvZHMgdG8g
        Ym9vdHN0cmFwIGEgd29ya2luZwogICAgdGVzdCBzdWl0ZS4gRm9yIGV4YW1w
        bGUsIHRoZXJlIGlzIG5vIG1hZ2ljIGludm9sdmVkIGZvciB0ZXN0LWNhc2UK
        ICAgIGRpc2NvdmVyeS4KCiAgICAgICAgIkFnYWluLCBJIGNhbid0IHByYWlz
        ZSBlbm91Z2ggdGhlIGlkZWEgb2YgYSB0ZXN0aW5nL3NwZWNpbmcKICAgICAg
        ICAgZnJhbWV3b3JrIHRoYXQgSSBjYW4gYWN0dWFsbHkgcmVhZCBpbiBmdWxs
        IGluIG9uZSBzaXR0aW5nISIKCiAgICAgICAgLS0gUGlvdHIgU3pvdGtvd3Nr
        aQoKICAgIENvbXBhcmluZyB0byByc3BlYzoKCiAgICAgICAgcnNwZWMgaXMg
        YSB0ZXN0aW5nIERTTC4gbWluaXRlc3QgaXMgcnVieS4KCiAgICAgICAgLS0g
        QWRhbSBIYXdraW5zLCAiQm93IEJlZm9yZSBNaW5pVGVzdCIKCiAgICBtaW5p
        dGVzdCBkb2Vzbid0IHJlaW52ZW50IGFueXRoaW5nIHRoYXQgcnVieSBhbHJl
        YWR5IHByb3ZpZGVzLCBsaWtlOgogICAgY2xhc3NlcywgbW9kdWxlcywgaW5o
        ZXJpdGFuY2UsIG1ldGhvZHMuIFRoaXMgbWVhbnMgeW91IG9ubHkgaGF2ZSB0
        bwogICAgbGVhcm4gcnVieSB0byB1c2UgbWluaXRlc3QgYW5kIGFsbCBvZiB5
        b3VyIHJlZ3VsYXIgT08gcHJhY3RpY2VzIGxpa2UKICAgIGV4dHJhY3QtbWV0
        aG9kIHJlZmFjdG9yaW5ncyBzdGlsbCBhcHBseS4KICBkb3dubG9hZHNfY291
        bnQ6IDIzMDAwOQogIG1ldGFkYXRhOiB7fQogIG51bWJlcjogNS4wLjgKICBz
        dW1tYXJ5OiBtaW5pdGVzdCBwcm92aWRlcyBhIGNvbXBsZXRlIHN1aXRlIG9m
        IHRlc3RpbmcgZmFjaWxpdGllcyBzdXBwb3J0aW5nIFRERCwKICAgIEJERCwg
        bW9ja2luZywgYW5kIGJlbmNobWFya2luZwogIHBsYXRmb3JtOiBydWJ5CiAg
        cnVieWdlbXNfdmVyc2lvbjogIj49IDAiCiAgcnVieV92ZXJzaW9uOiAKICBw
        cmVyZWxlYXNlOiBmYWxzZQogIGxpY2Vuc2VzOgogIC0gTUlUCiAgcmVxdWly
        ZW1lbnRzOiBbXQogIHNoYTogNzg5MzM0NDFmM2Y1YTZiMDcyZTIyZWRkZjFl
        ZTE5YzdmYmM0Nzk4N2U5YmQ1ZmE1NDQ0ZTkwNWFkNjhiM2JkOAotIGF1dGhv
        cnM6IFJ5YW4gRGF2aXMKICBidWlsdF9hdDogJzIwMTMtMDktMDVUMDA6MDA6
        MDAuMDAwWicKICBjcmVhdGVkX2F0OiAnMjAxMy0wOS0wNVQyMToyNzo1NC42
        MjVaJwogIGRlc2NyaXB0aW9uOiB8LQogICAgbWluaXRlc3QgcHJvdmlkZXMg
        YSBjb21wbGV0ZSBzdWl0ZSBvZiB0ZXN0aW5nIGZhY2lsaXRpZXMgc3VwcG9y
        dGluZwogICAgVERELCBCREQsIG1vY2tpbmcsIGFuZCBiZW5jaG1hcmtpbmcu
        CgogICAgICAgICJJIGhhZCBhIGNsYXNzIHdpdGggSmltIFdlaXJpY2ggb24g
        dGVzdGluZyBsYXN0IHdlZWsgYW5kIHdlIHdlcmUKICAgICAgICAgYWxsb3dl
        ZCB0byBjaG9vc2Ugb3VyIHRlc3RpbmcgZnJhbWV3b3Jrcy4gS2lyayBIYWlu
        ZXMgYW5kIEkgd2VyZQogICAgICAgICBwYWlyZWQgdXAgYW5kIHdlIGNyYWNr
        ZWQgb3BlbiB0aGUgY29kZSBmb3IgYSBmZXcgdGVzdAogICAgICAgICBmcmFt
        ZXdvcmtzLi4uCgogICAgICAgICBJIE1VU1Qgc2F5IHRoYXQgbWluaXRlc3Qg
        aXMgKnZlcnkqIHJlYWRhYmxlIC8gdW5kZXJzdGFuZGFibGUKICAgICAgICAg
        Y29tcGFyZWQgdG8gdGhlICdvdGhlciB0d28nIG9wdGlvbnMgd2UgbG9va2Vk
        IGF0LiBOaWNlbHkgZG9uZSBhbmQKICAgICAgICAgdGhhbmsgeW91IGZvciBo
        ZWxwaW5nIHVzIGtlZXAgb3VyIG1lbnRhbCBzYW5pdHkuIgoKICAgICAgICAt
        LSBXYXluZSBFLiBTZWd1aW4KCiAgICBtaW5pdGVzdC91bml0IGlzIGEgc21h
        bGwgYW5kIGluY3JlZGlibHkgZmFzdCB1bml0IHRlc3RpbmcgZnJhbWV3b3Jr
        LgogICAgSXQgcHJvdmlkZXMgYSByaWNoIHNldCBvZiBhc3NlcnRpb25zIHRv
        IG1ha2UgeW91ciB0ZXN0cyBjbGVhbiBhbmQKICAgIHJlYWRhYmxlLgoKICAg
        IG1pbml0ZXN0L3NwZWMgaXMgYSBmdW5jdGlvbmFsbHkgY29tcGxldGUgc3Bl
        YyBlbmdpbmUuIEl0IGhvb2tzIG9udG8KICAgIG1pbml0ZXN0L3VuaXQgYW5k
        IHNlYW1sZXNzbHkgYnJpZGdlcyB0ZXN0IGFzc2VydGlvbnMgb3ZlciB0byBz
        cGVjCiAgICBleHBlY3RhdGlvbnMuCgogICAgbWluaXRlc3QvYmVuY2htYXJr
        IGlzIGFuIGF3ZXNvbWUgd2F5IHRvIGFzc2VydCB0aGUgcGVyZm9ybWFuY2Ug
        b2YgeW91cgogICAgYWxnb3JpdGhtcyBpbiBhIHJlcGVhdGFibGUgbWFubmVy
        LiBOb3cgeW91IGNhbiBhc3NlcnQgdGhhdCB5b3VyIG5ld2IKICAgIGNvLXdv
        cmtlciBkb2Vzbid0IHJlcGxhY2UgeW91ciBsaW5lYXIgYWxnb3JpdGhtIHdp
        dGggYW4gZXhwb25lbnRpYWwKICAgIG9uZSEKCiAgICBtaW5pdGVzdC9tb2Nr
        IGJ5IFN0ZXZlbiBCYWtlciwgaXMgYSBiZWF1dGlmdWxseSB0aW55IG1vY2sg
        KGFuZCBzdHViKQogICAgb2JqZWN0IGZyYW1ld29yay4KCiAgICBtaW5pdGVz
        dC9wcmlkZSBzaG93cyBwcmlkZSBpbiB0ZXN0aW5nIGFuZCBhZGRzIGNvbG9y
        aW5nIHRvIHlvdXIgdGVzdAogICAgb3V0cHV0LiBJIGd1ZXNzIGl0IGlzIGFu
        IGV4YW1wbGUgb2YgaG93IHRvIHdyaXRlIElPIHBpcGVzIHRvby4gOlAKCiAg
        ICBtaW5pdGVzdC91bml0IGlzIG1lYW50IHRvIGhhdmUgYSBjbGVhbiBpbXBs
        ZW1lbnRhdGlvbiBmb3IgbGFuZ3VhZ2UKICAgIGltcGxlbWVudG9ycyB0aGF0
        IG5lZWQgYSBtaW5pbWFsIHNldCBvZiBtZXRob2RzIHRvIGJvb3RzdHJhcCBh
        IHdvcmtpbmcKICAgIHRlc3Qgc3VpdGUuIEZvciBleGFtcGxlLCB0aGVyZSBp
        cyBubyBtYWdpYyBpbnZvbHZlZCBmb3IgdGVzdC1jYXNlCiAgICBkaXNjb3Zl
        cnkuCgogICAgICAgICJBZ2FpbiwgSSBjYW4ndCBwcmFpc2UgZW5vdWdoIHRo
        ZSBpZGVhIG9mIGEgdGVzdGluZy9zcGVjaW5nCiAgICAgICAgIGZyYW1ld29y
        ayB0aGF0IEkgY2FuIGFjdHVhbGx5IHJlYWQgaW4gZnVsbCBpbiBvbmUgc2l0
        dGluZyEiCgogICAgICAgIC0tIFBpb3RyIFN6b3Rrb3dza2kKCiAgICBDb21w
        YXJpbmcgdG8gcnNwZWM6CgogICAgICAgIHJzcGVjIGlzIGEgdGVzdGluZyBE
        U0wuIG1pbml0ZXN0IGlzIHJ1YnkuCgogICAgICAgIC0tIEFkYW0gSGF3a2lu
        cywgIkJvdyBCZWZvcmUgTWluaVRlc3QiCgogICAgbWluaXRlc3QgZG9lc24n
        dCByZWludmVudCBhbnl0aGluZyB0aGF0IHJ1YnkgYWxyZWFkeSBwcm92aWRl
        cywgbGlrZToKICAgIGNsYXNzZXMsIG1vZHVsZXMsIGluaGVyaXRhbmNlLCBt
        ZXRob2RzLiBUaGlzIG1lYW5zIHlvdSBvbmx5IGhhdmUgdG8KICAgIGxlYXJu
        IHJ1YnkgdG8gdXNlIG1pbml0ZXN0IGFuZCBhbGwgb2YgeW91ciByZWd1bGFy
        IE9PIHByYWN0aWNlcyBsaWtlCiAgICBleHRyYWN0LW1ldGhvZCByZWZhY3Rv
        cmluZ3Mgc3RpbGwgYXBwbHkuCiAgZG93bmxvYWRzX2NvdW50OiAzMTY2OQog
        IG1ldGFkYXRhOiB7fQogIG51bWJlcjogNS4wLjcKICBzdW1tYXJ5OiBtaW5p
        dGVzdCBwcm92aWRlcyBhIGNvbXBsZXRlIHN1aXRlIG9mIHRlc3RpbmcgZmFj
        aWxpdGllcyBzdXBwb3J0aW5nIFRERCwKICAgIEJERCwgbW9ja2luZywgYW5k
        IGJlbmNobWFya2luZwogIHBsYXRmb3JtOiBydWJ5CiAgcnVieWdlbXNfdmVy
        c2lvbjogIj49IDAiCiAgcnVieV92ZXJzaW9uOiAKICBwcmVyZWxlYXNlOiBm
        YWxzZQogIGxpY2Vuc2VzOgogIC0gTUlUCiAgcmVxdWlyZW1lbnRzOiBbXQog
        IHNoYTogNGIzODZkOWY0ZDQzN2QxOWM3YzZjZjIwNzFiNWZlNDUyZjg0MWQx
        MWIwZDRhN2NiZjA5YzQxNzgxOTYzMmQwNgotIGF1dGhvcnM6IFJ5YW4gRGF2
        aXMKICBidWlsdF9hdDogJzIwMTMtMDYtMjhUMDA6MDA6MDAuMDAwWicKICBj
        cmVhdGVkX2F0OiAnMjAxMy0wNi0yOFQyMzo0NDo0OS40MzVaJwogIGRlc2Ny
        aXB0aW9uOiB8LQogICAgbWluaXRlc3QgcHJvdmlkZXMgYSBjb21wbGV0ZSBz
        dWl0ZSBvZiB0ZXN0aW5nIGZhY2lsaXRpZXMgc3VwcG9ydGluZwogICAgVERE
        LCBCREQsIG1vY2tpbmcsIGFuZCBiZW5jaG1hcmtpbmcuCgogICAgICAgICJJ
        IGhhZCBhIGNsYXNzIHdpdGggSmltIFdlaXJpY2ggb24gdGVzdGluZyBsYXN0
        IHdlZWsgYW5kIHdlIHdlcmUKICAgICAgICAgYWxsb3dlZCB0byBjaG9vc2Ug
        b3VyIHRlc3RpbmcgZnJhbWV3b3Jrcy4gS2lyayBIYWluZXMgYW5kIEkgd2Vy
        ZQogICAgICAgICBwYWlyZWQgdXAgYW5kIHdlIGNyYWNrZWQgb3BlbiB0aGUg
        Y29kZSBmb3IgYSBmZXcgdGVzdAogICAgICAgICBmcmFtZXdvcmtzLi4uCgog
        ICAgICAgICBJIE1VU1Qgc2F5IHRoYXQgbWluaXRlc3QgaXMgKnZlcnkqIHJl
        YWRhYmxlIC8gdW5kZXJzdGFuZGFibGUKICAgICAgICAgY29tcGFyZWQgdG8g
        dGhlICdvdGhlciB0d28nIG9wdGlvbnMgd2UgbG9va2VkIGF0LiBOaWNlbHkg
        ZG9uZSBhbmQKICAgICAgICAgdGhhbmsgeW91IGZvciBoZWxwaW5nIHVzIGtl
        ZXAgb3VyIG1lbnRhbCBzYW5pdHkuIgoKICAgICAgICAtLSBXYXluZSBFLiBT
        ZWd1aW4KCiAgICBtaW5pdGVzdC91bml0IGlzIGEgc21hbGwgYW5kIGluY3Jl
        ZGlibHkgZmFzdCB1bml0IHRlc3RpbmcgZnJhbWV3b3JrLgogICAgSXQgcHJv
        dmlkZXMgYSByaWNoIHNldCBvZiBhc3NlcnRpb25zIHRvIG1ha2UgeW91ciB0
        ZXN0cyBjbGVhbiBhbmQKICAgIHJlYWRhYmxlLgoKICAgIG1pbml0ZXN0L3Nw
        ZWMgaXMgYSBmdW5jdGlvbmFsbHkgY29tcGxldGUgc3BlYyBlbmdpbmUuIEl0
        IGhvb2tzIG9udG8KICAgIG1pbml0ZXN0L3VuaXQgYW5kIHNlYW1sZXNzbHkg
        YnJpZGdlcyB0ZXN0IGFzc2VydGlvbnMgb3ZlciB0byBzcGVjCiAgICBleHBl
        Y3RhdGlvbnMuCgogICAgbWluaXRlc3QvYmVuY2htYXJrIGlzIGFuIGF3ZXNv
        bWUgd2F5IHRvIGFzc2VydCB0aGUgcGVyZm9ybWFuY2Ugb2YgeW91cgogICAg
        YWxnb3JpdGhtcyBpbiBhIHJlcGVhdGFibGUgbWFubmVyLiBOb3cgeW91IGNh
        biBhc3NlcnQgdGhhdCB5b3VyIG5ld2IKICAgIGNvLXdvcmtlciBkb2Vzbid0
        IHJlcGxhY2UgeW91ciBsaW5lYXIgYWxnb3JpdGhtIHdpdGggYW4gZXhwb25l
        bnRpYWwKICAgIG9uZSEKCiAgICBtaW5pdGVzdC9tb2NrIGJ5IFN0ZXZlbiBC
        YWtlciwgaXMgYSBiZWF1dGlmdWxseSB0aW55IG1vY2sgKGFuZCBzdHViKQog
        ICAgb2JqZWN0IGZyYW1ld29yay4KCiAgICBtaW5pdGVzdC9wcmlkZSBzaG93
        cyBwcmlkZSBpbiB0ZXN0aW5nIGFuZCBhZGRzIGNvbG9yaW5nIHRvIHlvdXIg
        dGVzdAogICAgb3V0cHV0LiBJIGd1ZXNzIGl0IGlzIGFuIGV4YW1wbGUgb2Yg
        aG93IHRvIHdyaXRlIElPIHBpcGVzIHRvby4gOlAKCiAgICBtaW5pdGVzdC91
        bml0IGlzIG1lYW50IHRvIGhhdmUgYSBjbGVhbiBpbXBsZW1lbnRhdGlvbiBm
        b3IgbGFuZ3VhZ2UKICAgIGltcGxlbWVudG9ycyB0aGF0IG5lZWQgYSBtaW5p
        bWFsIHNldCBvZiBtZXRob2RzIHRvIGJvb3RzdHJhcCBhIHdvcmtpbmcKICAg
        IHRlc3Qgc3VpdGUuIEZvciBleGFtcGxlLCB0aGVyZSBpcyBubyBtYWdpYyBp
        bnZvbHZlZCBmb3IgdGVzdC1jYXNlCiAgICBkaXNjb3ZlcnkuCgogICAgICAg
        ICJBZ2FpbiwgSSBjYW4ndCBwcmFpc2UgZW5vdWdoIHRoZSBpZGVhIG9mIGEg
        dGVzdGluZy9zcGVjaW5nCiAgICAgICAgIGZyYW1ld29yayB0aGF0IEkgY2Fu
        IGFjdHVhbGx5IHJlYWQgaW4gZnVsbCBpbiBvbmUgc2l0dGluZyEiCgogICAg
        ICAgIC0tIFBpb3RyIFN6b3Rrb3dza2kKCiAgICBDb21wYXJpbmcgdG8gcnNw
        ZWM6CgogICAgICAgIHJzcGVjIGlzIGEgdGVzdGluZyBEU0wuIG1pbml0ZXN0
        IGlzIHJ1YnkuCgogICAgICAgIC0tIEFkYW0gSGF3a2lucywgIkJvdyBCZWZv
        cmUgTWluaVRlc3QiCgogICAgbWluaXRlc3QgZG9lc24ndCByZWludmVudCBh
        bnl0aGluZyB0aGF0IHJ1YnkgYWxyZWFkeSBwcm92aWRlcywgbGlrZToKICAg
        IGNsYXNzZXMsIG1vZHVsZXMsIGluaGVyaXRhbmNlLCBtZXRob2RzLiBUaGlz
        IG1lYW5zIHlvdSBvbmx5IGhhdmUgdG8KICAgIGxlYXJuIHJ1YnkgdG8gdXNl
        IG1pbml0ZXN0IGFuZCBhbGwgb2YgeW91ciByZWd1bGFyIE9PIHByYWN0aWNl
        cyBsaWtlCiAgICBleHRyYWN0LW1ldGhvZCByZWZhY3RvcmluZ3Mgc3RpbGwg
        YXBwbHkuCiAgZG93bmxvYWRzX2NvdW50OiAxMzM0NTkKICBtZXRhZGF0YTog
        e30KICBudW1iZXI6IDUuMC42CiAgc3VtbWFyeTogbWluaXRlc3QgcHJvdmlk
        ZXMgYSBjb21wbGV0ZSBzdWl0ZSBvZiB0ZXN0aW5nIGZhY2lsaXRpZXMgc3Vw
        cG9ydGluZyBUREQsCiAgICBCREQsIG1vY2tpbmcsIGFuZCBiZW5jaG1hcmtp
        bmcKICBwbGF0Zm9ybTogcnVieQogIHJ1YnlnZW1zX3ZlcnNpb246ICI+PSAw
        IgogIHJ1YnlfdmVyc2lvbjogCiAgcHJlcmVsZWFzZTogZmFsc2UKICBsaWNl
        bnNlczogW10KICByZXF1aXJlbWVudHM6IAogIHNoYTogZmJjYmFkOGFmOWZl
        YTBlNjQyZTQwZjIxYTk5ZjYxYTBjNjljNTYxYjdhOTA5YWM4YWRjZTc5YWYz
        YzYxNWQxNgotIGF1dGhvcnM6IFJ5YW4gRGF2aXMKICBidWlsdF9hdDogJzIw
        MTMtMDYtMjFUMDA6MDA6MDAuMDAwWicKICBjcmVhdGVkX2F0OiAnMjAxMy0w
        Ni0yMVQwMDozNjozOS4xOTRaJwogIGRlc2NyaXB0aW9uOiB8LQogICAgbWlu
        aXRlc3QgcHJvdmlkZXMgYSBjb21wbGV0ZSBzdWl0ZSBvZiB0ZXN0aW5nIGZh
        Y2lsaXRpZXMgc3VwcG9ydGluZwogICAgVERELCBCREQsIG1vY2tpbmcsIGFu
        ZCBiZW5jaG1hcmtpbmcuCgogICAgICAgICJJIGhhZCBhIGNsYXNzIHdpdGgg
        SmltIFdlaXJpY2ggb24gdGVzdGluZyBsYXN0IHdlZWsgYW5kIHdlIHdlcmUK
        ICAgICAgICAgYWxsb3dlZCB0byBjaG9vc2Ugb3VyIHRlc3RpbmcgZnJhbWV3
        b3Jrcy4gS2lyayBIYWluZXMgYW5kIEkgd2VyZQogICAgICAgICBwYWlyZWQg
        dXAgYW5kIHdlIGNyYWNrZWQgb3BlbiB0aGUgY29kZSBmb3IgYSBmZXcgdGVz
        dAogICAgICAgICBmcmFtZXdvcmtzLi4uCgogICAgICAgICBJIE1VU1Qgc2F5
        IHRoYXQgbWluaXRlc3QgaXMgKnZlcnkqIHJlYWRhYmxlIC8gdW5kZXJzdGFu
        ZGFibGUKICAgICAgICAgY29tcGFyZWQgdG8gdGhlICdvdGhlciB0d28nIG9w
        dGlvbnMgd2UgbG9va2VkIGF0LiBOaWNlbHkgZG9uZSBhbmQKICAgICAgICAg
        dGhhbmsgeW91IGZvciBoZWxwaW5nIHVzIGtlZXAgb3VyIG1lbnRhbCBzYW5p
        dHkuIgoKICAgICAgICAtLSBXYXluZSBFLiBTZWd1aW4KCiAgICBtaW5pdGVz
        dC91bml0IGlzIGEgc21hbGwgYW5kIGluY3JlZGlibHkgZmFzdCB1bml0IHRl
        c3RpbmcgZnJhbWV3b3JrLgogICAgSXQgcHJvdmlkZXMgYSByaWNoIHNldCBv
        ZiBhc3NlcnRpb25zIHRvIG1ha2UgeW91ciB0ZXN0cyBjbGVhbiBhbmQKICAg
        IHJlYWRhYmxlLgoKICAgIG1pbml0ZXN0L3NwZWMgaXMgYSBmdW5jdGlvbmFs
        bHkgY29tcGxldGUgc3BlYyBlbmdpbmUuIEl0IGhvb2tzIG9udG8KICAgIG1p
        bml0ZXN0L3VuaXQgYW5kIHNlYW1sZXNzbHkgYnJpZGdlcyB0ZXN0IGFzc2Vy
        dGlvbnMgb3ZlciB0byBzcGVjCiAgICBleHBlY3RhdGlvbnMuCgogICAgbWlu
        aXRlc3QvYmVuY2htYXJrIGlzIGFuIGF3ZXNvbWUgd2F5IHRvIGFzc2VydCB0
        aGUgcGVyZm9ybWFuY2Ugb2YgeW91cgogICAgYWxnb3JpdGhtcyBpbiBhIHJl
        cGVhdGFibGUgbWFubmVyLiBOb3cgeW91IGNhbiBhc3NlcnQgdGhhdCB5b3Vy
        IG5ld2IKICAgIGNvLXdvcmtlciBkb2Vzbid0IHJlcGxhY2UgeW91ciBsaW5l
        YXIgYWxnb3JpdGhtIHdpdGggYW4gZXhwb25lbnRpYWwKICAgIG9uZSEKCiAg
        ICBtaW5pdGVzdC9tb2NrIGJ5IFN0ZXZlbiBCYWtlciwgaXMgYSBiZWF1dGlm
        dWxseSB0aW55IG1vY2sgKGFuZCBzdHViKQogICAgb2JqZWN0IGZyYW1ld29y
        ay4KCiAgICBtaW5pdGVzdC9wcmlkZSBzaG93cyBwcmlkZSBpbiB0ZXN0aW5n
        IGFuZCBhZGRzIGNvbG9yaW5nIHRvIHlvdXIgdGVzdAogICAgb3V0cHV0LiBJ
        IGd1ZXNzIGl0IGlzIGFuIGV4YW1wbGUgb2YgaG93IHRvIHdyaXRlIElPIHBp
        cGVzIHRvby4gOlAKCiAgICBtaW5pdGVzdC91bml0IGlzIG1lYW50IHRvIGhh
        dmUgYSBjbGVhbiBpbXBsZW1lbnRhdGlvbiBmb3IgbGFuZ3VhZ2UKICAgIGlt
        cGxlbWVudG9ycyB0aGF0IG5lZWQgYSBtaW5pbWFsIHNldCBvZiBtZXRob2Rz
        IHRvIGJvb3RzdHJhcCBhIHdvcmtpbmcKICAgIHRlc3Qgc3VpdGUuIEZvciBl
        eGFtcGxlLCB0aGVyZSBpcyBubyBtYWdpYyBpbnZvbHZlZCBmb3IgdGVzdC1j
        YXNlCiAgICBkaXNjb3ZlcnkuCgogICAgICAgICJBZ2FpbiwgSSBjYW4ndCBw
        cmFpc2UgZW5vdWdoIHRoZSBpZGVhIG9mIGEgdGVzdGluZy9zcGVjaW5nCiAg
        ICAgICAgIGZyYW1ld29yayB0aGF0IEkgY2FuIGFjdHVhbGx5IHJlYWQgaW4g
        ZnVsbCBpbiBvbmUgc2l0dGluZyEiCgogICAgICAgIC0tIFBpb3RyIFN6b3Rr
        b3dza2kKCiAgICBDb21wYXJpbmcgdG8gcnNwZWM6CgogICAgICAgIHJzcGVj
        IGlzIGEgdGVzdGluZyBEU0wuIG1pbml0ZXN0IGlzIHJ1YnkuCgogICAgICAg
        IC0tIEFkYW0gSGF3a2lucywgIkJvdyBCZWZvcmUgTWluaVRlc3QiCgogICAg
        bWluaXRlc3QgZG9lc24ndCByZWludmVudCBhbnl0aGluZyB0aGF0IHJ1Ynkg
        YWxyZWFkeSBwcm92aWRlcywgbGlrZToKICAgIGNsYXNzZXMsIG1vZHVsZXMs
        IGluaGVyaXRhbmNlLCBtZXRob2RzLiBUaGlzIG1lYW5zIHlvdSBvbmx5IGhh
        dmUgdG8KICAgIGxlYXJuIHJ1YnkgdG8gdXNlIG1pbml0ZXN0IGFuZCBhbGwg
        b2YgeW91ciByZWd1bGFyIE9PIHByYWN0aWNlcyBsaWtlCiAgICBleHRyYWN0
        LW1ldGhvZCByZWZhY3RvcmluZ3Mgc3RpbGwgYXBwbHkuCiAgZG93bmxvYWRz
        X2NvdW50OiAyMTYyMAogIG1ldGFkYXRhOiB7fQogIG51bWJlcjogNS4wLjUK
        ICBzdW1tYXJ5OiBtaW5pdGVzdCBwcm92aWRlcyBhIGNvbXBsZXRlIHN1aXRl
        IG9mIHRlc3RpbmcgZmFjaWxpdGllcyBzdXBwb3J0aW5nIFRERCwKICAgIEJE
        RCwgbW9ja2luZywgYW5kIGJlbmNobWFya2luZwogIHBsYXRmb3JtOiBydWJ5
        CiAgcnVieWdlbXNfdmVyc2lvbjogIj49IDAiCiAgcnVieV92ZXJzaW9uOiAK
        ICBwcmVyZWxlYXNlOiBmYWxzZQogIGxpY2Vuc2VzOiBbXQogIHJlcXVpcmVt
        ZW50czogCiAgc2hhOiBmNDFhZmUyN2VmNTM2MjQyM2EwOWEzZGYxYmVhMzdk
        N2ViZmExYmQ5YWY0NGVhYTA0ZWViNTI2ZTcwMTZmODIyCi0gYXV0aG9yczog
        UnlhbiBEYXZpcwogIGJ1aWx0X2F0OiAnMjAxMy0wNi0wN1QwMDowMDowMC4w
        MDBaJwogIGNyZWF0ZWRfYXQ6ICcyMDEzLTA2LTA3VDIyOjI3OjExLjAzNVon
        CiAgZGVzY3JpcHRpb246IHwtCiAgICBtaW5pdGVzdCBwcm92aWRlcyBhIGNv
        bXBsZXRlIHN1aXRlIG9mIHRlc3RpbmcgZmFjaWxpdGllcyBzdXBwb3J0aW5n
        CiAgICBUREQsIEJERCwgbW9ja2luZywgYW5kIGJlbmNobWFya2luZy4KCiAg
        ICAgICAgIkkgaGFkIGEgY2xhc3Mgd2l0aCBKaW0gV2VpcmljaCBvbiB0ZXN0
        aW5nIGxhc3Qgd2VlayBhbmQgd2Ugd2VyZQogICAgICAgICBhbGxvd2VkIHRv
        IGNob29zZSBvdXIgdGVzdGluZyBmcmFtZXdvcmtzLiBLaXJrIEhhaW5lcyBh
        bmQgSSB3ZXJlCiAgICAgICAgIHBhaXJlZCB1cCBhbmQgd2UgY3JhY2tlZCBv
        cGVuIHRoZSBjb2RlIGZvciBhIGZldyB0ZXN0CiAgICAgICAgIGZyYW1ld29y
        a3MuLi4KCiAgICAgICAgIEkgTVVTVCBzYXkgdGhhdCBtaW5pdGVzdCBpcyAq
        dmVyeSogcmVhZGFibGUgLyB1bmRlcnN0YW5kYWJsZQogICAgICAgICBjb21w
        YXJlZCB0byB0aGUgJ290aGVyIHR3bycgb3B0aW9ucyB3ZSBsb29rZWQgYXQu
        IE5pY2VseSBkb25lIGFuZAogICAgICAgICB0aGFuayB5b3UgZm9yIGhlbHBp
        bmcgdXMga2VlcCBvdXIgbWVudGFsIHNhbml0eS4iCgogICAgICAgIC0tIFdh
        eW5lIEUuIFNlZ3VpbgoKICAgIG1pbml0ZXN0L3VuaXQgaXMgYSBzbWFsbCBh
        bmQgaW5jcmVkaWJseSBmYXN0IHVuaXQgdGVzdGluZyBmcmFtZXdvcmsuCiAg
        ICBJdCBwcm92aWRlcyBhIHJpY2ggc2V0IG9mIGFzc2VydGlvbnMgdG8gbWFr
        ZSB5b3VyIHRlc3RzIGNsZWFuIGFuZAogICAgcmVhZGFibGUuCgogICAgbWlu
        aXRlc3Qvc3BlYyBpcyBhIGZ1bmN0aW9uYWxseSBjb21wbGV0ZSBzcGVjIGVu
        Z2luZS4gSXQgaG9va3Mgb250bwogICAgbWluaXRlc3QvdW5pdCBhbmQgc2Vh
        bWxlc3NseSBicmlkZ2VzIHRlc3QgYXNzZXJ0aW9ucyBvdmVyIHRvIHNwZWMK
        ICAgIGV4cGVjdGF0aW9ucy4KCiAgICBtaW5pdGVzdC9iZW5jaG1hcmsgaXMg
        YW4gYXdlc29tZSB3YXkgdG8gYXNzZXJ0IHRoZSBwZXJmb3JtYW5jZSBvZiB5
        b3VyCiAgICBhbGdvcml0aG1zIGluIGEgcmVwZWF0YWJsZSBtYW5uZXIuIE5v
        dyB5b3UgY2FuIGFzc2VydCB0aGF0IHlvdXIgbmV3YgogICAgY28td29ya2Vy
        IGRvZXNuJ3QgcmVwbGFjZSB5b3VyIGxpbmVhciBhbGdvcml0aG0gd2l0aCBh
        biBleHBvbmVudGlhbAogICAgb25lIQoKICAgIG1pbml0ZXN0L21vY2sgYnkg
        U3RldmVuIEJha2VyLCBpcyBhIGJlYXV0aWZ1bGx5IHRpbnkgbW9jayAoYW5k
        IHN0dWIpCiAgICBvYmplY3QgZnJhbWV3b3JrLgoKICAgIG1pbml0ZXN0L3By
        aWRlIHNob3dzIHByaWRlIGluIHRlc3RpbmcgYW5kIGFkZHMgY29sb3Jpbmcg
        dG8geW91ciB0ZXN0CiAgICBvdXRwdXQuIEkgZ3Vlc3MgaXQgaXMgYW4gZXhh
        bXBsZSBvZiBob3cgdG8gd3JpdGUgSU8gcGlwZXMgdG9vLiA6UAoKICAgIG1p
        bml0ZXN0L3VuaXQgaXMgbWVhbnQgdG8gaGF2ZSBhIGNsZWFuIGltcGxlbWVu
        dGF0aW9uIGZvciBsYW5ndWFnZQogICAgaW1wbGVtZW50b3JzIHRoYXQgbmVl
        ZCBhIG1pbmltYWwgc2V0IG9mIG1ldGhvZHMgdG8gYm9vdHN0cmFwIGEgd29y
        a2luZwogICAgdGVzdCBzdWl0ZS4gRm9yIGV4YW1wbGUsIHRoZXJlIGlzIG5v
        IG1hZ2ljIGludm9sdmVkIGZvciB0ZXN0LWNhc2UKICAgIGRpc2NvdmVyeS4K
        CiAgICAgICAgIkFnYWluLCBJIGNhbid0IHByYWlzZSBlbm91Z2ggdGhlIGlk
        ZWEgb2YgYSB0ZXN0aW5nL3NwZWNpbmcKICAgICAgICAgZnJhbWV3b3JrIHRo
        YXQgSSBjYW4gYWN0dWFsbHkgcmVhZCBpbiBmdWxsIGluIG9uZSBzaXR0aW5n
        ISIKCiAgICAgICAgLS0gUGlvdHIgU3pvdGtvd3NraQoKICAgIENvbXBhcmlu
        ZyB0byByc3BlYzoKCiAgICAgICAgcnNwZWMgaXMgYSB0ZXN0aW5nIERTTC4g
        bWluaXRlc3QgaXMgcnVieS4KCiAgICAgICAgLS0gQWRhbSBIYXdraW5zLCAi
        Qm93IEJlZm9yZSBNaW5pVGVzdCIKCiAgICBtaW5pdGVzdCBkb2Vzbid0IHJl
        aW52ZW50IGFueXRoaW5nIHRoYXQgcnVieSBhbHJlYWR5IHByb3ZpZGVzLCBs
        aWtlOgogICAgY2xhc3NlcywgbW9kdWxlcywgaW5oZXJpdGFuY2UsIG1ldGhv
        ZHMuIFRoaXMgbWVhbnMgeW91IG9ubHkgaGF2ZSB0bwogICAgbGVhcm4gcnVi
        eSB0byB1c2UgbWluaXRlc3QgYW5kIGFsbCBvZiB5b3VyIHJlZ3VsYXIgT08g
        cHJhY3RpY2VzIGxpa2UKICAgIGV4dHJhY3QtbWV0aG9kIHJlZmFjdG9yaW5n
        cyBzdGlsbCBhcHBseS4KICBkb3dubG9hZHNfY291bnQ6IDM0MjI5CiAgbWV0
        YWRhdGE6IHt9CiAgbnVtYmVyOiA1LjAuNAogIHN1bW1hcnk6IG1pbml0ZXN0
        IHByb3ZpZGVzIGEgY29tcGxldGUgc3VpdGUgb2YgdGVzdGluZyBmYWNpbGl0
        aWVzIHN1cHBvcnRpbmcgVERELAogICAgQkRELCBtb2NraW5nLCBhbmQgYmVu
        Y2htYXJraW5nCiAgcGxhdGZvcm06IHJ1YnkKICBydWJ5Z2Vtc192ZXJzaW9u
        OiAiPj0gMCIKICBydWJ5X3ZlcnNpb246IAogIHByZXJlbGVhc2U6IGZhbHNl
        CiAgbGljZW5zZXM6IFtdCiAgcmVxdWlyZW1lbnRzOiAKICBzaGE6IGY2MzRl
        OGY1NjgwYjNiN2U5ZmFmZmU5NzQyYmJjNjM0YzVjZTYzOWY2ZTMyNDYzMWZh
        OGY5MjJmZjU5NDI2MDMKLSBhdXRob3JzOiBSeWFuIERhdmlzCiAgYnVpbHRf
        YXQ6ICcyMDEzLTA1LTMwVDAwOjAwOjAwLjAwMFonCiAgY3JlYXRlZF9hdDog
        JzIwMTMtMDUtMzBUMDA6NDY6MzQuNTYzWicKICBkZXNjcmlwdGlvbjogfC0K
        ICAgIG1pbml0ZXN0IHByb3ZpZGVzIGEgY29tcGxldGUgc3VpdGUgb2YgdGVz
        dGluZyBmYWNpbGl0aWVzIHN1cHBvcnRpbmcKICAgIFRERCwgQkRELCBtb2Nr
        aW5nLCBhbmQgYmVuY2htYXJraW5nLgoKICAgICAgICAiSSBoYWQgYSBjbGFz
        cyB3aXRoIEppbSBXZWlyaWNoIG9uIHRlc3RpbmcgbGFzdCB3ZWVrIGFuZCB3
        ZSB3ZXJlCiAgICAgICAgIGFsbG93ZWQgdG8gY2hvb3NlIG91ciB0ZXN0aW5n
        IGZyYW1ld29ya3MuIEtpcmsgSGFpbmVzIGFuZCBJIHdlcmUKICAgICAgICAg
        cGFpcmVkIHVwIGFuZCB3ZSBjcmFja2VkIG9wZW4gdGhlIGNvZGUgZm9yIGEg
        ZmV3IHRlc3QKICAgICAgICAgZnJhbWV3b3Jrcy4uLgoKICAgICAgICAgSSBN
        VVNUIHNheSB0aGF0IG1pbml0ZXN0IGlzICp2ZXJ5KiByZWFkYWJsZSAvIHVu
        ZGVyc3RhbmRhYmxlCiAgICAgICAgIGNvbXBhcmVkIHRvIHRoZSAnb3RoZXIg
        dHdvJyBvcHRpb25zIHdlIGxvb2tlZCBhdC4gTmljZWx5IGRvbmUgYW5kCiAg
        ICAgICAgIHRoYW5rIHlvdSBmb3IgaGVscGluZyB1cyBrZWVwIG91ciBtZW50
        YWwgc2FuaXR5LiIKCiAgICAgICAgLS0gV2F5bmUgRS4gU2VndWluCgogICAg
        bWluaXRlc3QvdW5pdCBpcyBhIHNtYWxsIGFuZCBpbmNyZWRpYmx5IGZhc3Qg
        dW5pdCB0ZXN0aW5nIGZyYW1ld29yay4KICAgIEl0IHByb3ZpZGVzIGEgcmlj
        aCBzZXQgb2YgYXNzZXJ0aW9ucyB0byBtYWtlIHlvdXIgdGVzdHMgY2xlYW4g
        YW5kCiAgICByZWFkYWJsZS4KCiAgICBtaW5pdGVzdC9zcGVjIGlzIGEgZnVu
        Y3Rpb25hbGx5IGNvbXBsZXRlIHNwZWMgZW5naW5lLiBJdCBob29rcyBvbnRv
        CiAgICBtaW5pdGVzdC91bml0IGFuZCBzZWFtbGVzc2x5IGJyaWRnZXMgdGVz
        dCBhc3NlcnRpb25zIG92ZXIgdG8gc3BlYwogICAgZXhwZWN0YXRpb25zLgoK
        ICAgIG1pbml0ZXN0L2JlbmNobWFyayBpcyBhbiBhd2Vzb21lIHdheSB0byBh
        c3NlcnQgdGhlIHBlcmZvcm1hbmNlIG9mIHlvdXIKICAgIGFsZ29yaXRobXMg
        aW4gYSByZXBlYXRhYmxlIG1hbm5lci4gTm93IHlvdSBjYW4gYXNzZXJ0IHRo
        YXQgeW91ciBuZXdiCiAgICBjby13b3JrZXIgZG9lc24ndCByZXBsYWNlIHlv
        dXIgbGluZWFyIGFsZ29yaXRobSB3aXRoIGFuIGV4cG9uZW50aWFsCiAgICBv
        bmUhCgogICAgbWluaXRlc3QvbW9jayBieSBTdGV2ZW4gQmFrZXIsIGlzIGEg
        YmVhdXRpZnVsbHkgdGlueSBtb2NrIChhbmQgc3R1YikKICAgIG9iamVjdCBm
        cmFtZXdvcmsuCgogICAgbWluaXRlc3QvcHJpZGUgc2hvd3MgcHJpZGUgaW4g
        dGVzdGluZyBhbmQgYWRkcyBjb2xvcmluZyB0byB5b3VyIHRlc3QKICAgIG91
        dHB1dC4gSSBndWVzcyBpdCBpcyBhbiBleGFtcGxlIG9mIGhvdyB0byB3cml0
        ZSBJTyBwaXBlcyB0b28uIDpQCgogICAgbWluaXRlc3QvdW5pdCBpcyBtZWFu
        dCB0byBoYXZlIGEgY2xlYW4gaW1wbGVtZW50YXRpb24gZm9yIGxhbmd1YWdl
        CiAgICBpbXBsZW1lbnRvcnMgdGhhdCBuZWVkIGEgbWluaW1hbCBzZXQgb2Yg
        bWV0aG9kcyB0byBib290c3RyYXAgYSB3b3JraW5nCiAgICB0ZXN0IHN1aXRl
        LiBGb3IgZXhhbXBsZSwgdGhlcmUgaXMgbm8gbWFnaWMgaW52b2x2ZWQgZm9y
        IHRlc3QtY2FzZQogICAgZGlzY292ZXJ5LgoKICAgICAgICAiQWdhaW4sIEkg
        Y2FuJ3QgcHJhaXNlIGVub3VnaCB0aGUgaWRlYSBvZiBhIHRlc3Rpbmcvc3Bl
        Y2luZwogICAgICAgICBmcmFtZXdvcmsgdGhhdCBJIGNhbiBhY3R1YWxseSBy
        ZWFkIGluIGZ1bGwgaW4gb25lIHNpdHRpbmchIgoKICAgICAgICAtLSBQaW90
        ciBTem90a293c2tpCgogICAgQ29tcGFyaW5nIHRvIHJzcGVjOgoKICAgICAg
        ICByc3BlYyBpcyBhIHRlc3RpbmcgRFNMLiBtaW5pdGVzdCBpcyBydWJ5LgoK
        ICAgICAgICAtLSBBZGFtIEhhd2tpbnMsICJCb3cgQmVmb3JlIE1pbmlUZXN0
        IgoKICAgIG1pbml0ZXN0IGRvZXNuJ3QgcmVpbnZlbnQgYW55dGhpbmcgdGhh
        dCBydWJ5IGFscmVhZHkgcHJvdmlkZXMsIGxpa2U6CiAgICBjbGFzc2VzLCBt
        b2R1bGVzLCBpbmhlcml0YW5jZSwgbWV0aG9kcy4gVGhpcyBtZWFucyB5b3Ug
        b25seSBoYXZlIHRvCiAgICBsZWFybiBydWJ5IHRvIHVzZSBtaW5pdGVzdCBh
        bmQgYWxsIG9mIHlvdXIgcmVndWxhciBPTyBwcmFjdGljZXMgbGlrZQogICAg
        ZXh0cmFjdC1tZXRob2QgcmVmYWN0b3JpbmdzIHN0aWxsIGFwcGx5LgogIGRv
        d25sb2Fkc19jb3VudDogMTgzNzcKICBtZXRhZGF0YToge30KICBudW1iZXI6
        IDUuMC4zCiAgc3VtbWFyeTogbWluaXRlc3QgcHJvdmlkZXMgYSBjb21wbGV0
        ZSBzdWl0ZSBvZiB0ZXN0aW5nIGZhY2lsaXRpZXMgc3VwcG9ydGluZyBUREQs
        CiAgICBCREQsIG1vY2tpbmcsIGFuZCBiZW5jaG1hcmtpbmcKICBwbGF0Zm9y
        bTogcnVieQogIHJ1YnlnZW1zX3ZlcnNpb246ICI+PSAwIgogIHJ1YnlfdmVy
        c2lvbjogCiAgcHJlcmVsZWFzZTogZmFsc2UKICBsaWNlbnNlczogW10KICBy
        ZXF1aXJlbWVudHM6IAogIHNoYTogMWQxNzAwMzhjNGVmZDFiYjQxNjk5YjMy
        ZTYyMTI2YTM1ZTAzMmVkZWNhOWM2ZGRkYjBmM2FkMjNkMTFkZmVlZgotIGF1
        dGhvcnM6IFJ5YW4gRGF2aXMKICBidWlsdF9hdDogJzIwMTMtMDUtMjBUMDA6
        MDA6MDAuMDAwWicKICBjcmVhdGVkX2F0OiAnMjAxMy0wNS0yMFQyMjo0Njow
        MC4xNTBaJwogIGRlc2NyaXB0aW9uOiB8LQogICAgbWluaXRlc3QgcHJvdmlk
        ZXMgYSBjb21wbGV0ZSBzdWl0ZSBvZiB0ZXN0aW5nIGZhY2lsaXRpZXMgc3Vw
        cG9ydGluZwogICAgVERELCBCREQsIG1vY2tpbmcsIGFuZCBiZW5jaG1hcmtp
        bmcuCgogICAgICAgICJJIGhhZCBhIGNsYXNzIHdpdGggSmltIFdlaXJpY2gg
        b24gdGVzdGluZyBsYXN0IHdlZWsgYW5kIHdlIHdlcmUKICAgICAgICAgYWxs
        b3dlZCB0byBjaG9vc2Ugb3VyIHRlc3RpbmcgZnJhbWV3b3Jrcy4gS2lyayBI
        YWluZXMgYW5kIEkgd2VyZQogICAgICAgICBwYWlyZWQgdXAgYW5kIHdlIGNy
        YWNrZWQgb3BlbiB0aGUgY29kZSBmb3IgYSBmZXcgdGVzdAogICAgICAgICBm
        cmFtZXdvcmtzLi4uCgogICAgICAgICBJIE1VU1Qgc2F5IHRoYXQgbWluaXRl
        c3QgaXMgKnZlcnkqIHJlYWRhYmxlIC8gdW5kZXJzdGFuZGFibGUKICAgICAg
        ICAgY29tcGFyZWQgdG8gdGhlICdvdGhlciB0d28nIG9wdGlvbnMgd2UgbG9v
        a2VkIGF0LiBOaWNlbHkgZG9uZSBhbmQKICAgICAgICAgdGhhbmsgeW91IGZv
        ciBoZWxwaW5nIHVzIGtlZXAgb3VyIG1lbnRhbCBzYW5pdHkuIgoKICAgICAg
        ICAtLSBXYXluZSBFLiBTZWd1aW4KCiAgICBtaW5pdGVzdC91bml0IGlzIGEg
        c21hbGwgYW5kIGluY3JlZGlibHkgZmFzdCB1bml0IHRlc3RpbmcgZnJhbWV3
        b3JrLgogICAgSXQgcHJvdmlkZXMgYSByaWNoIHNldCBvZiBhc3NlcnRpb25z
        IHRvIG1ha2UgeW91ciB0ZXN0cyBjbGVhbiBhbmQKICAgIHJlYWRhYmxlLgoK
        ICAgIG1pbml0ZXN0L3NwZWMgaXMgYSBmdW5jdGlvbmFsbHkgY29tcGxldGUg
        c3BlYyBlbmdpbmUuIEl0IGhvb2tzIG9udG8KICAgIG1pbml0ZXN0L3VuaXQg
        YW5kIHNlYW1sZXNzbHkgYnJpZGdlcyB0ZXN0IGFzc2VydGlvbnMgb3ZlciB0
        byBzcGVjCiAgICBleHBlY3RhdGlvbnMuCgogICAgbWluaXRlc3QvYmVuY2ht
        YXJrIGlzIGFuIGF3ZXNvbWUgd2F5IHRvIGFzc2VydCB0aGUgcGVyZm9ybWFu
        Y2Ugb2YgeW91cgogICAgYWxnb3JpdGhtcyBpbiBhIHJlcGVhdGFibGUgbWFu
        bmVyLiBOb3cgeW91IGNhbiBhc3NlcnQgdGhhdCB5b3VyIG5ld2IKICAgIGNv
        LXdvcmtlciBkb2Vzbid0IHJlcGxhY2UgeW91ciBsaW5lYXIgYWxnb3JpdGht
        IHdpdGggYW4gZXhwb25lbnRpYWwKICAgIG9uZSEKCiAgICBtaW5pdGVzdC9t
        b2NrIGJ5IFN0ZXZlbiBCYWtlciwgaXMgYSBiZWF1dGlmdWxseSB0aW55IG1v
        Y2sgKGFuZCBzdHViKQogICAgb2JqZWN0IGZyYW1ld29yay4KCiAgICBtaW5p
        dGVzdC9wcmlkZSBzaG93cyBwcmlkZSBpbiB0ZXN0aW5nIGFuZCBhZGRzIGNv
        bG9yaW5nIHRvIHlvdXIgdGVzdAogICAgb3V0cHV0LiBJIGd1ZXNzIGl0IGlz
        IGFuIGV4YW1wbGUgb2YgaG93IHRvIHdyaXRlIElPIHBpcGVzIHRvby4gOlAK
        CiAgICBtaW5pdGVzdC91bml0IGlzIG1lYW50IHRvIGhhdmUgYSBjbGVhbiBp
        bXBsZW1lbnRhdGlvbiBmb3IgbGFuZ3VhZ2UKICAgIGltcGxlbWVudG9ycyB0
        aGF0IG5lZWQgYSBtaW5pbWFsIHNldCBvZiBtZXRob2RzIHRvIGJvb3RzdHJh
        cCBhIHdvcmtpbmcKICAgIHRlc3Qgc3VpdGUuIEZvciBleGFtcGxlLCB0aGVy
        ZSBpcyBubyBtYWdpYyBpbnZvbHZlZCBmb3IgdGVzdC1jYXNlCiAgICBkaXNj
        b3ZlcnkuCgogICAgICAgICJBZ2FpbiwgSSBjYW4ndCBwcmFpc2UgZW5vdWdo
        IHRoZSBpZGVhIG9mIGEgdGVzdGluZy9zcGVjaW5nCiAgICAgICAgIGZyYW1l
        d29yayB0aGF0IEkgY2FuIGFjdHVhbGx5IHJlYWQgaW4gZnVsbCBpbiBvbmUg
        c2l0dGluZyEiCgogICAgICAgIC0tIFBpb3RyIFN6b3Rrb3dza2kKCiAgICBD
        b21wYXJpbmcgdG8gcnNwZWM6CgogICAgICAgIHJzcGVjIGlzIGEgdGVzdGlu
        ZyBEU0wuIG1pbml0ZXN0IGlzIHJ1YnkuCgogICAgICAgIC0tIEFkYW0gSGF3
        a2lucywgIkJvdyBCZWZvcmUgTWluaVRlc3QiCgogICAgbWluaXRlc3QgZG9l
        c24ndCByZWludmVudCBhbnl0aGluZyB0aGF0IHJ1YnkgYWxyZWFkeSBwcm92
        aWRlcywgbGlrZToKICAgIGNsYXNzZXMsIG1vZHVsZXMsIGluaGVyaXRhbmNl
        LCBtZXRob2RzLiBUaGlzIG1lYW5zIHlvdSBvbmx5IGhhdmUgdG8KICAgIGxl
        YXJuIHJ1YnkgdG8gdXNlIG1pbml0ZXN0IGFuZCBhbGwgb2YgeW91ciByZWd1
        bGFyIE9PIHByYWN0aWNlcyBsaWtlCiAgICBleHRyYWN0LW1ldGhvZCByZWZh
        Y3RvcmluZ3Mgc3RpbGwgYXBwbHkuCiAgZG93bmxvYWRzX2NvdW50OiAzOTQ4
        NgogIG1ldGFkYXRhOiB7fQogIG51bWJlcjogNS4wLjIKICBzdW1tYXJ5OiBt
        aW5pdGVzdCBwcm92aWRlcyBhIGNvbXBsZXRlIHN1aXRlIG9mIHRlc3Rpbmcg
        ZmFjaWxpdGllcyBzdXBwb3J0aW5nIFRERCwKICAgIEJERCwgbW9ja2luZywg
        YW5kIGJlbmNobWFya2luZwogIHBsYXRmb3JtOiBydWJ5CiAgcnVieWdlbXNf
        dmVyc2lvbjogIj49IDAiCiAgcnVieV92ZXJzaW9uOiAKICBwcmVyZWxlYXNl
        OiBmYWxzZQogIGxpY2Vuc2VzOiBbXQogIHJlcXVpcmVtZW50czogCiAgc2hh
        OiA2NzQ3ZGY0M2NiOGQxZThkYzhkODRmMTMwODQwODg5YTgzZGFhMzUyNTdj
        NmVlODQxY2FmNTA0NjhiZTJlNzBmCi0gYXV0aG9yczogUnlhbiBEYXZpcwog
        IGJ1aWx0X2F0OiAnMjAxMy0wNS0xNVQwMDowMDowMC4wMDBaJwogIGNyZWF0
        ZWRfYXQ6ICcyMDEzLTA1LTE1VDAwOjE1OjQwLjc3NlonCiAgZGVzY3JpcHRp
        b246IHwtCiAgICBtaW5pdGVzdCBwcm92aWRlcyBhIGNvbXBsZXRlIHN1aXRl
        IG9mIHRlc3RpbmcgZmFjaWxpdGllcyBzdXBwb3J0aW5nCiAgICBUREQsIEJE
        RCwgbW9ja2luZywgYW5kIGJlbmNobWFya2luZy4KCiAgICAgICAgIkkgaGFk
        IGEgY2xhc3Mgd2l0aCBKaW0gV2VpcmljaCBvbiB0ZXN0aW5nIGxhc3Qgd2Vl
        ayBhbmQgd2Ugd2VyZQogICAgICAgICBhbGxvd2VkIHRvIGNob29zZSBvdXIg
        dGVzdGluZyBmcmFtZXdvcmtzLiBLaXJrIEhhaW5lcyBhbmQgSSB3ZXJlCiAg
        ICAgICAgIHBhaXJlZCB1cCBhbmQgd2UgY3JhY2tlZCBvcGVuIHRoZSBjb2Rl
        IGZvciBhIGZldyB0ZXN0CiAgICAgICAgIGZyYW1ld29ya3MuLi4KCiAgICAg
        ICAgIEkgTVVTVCBzYXkgdGhhdCBtaW5pdGVzdCBpcyAqdmVyeSogcmVhZGFi
        bGUgLyB1bmRlcnN0YW5kYWJsZQogICAgICAgICBjb21wYXJlZCB0byB0aGUg
        J290aGVyIHR3bycgb3B0aW9ucyB3ZSBsb29rZWQgYXQuIE5pY2VseSBkb25l
        IGFuZAogICAgICAgICB0aGFuayB5b3UgZm9yIGhlbHBpbmcgdXMga2VlcCBv
        dXIgbWVudGFsIHNhbml0eS4iCgogICAgICAgIC0tIFdheW5lIEUuIFNlZ3Vp
        bgoKICAgIG1pbml0ZXN0L3VuaXQgaXMgYSBzbWFsbCBhbmQgaW5jcmVkaWJs
        eSBmYXN0IHVuaXQgdGVzdGluZyBmcmFtZXdvcmsuCiAgICBJdCBwcm92aWRl
        cyBhIHJpY2ggc2V0IG9mIGFzc2VydGlvbnMgdG8gbWFrZSB5b3VyIHRlc3Rz
        IGNsZWFuIGFuZAogICAgcmVhZGFibGUuCgogICAgbWluaXRlc3Qvc3BlYyBp
        cyBhIGZ1bmN0aW9uYWxseSBjb21wbGV0ZSBzcGVjIGVuZ2luZS4gSXQgaG9v
        a3Mgb250bwogICAgbWluaXRlc3QvdW5pdCBhbmQgc2VhbWxlc3NseSBicmlk
        Z2VzIHRlc3QgYXNzZXJ0aW9ucyBvdmVyIHRvIHNwZWMKICAgIGV4cGVjdGF0
        aW9ucy4KCiAgICBtaW5pdGVzdC9iZW5jaG1hcmsgaXMgYW4gYXdlc29tZSB3
        YXkgdG8gYXNzZXJ0IHRoZSBwZXJmb3JtYW5jZSBvZiB5b3VyCiAgICBhbGdv
        cml0aG1zIGluIGEgcmVwZWF0YWJsZSBtYW5uZXIuIE5vdyB5b3UgY2FuIGFz
        c2VydCB0aGF0IHlvdXIgbmV3YgogICAgY28td29ya2VyIGRvZXNuJ3QgcmVw
        bGFjZSB5b3VyIGxpbmVhciBhbGdvcml0aG0gd2l0aCBhbiBleHBvbmVudGlh
        bAogICAgb25lIQoKICAgIG1pbml0ZXN0L21vY2sgYnkgU3RldmVuIEJha2Vy
        LCBpcyBhIGJlYXV0aWZ1bGx5IHRpbnkgbW9jayAoYW5kIHN0dWIpCiAgICBv
        YmplY3QgZnJhbWV3b3JrLgoKICAgIG1pbml0ZXN0L3ByaWRlIHNob3dzIHBy
        aWRlIGluIHRlc3RpbmcgYW5kIGFkZHMgY29sb3JpbmcgdG8geW91ciB0ZXN0
        CiAgICBvdXRwdXQuIEkgZ3Vlc3MgaXQgaXMgYW4gZXhhbXBsZSBvZiBob3cg
        dG8gd3JpdGUgSU8gcGlwZXMgdG9vLiA6UAoKICAgIG1pbml0ZXN0L3VuaXQg
        aXMgbWVhbnQgdG8gaGF2ZSBhIGNsZWFuIGltcGxlbWVudGF0aW9uIGZvciBs
        YW5ndWFnZQogICAgaW1wbGVtZW50b3JzIHRoYXQgbmVlZCBhIG1pbmltYWwg
        c2V0IG9mIG1ldGhvZHMgdG8gYm9vdHN0cmFwIGEgd29ya2luZwogICAgdGVz
        dCBzdWl0ZS4gRm9yIGV4YW1wbGUsIHRoZXJlIGlzIG5vIG1hZ2ljIGludm9s
        dmVkIGZvciB0ZXN0LWNhc2UKICAgIGRpc2NvdmVyeS4KCiAgICAgICAgIkFn
        YWluLCBJIGNhbid0IHByYWlzZSBlbm91Z2ggdGhlIGlkZWEgb2YgYSB0ZXN0
        aW5nL3NwZWNpbmcKICAgICAgICAgZnJhbWV3b3JrIHRoYXQgSSBjYW4gYWN0
        dWFsbHkgcmVhZCBpbiBmdWxsIGluIG9uZSBzaXR0aW5nISIKCiAgICAgICAg
        LS0gUGlvdHIgU3pvdGtvd3NraQoKICAgIENvbXBhcmluZyB0byByc3BlYzoK
        CiAgICAgICAgcnNwZWMgaXMgYSB0ZXN0aW5nIERTTC4gbWluaXRlc3QgaXMg
        cnVieS4KCiAgICAgICAgLS0gQWRhbSBIYXdraW5zLCAiQm93IEJlZm9yZSBN
        aW5pVGVzdCIKCiAgICBtaW5pdGVzdCBkb2Vzbid0IHJlaW52ZW50IGFueXRo
        aW5nIHRoYXQgcnVieSBhbHJlYWR5IHByb3ZpZGVzLCBsaWtlOgogICAgY2xh
        c3NlcywgbW9kdWxlcywgaW5oZXJpdGFuY2UsIG1ldGhvZHMuIFRoaXMgbWVh
        bnMgeW91IG9ubHkgaGF2ZSB0bwogICAgbGVhcm4gcnVieSB0byB1c2UgbWlu
        aXRlc3QgYW5kIGFsbCBvZiB5b3VyIHJlZ3VsYXIgT08gcHJhY3RpY2VzIGxp
        a2UKICAgIGV4dHJhY3QtbWV0aG9kIHJlZmFjdG9yaW5ncyBzdGlsbCBhcHBs
        eS4KICBkb3dubG9hZHNfY291bnQ6IDE2MTgxCiAgbWV0YWRhdGE6IHt9CiAg
        bnVtYmVyOiA1LjAuMQogIHN1bW1hcnk6IG1pbml0ZXN0IHByb3ZpZGVzIGEg
        Y29tcGxldGUgc3VpdGUgb2YgdGVzdGluZyBmYWNpbGl0aWVzIHN1cHBvcnRp
        bmcgVERELAogICAgQkRELCBtb2NraW5nLCBhbmQgYmVuY2htYXJraW5nCiAg
        cGxhdGZvcm06IHJ1YnkKICBydWJ5Z2Vtc192ZXJzaW9uOiAiPj0gMCIKICBy
        dWJ5X3ZlcnNpb246IAogIHByZXJlbGVhc2U6IGZhbHNlCiAgbGljZW5zZXM6
        IFtdCiAgcmVxdWlyZW1lbnRzOiAKICBzaGE6IDM2NjlkYTcyNjk1NjNmNjlh
        ZTg4MDYzNmY0MzA5NWIzOWE3Y2ZhNTg5NzczZDFmYzM0NjdmNWVlZjdhMWY1
        OGEKLSBhdXRob3JzOiBSeWFuIERhdmlzCiAgYnVpbHRfYXQ6ICcyMDEzLTA1
        LTEwVDAwOjAwOjAwLjAwMFonCiAgY3JlYXRlZF9hdDogJzIwMTMtMDUtMTBU
        MjM6MDI6NTIuNjI0WicKICBkZXNjcmlwdGlvbjogfC0KICAgIG1pbml0ZXN0
        IHByb3ZpZGVzIGEgY29tcGxldGUgc3VpdGUgb2YgdGVzdGluZyBmYWNpbGl0
        aWVzIHN1cHBvcnRpbmcKICAgIFRERCwgQkRELCBtb2NraW5nLCBhbmQgYmVu
        Y2htYXJraW5nLgoKICAgICAgICAiSSBoYWQgYSBjbGFzcyB3aXRoIEppbSBX
        ZWlyaWNoIG9uIHRlc3RpbmcgbGFzdCB3ZWVrIGFuZCB3ZSB3ZXJlCiAgICAg
        ICAgIGFsbG93ZWQgdG8gY2hvb3NlIG91ciB0ZXN0aW5nIGZyYW1ld29ya3Mu
        IEtpcmsgSGFpbmVzIGFuZCBJIHdlcmUKICAgICAgICAgcGFpcmVkIHVwIGFu
        ZCB3ZSBjcmFja2VkIG9wZW4gdGhlIGNvZGUgZm9yIGEgZmV3IHRlc3QKICAg
        ICAgICAgZnJhbWV3b3Jrcy4uLgoKICAgICAgICAgSSBNVVNUIHNheSB0aGF0
        IG1pbml0ZXN0IGlzICp2ZXJ5KiByZWFkYWJsZSAvIHVuZGVyc3RhbmRhYmxl
        CiAgICAgICAgIGNvbXBhcmVkIHRvIHRoZSAnb3RoZXIgdHdvJyBvcHRpb25z
        IHdlIGxvb2tlZCBhdC4gTmljZWx5IGRvbmUgYW5kCiAgICAgICAgIHRoYW5r
        IHlvdSBmb3IgaGVscGluZyB1cyBrZWVwIG91ciBtZW50YWwgc2FuaXR5LiIK
        CiAgICAgICAgLS0gV2F5bmUgRS4gU2VndWluCgogICAgbWluaXRlc3QvdW5p
        dCBpcyBhIHNtYWxsIGFuZCBpbmNyZWRpYmx5IGZhc3QgdW5pdCB0ZXN0aW5n
        IGZyYW1ld29yay4KICAgIEl0IHByb3ZpZGVzIGEgcmljaCBzZXQgb2YgYXNz
        ZXJ0aW9ucyB0byBtYWtlIHlvdXIgdGVzdHMgY2xlYW4gYW5kCiAgICByZWFk
        YWJsZS4KCiAgICBtaW5pdGVzdC9zcGVjIGlzIGEgZnVuY3Rpb25hbGx5IGNv
        bXBsZXRlIHNwZWMgZW5naW5lLiBJdCBob29rcyBvbnRvCiAgICBtaW5pdGVz
        dC91bml0IGFuZCBzZWFtbGVzc2x5IGJyaWRnZXMgdGVzdCBhc3NlcnRpb25z
        IG92ZXIgdG8gc3BlYwogICAgZXhwZWN0YXRpb25zLgoKICAgIG1pbml0ZXN0
        L2JlbmNobWFyayBpcyBhbiBhd2Vzb21lIHdheSB0byBhc3NlcnQgdGhlIHBl
        cmZvcm1hbmNlIG9mIHlvdXIKICAgIGFsZ29yaXRobXMgaW4gYSByZXBlYXRh
        YmxlIG1hbm5lci4gTm93IHlvdSBjYW4gYXNzZXJ0IHRoYXQgeW91ciBuZXdi
        CiAgICBjby13b3JrZXIgZG9lc24ndCByZXBsYWNlIHlvdXIgbGluZWFyIGFs
        Z29yaXRobSB3aXRoIGFuIGV4cG9uZW50aWFsCiAgICBvbmUhCgogICAgbWlu
        aXRlc3QvbW9jayBieSBTdGV2ZW4gQmFrZXIsIGlzIGEgYmVhdXRpZnVsbHkg
        dGlueSBtb2NrIChhbmQgc3R1YikKICAgIG9iamVjdCBmcmFtZXdvcmsuCgog
        ICAgbWluaXRlc3QvcHJpZGUgc2hvd3MgcHJpZGUgaW4gdGVzdGluZyBhbmQg
        YWRkcyBjb2xvcmluZyB0byB5b3VyIHRlc3QKICAgIG91dHB1dC4gSSBndWVz
        cyBpdCBpcyBhbiBleGFtcGxlIG9mIGhvdyB0byB3cml0ZSBJTyBwaXBlcyB0
        b28uIDpQCgogICAgbWluaXRlc3QvdW5pdCBpcyBtZWFudCB0byBoYXZlIGEg
        Y2xlYW4gaW1wbGVtZW50YXRpb24gZm9yIGxhbmd1YWdlCiAgICBpbXBsZW1l
        bnRvcnMgdGhhdCBuZWVkIGEgbWluaW1hbCBzZXQgb2YgbWV0aG9kcyB0byBi
        b290c3RyYXAgYSB3b3JraW5nCiAgICB0ZXN0IHN1aXRlLiBGb3IgZXhhbXBs
        ZSwgdGhlcmUgaXMgbm8gbWFnaWMgaW52b2x2ZWQgZm9yIHRlc3QtY2FzZQog
        ICAgZGlzY292ZXJ5LgoKICAgICAgICAiQWdhaW4sIEkgY2FuJ3QgcHJhaXNl
        IGVub3VnaCB0aGUgaWRlYSBvZiBhIHRlc3Rpbmcvc3BlY2luZwogICAgICAg
        ICBmcmFtZXdvcmsgdGhhdCBJIGNhbiBhY3R1YWxseSByZWFkIGluIGZ1bGwg
        aW4gb25lIHNpdHRpbmchIgoKICAgICAgICAtLSBQaW90ciBTem90a293c2tp
        CgogICAgQ29tcGFyaW5nIHRvIHJzcGVjOgoKICAgICAgICByc3BlYyBpcyBh
        IHRlc3RpbmcgRFNMLiBtaW5pdGVzdCBpcyBydWJ5LgoKICAgICAgICAtLSBB
        ZGFtIEhhd2tpbnMsICJCb3cgQmVmb3JlIE1pbmlUZXN0IgoKICAgIG1pbml0
        ZXN0IGRvZXNuJ3QgcmVpbnZlbnQgYW55dGhpbmcgdGhhdCBydWJ5IGFscmVh
        ZHkgcHJvdmlkZXMsIGxpa2U6CiAgICBjbGFzc2VzLCBtb2R1bGVzLCBpbmhl
        cml0YW5jZSwgbWV0aG9kcy4gVGhpcyBtZWFucyB5b3Ugb25seSBoYXZlIHRv
        CiAgICBsZWFybiBydWJ5IHRvIHVzZSBtaW5pdGVzdCBhbmQgYWxsIG9mIHlv
        dXIgcmVndWxhciBPTyBwcmFjdGljZXMgbGlrZQogICAgZXh0cmFjdC1tZXRo
        b2QgcmVmYWN0b3JpbmdzIHN0aWxsIGFwcGx5LgogIGRvd25sb2Fkc19jb3Vu
        dDogMTAyMjgKICBtZXRhZGF0YToge30KICBudW1iZXI6IDUuMC4wCiAgc3Vt
        bWFyeTogbWluaXRlc3QgcHJvdmlkZXMgYSBjb21wbGV0ZSBzdWl0ZSBvZiB0
        ZXN0aW5nIGZhY2lsaXRpZXMgc3VwcG9ydGluZyBUREQsCiAgICBCREQsIG1v
        Y2tpbmcsIGFuZCBiZW5jaG1hcmtpbmcKICBwbGF0Zm9ybTogcnVieQogIHJ1
        YnlnZW1zX3ZlcnNpb246ICI+PSAwIgogIHJ1YnlfdmVyc2lvbjogCiAgcHJl
        cmVsZWFzZTogZmFsc2UKICBsaWNlbnNlczogW10KICByZXF1aXJlbWVudHM6
        IAogIHNoYTogNmJhYzY2MzA3OWI4YTRjZDE3ZGM3MjNkMTkzZDIyZTgxN2Y4
        NjUyYzFlNDFiNTllOTlhZDVkNjFhOTQ1OGE2MgotIGF1dGhvcnM6IFJ5YW4g
        RGF2aXMKICBidWlsdF9hdDogJzIwMTMtMDYtMjJUMDA6MDA6MDAuMDAwWicK
        ICBjcmVhdGVkX2F0OiAnMjAxMy0wNi0yMlQwMDoxNzo0Mi45MTRaJwogIGRl
        c2NyaXB0aW9uOiB8LQogICAgbWluaXRlc3QgcHJvdmlkZXMgYSBjb21wbGV0
        ZSBzdWl0ZSBvZiB0ZXN0aW5nIGZhY2lsaXRpZXMgc3VwcG9ydGluZwogICAg
        VERELCBCREQsIG1vY2tpbmcsIGFuZCBiZW5jaG1hcmtpbmcuCgogICAgICAg
        ICJJIGhhZCBhIGNsYXNzIHdpdGggSmltIFdlaXJpY2ggb24gdGVzdGluZyBs
        YXN0IHdlZWsgYW5kIHdlIHdlcmUKICAgICAgICAgYWxsb3dlZCB0byBjaG9v
        c2Ugb3VyIHRlc3RpbmcgZnJhbWV3b3Jrcy4gS2lyayBIYWluZXMgYW5kIEkg
        d2VyZQogICAgICAgICBwYWlyZWQgdXAgYW5kIHdlIGNyYWNrZWQgb3BlbiB0
        aGUgY29kZSBmb3IgYSBmZXcgdGVzdAogICAgICAgICBmcmFtZXdvcmtzLi4u
        CgogICAgICAgICBJIE1VU1Qgc2F5IHRoYXQgbWluaXRlc3QgaXMgKnZlcnkq
        IHJlYWRhYmxlIC8gdW5kZXJzdGFuZGFibGUKICAgICAgICAgY29tcGFyZWQg
        dG8gdGhlICdvdGhlciB0d28nIG9wdGlvbnMgd2UgbG9va2VkIGF0LiBOaWNl
        bHkgZG9uZSBhbmQKICAgICAgICAgdGhhbmsgeW91IGZvciBoZWxwaW5nIHVz
        IGtlZXAgb3VyIG1lbnRhbCBzYW5pdHkuIgoKICAgICAgICAtLSBXYXluZSBF
        LiBTZWd1aW4KCiAgICBtaW5pdGVzdC91bml0IGlzIGEgc21hbGwgYW5kIGlu
        Y3JlZGlibHkgZmFzdCB1bml0IHRlc3RpbmcgZnJhbWV3b3JrLgogICAgSXQg
        cHJvdmlkZXMgYSByaWNoIHNldCBvZiBhc3NlcnRpb25zIHRvIG1ha2UgeW91
        ciB0ZXN0cyBjbGVhbiBhbmQKICAgIHJlYWRhYmxlLgoKICAgIG1pbml0ZXN0
        L3NwZWMgaXMgYSBmdW5jdGlvbmFsbHkgY29tcGxldGUgc3BlYyBlbmdpbmUu
        IEl0IGhvb2tzIG9udG8KICAgIG1pbml0ZXN0L3VuaXQgYW5kIHNlYW1sZXNz
        bHkgYnJpZGdlcyB0ZXN0IGFzc2VydGlvbnMgb3ZlciB0byBzcGVjCiAgICBl
        eHBlY3RhdGlvbnMuCgogICAgbWluaXRlc3QvYmVuY2htYXJrIGlzIGFuIGF3
        ZXNvbWUgd2F5IHRvIGFzc2VydCB0aGUgcGVyZm9ybWFuY2Ugb2YgeW91cgog
        ICAgYWxnb3JpdGhtcyBpbiBhIHJlcGVhdGFibGUgbWFubmVyLiBOb3cgeW91
        IGNhbiBhc3NlcnQgdGhhdCB5b3VyIG5ld2IKICAgIGNvLXdvcmtlciBkb2Vz
        bid0IHJlcGxhY2UgeW91ciBsaW5lYXIgYWxnb3JpdGhtIHdpdGggYW4gZXhw
        b25lbnRpYWwKICAgIG9uZSEKCiAgICBtaW5pdGVzdC9tb2NrIGJ5IFN0ZXZl
        biBCYWtlciwgaXMgYSBiZWF1dGlmdWxseSB0aW55IG1vY2sgKGFuZCBzdHVi
        KQogICAgb2JqZWN0IGZyYW1ld29yay4KCiAgICBtaW5pdGVzdC9wcmlkZSBz
        aG93cyBwcmlkZSBpbiB0ZXN0aW5nIGFuZCBhZGRzIGNvbG9yaW5nIHRvIHlv
        dXIgdGVzdAogICAgb3V0cHV0LiBJIGd1ZXNzIGl0IGlzIGFuIGV4YW1wbGUg
        b2YgaG93IHRvIHdyaXRlIElPIHBpcGVzIHRvby4gOlAKCiAgICBtaW5pdGVz
        dC91bml0IGlzIG1lYW50IHRvIGhhdmUgYSBjbGVhbiBpbXBsZW1lbnRhdGlv
        biBmb3IgbGFuZ3VhZ2UKICAgIGltcGxlbWVudG9ycyB0aGF0IG5lZWQgYSBt
        aW5pbWFsIHNldCBvZiBtZXRob2RzIHRvIGJvb3RzdHJhcCBhIHdvcmtpbmcK
        ICAgIHRlc3Qgc3VpdGUuIEZvciBleGFtcGxlLCB0aGVyZSBpcyBubyBtYWdp
        YyBpbnZvbHZlZCBmb3IgdGVzdC1jYXNlCiAgICBkaXNjb3ZlcnkuCgogICAg
        ICAgICJBZ2FpbiwgSSBjYW4ndCBwcmFpc2UgZW5vdWdoIHRoZSBpZGVhIG9m
        IGEgdGVzdGluZy9zcGVjaW5nCiAgICAgICAgIGZyYW1ld29yayB0aGF0IEkg
        Y2FuIGFjdHVhbGx5IHJlYWQgaW4gZnVsbCBpbiBvbmUgc2l0dGluZyEiCgog
        ICAgICAgIC0tIFBpb3RyIFN6b3Rrb3dza2kKCiAgICBDb21wYXJpbmcgdG8g
        cnNwZWM6CgogICAgICAgIHJzcGVjIGlzIGEgdGVzdGluZyBEU0wuIG1pbml0
        ZXN0IGlzIHJ1YnkuCgogICAgICAgIC0tIEFkYW0gSGF3a2lucywgIkJvdyBC
        ZWZvcmUgTWluaVRlc3QiCgogICAgbWluaXRlc3QgZG9lc24ndCByZWludmVu
        dCBhbnl0aGluZyB0aGF0IHJ1YnkgYWxyZWFkeSBwcm92aWRlcywgbGlrZToK
        ICAgIGNsYXNzZXMsIG1vZHVsZXMsIGluaGVyaXRhbmNlLCBtZXRob2RzLiBU
        aGlzIG1lYW5zIHlvdSBvbmx5IGhhdmUgdG8KICAgIGxlYXJuIHJ1YnkgdG8g
        dXNlIG1pbml0ZXN0IGFuZCBhbGwgb2YgeW91ciByZWd1bGFyIE9PIHByYWN0
        aWNlcyBsaWtlCiAgICBleHRyYWN0LW1ldGhvZCByZWZhY3RvcmluZ3Mgc3Rp
        bGwgYXBwbHkuCiAgZG93bmxvYWRzX2NvdW50OiA5MjQ5OTIxCiAgbWV0YWRh
        dGE6IHt9CiAgbnVtYmVyOiA0LjcuNQogIHN1bW1hcnk6IG1pbml0ZXN0IHBy
        b3ZpZGVzIGEgY29tcGxldGUgc3VpdGUgb2YgdGVzdGluZyBmYWNpbGl0aWVz
        IHN1cHBvcnRpbmcgVERELAogICAgQkRELCBtb2NraW5nLCBhbmQgYmVuY2ht
        YXJraW5nCiAgcGxhdGZvcm06IHJ1YnkKICBydWJ5Z2Vtc192ZXJzaW9uOiAi
        Pj0gMCIKICBydWJ5X3ZlcnNpb246IAogIHByZXJlbGVhc2U6IGZhbHNlCiAg
        bGljZW5zZXM6IFtdCiAgcmVxdWlyZW1lbnRzOiAKICBzaGE6IDNlMGFjNzIw
        YTZkMDc4N2I0YzgyMjUxNDczOTMxOTQ5M2UxODc0MDBlOTkzZmJhOTYzOTdi
        ZDY0ZDU4YWU2MGUKLSBhdXRob3JzOiBSeWFuIERhdmlzCiAgYnVpbHRfYXQ6
        ICcyMDEzLTA1LTAxVDAwOjAwOjAwLjAwMFonCiAgY3JlYXRlZF9hdDogJzIw
        MTMtMDUtMDFUMjI6NDI6MTQuMDgxWicKICBkZXNjcmlwdGlvbjogfC0KICAg
        IG1pbml0ZXN0IHByb3ZpZGVzIGEgY29tcGxldGUgc3VpdGUgb2YgdGVzdGlu
        ZyBmYWNpbGl0aWVzIHN1cHBvcnRpbmcKICAgIFRERCwgQkRELCBtb2NraW5n
        LCBhbmQgYmVuY2htYXJraW5nLgoKICAgICAgICAiSSBoYWQgYSBjbGFzcyB3
        aXRoIEppbSBXZWlyaWNoIG9uIHRlc3RpbmcgbGFzdCB3ZWVrIGFuZCB3ZSB3
        ZXJlCiAgICAgICAgIGFsbG93ZWQgdG8gY2hvb3NlIG91ciB0ZXN0aW5nIGZy
        YW1ld29ya3MuIEtpcmsgSGFpbmVzIGFuZCBJIHdlcmUKICAgICAgICAgcGFp
        cmVkIHVwIGFuZCB3ZSBjcmFja2VkIG9wZW4gdGhlIGNvZGUgZm9yIGEgZmV3
        IHRlc3QKICAgICAgICAgZnJhbWV3b3Jrcy4uLgoKICAgICAgICAgSSBNVVNU
        IHNheSB0aGF0IG1pbml0ZXN0IGlzICp2ZXJ5KiByZWFkYWJsZSAvIHVuZGVy
        c3RhbmRhYmxlCiAgICAgICAgIGNvbXBhcmVkIHRvIHRoZSAnb3RoZXIgdHdv
        JyBvcHRpb25zIHdlIGxvb2tlZCBhdC4gTmljZWx5IGRvbmUgYW5kCiAgICAg
        ICAgIHRoYW5rIHlvdSBmb3IgaGVscGluZyB1cyBrZWVwIG91ciBtZW50YWwg
        c2FuaXR5LiIKCiAgICAgICAgLS0gV2F5bmUgRS4gU2VndWluCgogICAgbWlu
        aXRlc3QvdW5pdCBpcyBhIHNtYWxsIGFuZCBpbmNyZWRpYmx5IGZhc3QgdW5p
        dCB0ZXN0aW5nIGZyYW1ld29yay4KICAgIEl0IHByb3ZpZGVzIGEgcmljaCBz
        ZXQgb2YgYXNzZXJ0aW9ucyB0byBtYWtlIHlvdXIgdGVzdHMgY2xlYW4gYW5k
        CiAgICByZWFkYWJsZS4KCiAgICBtaW5pdGVzdC9zcGVjIGlzIGEgZnVuY3Rp
        b25hbGx5IGNvbXBsZXRlIHNwZWMgZW5naW5lLiBJdCBob29rcyBvbnRvCiAg
        ICBtaW5pdGVzdC91bml0IGFuZCBzZWFtbGVzc2x5IGJyaWRnZXMgdGVzdCBh
        c3NlcnRpb25zIG92ZXIgdG8gc3BlYwogICAgZXhwZWN0YXRpb25zLgoKICAg
        IG1pbml0ZXN0L2JlbmNobWFyayBpcyBhbiBhd2Vzb21lIHdheSB0byBhc3Nl
        cnQgdGhlIHBlcmZvcm1hbmNlIG9mIHlvdXIKICAgIGFsZ29yaXRobXMgaW4g
        YSByZXBlYXRhYmxlIG1hbm5lci4gTm93IHlvdSBjYW4gYXNzZXJ0IHRoYXQg
        eW91ciBuZXdiCiAgICBjby13b3JrZXIgZG9lc24ndCByZXBsYWNlIHlvdXIg
        bGluZWFyIGFsZ29yaXRobSB3aXRoIGFuIGV4cG9uZW50aWFsCiAgICBvbmUh
        CgogICAgbWluaXRlc3QvbW9jayBieSBTdGV2ZW4gQmFrZXIsIGlzIGEgYmVh
        dXRpZnVsbHkgdGlueSBtb2NrIChhbmQgc3R1YikKICAgIG9iamVjdCBmcmFt
        ZXdvcmsuCgogICAgbWluaXRlc3QvcHJpZGUgc2hvd3MgcHJpZGUgaW4gdGVz
        dGluZyBhbmQgYWRkcyBjb2xvcmluZyB0byB5b3VyIHRlc3QKICAgIG91dHB1
        dC4gSSBndWVzcyBpdCBpcyBhbiBleGFtcGxlIG9mIGhvdyB0byB3cml0ZSBJ
        TyBwaXBlcyB0b28uIDpQCgogICAgbWluaXRlc3QvdW5pdCBpcyBtZWFudCB0
        byBoYXZlIGEgY2xlYW4gaW1wbGVtZW50YXRpb24gZm9yIGxhbmd1YWdlCiAg
        ICBpbXBsZW1lbnRvcnMgdGhhdCBuZWVkIGEgbWluaW1hbCBzZXQgb2YgbWV0
        aG9kcyB0byBib290c3RyYXAgYSB3b3JraW5nCiAgICB0ZXN0IHN1aXRlLiBG
        b3IgZXhhbXBsZSwgdGhlcmUgaXMgbm8gbWFnaWMgaW52b2x2ZWQgZm9yIHRl
        c3QtY2FzZQogICAgZGlzY292ZXJ5LgoKICAgICAgICAiQWdhaW4sIEkgY2Fu
        J3QgcHJhaXNlIGVub3VnaCB0aGUgaWRlYSBvZiBhIHRlc3Rpbmcvc3BlY2lu
        ZwogICAgICAgICBmcmFtZXdvcmsgdGhhdCBJIGNhbiBhY3R1YWxseSByZWFk
        IGluIGZ1bGwgaW4gb25lIHNpdHRpbmchIgoKICAgICAgICAtLSBQaW90ciBT
        em90a293c2tpCgogICAgQ29tcGFyaW5nIHRvIHJzcGVjOgoKICAgICAgICBy
        c3BlYyBpcyBhIHRlc3RpbmcgRFNMLiBtaW5pdGVzdCBpcyBydWJ5LgoKICAg
        ICAgICAtLSBBZGFtIEhhd2tpbnMsICJCb3cgQmVmb3JlIE1pbmlUZXN0IgoK
        ICAgIG1pbml0ZXN0IGRvZXNuJ3QgcmVpbnZlbnQgYW55dGhpbmcgdGhhdCBy
        dWJ5IGFscmVhZHkgcHJvdmlkZXMsIGxpa2U6CiAgICBjbGFzc2VzLCBtb2R1
        bGVzLCBpbmhlcml0YW5jZSwgbWV0aG9kcy4gVGhpcyBtZWFucyB5b3Ugb25s
        eSBoYXZlIHRvCiAgICBsZWFybiBydWJ5IHRvIHVzZSBtaW5pdGVzdCBhbmQg
        YWxsIG9mIHlvdXIgcmVndWxhciBPTyBwcmFjdGljZXMgbGlrZQogICAgZXh0
        cmFjdC1tZXRob2QgcmVmYWN0b3JpbmdzIHN0aWxsIGFwcGx5LgogIGRvd25s
        b2Fkc19jb3VudDogMzUzNzI0CiAgbWV0YWRhdGE6IHt9CiAgbnVtYmVyOiA0
        LjcuNAogIHN1bW1hcnk6IG1pbml0ZXN0IHByb3ZpZGVzIGEgY29tcGxldGUg
        c3VpdGUgb2YgdGVzdGluZyBmYWNpbGl0aWVzIHN1cHBvcnRpbmcgVERELAog
        ICAgQkRELCBtb2NraW5nLCBhbmQgYmVuY2htYXJraW5nCiAgcGxhdGZvcm06
        IHJ1YnkKICBydWJ5Z2Vtc192ZXJzaW9uOiAiPj0gMCIKICBydWJ5X3ZlcnNp
        b246IAogIHByZXJlbGVhc2U6IGZhbHNlCiAgbGljZW5zZXM6IFtdCiAgcmVx
        dWlyZW1lbnRzOiAKICBzaGE6IDBiNzU5NjNhNzJhMDhhNjBhNzFmMGZkMDYz
        MzdlMmVlYTFhYWVkZTM3OTYxYjAyMzA1YTNiMjNlMTcyN2M2NjIKLSBhdXRo
        b3JzOiBSeWFuIERhdmlzCiAgYnVpbHRfYXQ6ICcyMDEzLTA0LTIxVDAwOjAw
        OjAwLjAwMFonCiAgY3JlYXRlZF9hdDogJzIwMTMtMDQtMjFUMDA6NTk6NDYu
        OTEwWicKICBkZXNjcmlwdGlvbjogfC0KICAgIG1pbml0ZXN0IHByb3ZpZGVz
        IGEgY29tcGxldGUgc3VpdGUgb2YgdGVzdGluZyBmYWNpbGl0aWVzIHN1cHBv
        cnRpbmcKICAgIFRERCwgQkRELCBtb2NraW5nLCBhbmQgYmVuY2htYXJraW5n
        LgoKICAgICAgICAiSSBoYWQgYSBjbGFzcyB3aXRoIEppbSBXZWlyaWNoIG9u
        IHRlc3RpbmcgbGFzdCB3ZWVrIGFuZCB3ZSB3ZXJlCiAgICAgICAgIGFsbG93
        ZWQgdG8gY2hvb3NlIG91ciB0ZXN0aW5nIGZyYW1ld29ya3MuIEtpcmsgSGFp
        bmVzIGFuZCBJIHdlcmUKICAgICAgICAgcGFpcmVkIHVwIGFuZCB3ZSBjcmFj
        a2VkIG9wZW4gdGhlIGNvZGUgZm9yIGEgZmV3IHRlc3QKICAgICAgICAgZnJh
        bWV3b3Jrcy4uLgoKICAgICAgICAgSSBNVVNUIHNheSB0aGF0IG1pbml0ZXN0
        IGlzICp2ZXJ5KiByZWFkYWJsZSAvIHVuZGVyc3RhbmRhYmxlCiAgICAgICAg
        IGNvbXBhcmVkIHRvIHRoZSAnb3RoZXIgdHdvJyBvcHRpb25zIHdlIGxvb2tl
        ZCBhdC4gTmljZWx5IGRvbmUgYW5kCiAgICAgICAgIHRoYW5rIHlvdSBmb3Ig
        aGVscGluZyB1cyBrZWVwIG91ciBtZW50YWwgc2FuaXR5LiIKCiAgICAgICAg
        LS0gV2F5bmUgRS4gU2VndWluCgogICAgbWluaXRlc3QvdW5pdCBpcyBhIHNt
        YWxsIGFuZCBpbmNyZWRpYmx5IGZhc3QgdW5pdCB0ZXN0aW5nIGZyYW1ld29y
        ay4KICAgIEl0IHByb3ZpZGVzIGEgcmljaCBzZXQgb2YgYXNzZXJ0aW9ucyB0
        byBtYWtlIHlvdXIgdGVzdHMgY2xlYW4gYW5kCiAgICByZWFkYWJsZS4KCiAg
        ICBtaW5pdGVzdC9zcGVjIGlzIGEgZnVuY3Rpb25hbGx5IGNvbXBsZXRlIHNw
        ZWMgZW5naW5lLiBJdCBob29rcyBvbnRvCiAgICBtaW5pdGVzdC91bml0IGFu
        ZCBzZWFtbGVzc2x5IGJyaWRnZXMgdGVzdCBhc3NlcnRpb25zIG92ZXIgdG8g
        c3BlYwogICAgZXhwZWN0YXRpb25zLgoKICAgIG1pbml0ZXN0L2JlbmNobWFy
        ayBpcyBhbiBhd2Vzb21lIHdheSB0byBhc3NlcnQgdGhlIHBlcmZvcm1hbmNl
        IG9mIHlvdXIKICAgIGFsZ29yaXRobXMgaW4gYSByZXBlYXRhYmxlIG1hbm5l
        ci4gTm93IHlvdSBjYW4gYXNzZXJ0IHRoYXQgeW91ciBuZXdiCiAgICBjby13
        b3JrZXIgZG9lc24ndCByZXBsYWNlIHlvdXIgbGluZWFyIGFsZ29yaXRobSB3
        aXRoIGFuIGV4cG9uZW50aWFsCiAgICBvbmUhCgogICAgbWluaXRlc3QvbW9j
        ayBieSBTdGV2ZW4gQmFrZXIsIGlzIGEgYmVhdXRpZnVsbHkgdGlueSBtb2Nr
        IChhbmQgc3R1YikKICAgIG9iamVjdCBmcmFtZXdvcmsuCgogICAgbWluaXRl
        c3QvcHJpZGUgc2hvd3MgcHJpZGUgaW4gdGVzdGluZyBhbmQgYWRkcyBjb2xv
        cmluZyB0byB5b3VyIHRlc3QKICAgIG91dHB1dC4gSSBndWVzcyBpdCBpcyBh
        biBleGFtcGxlIG9mIGhvdyB0byB3cml0ZSBJTyBwaXBlcyB0b28uIDpQCgog
        ICAgbWluaXRlc3QvdW5pdCBpcyBtZWFudCB0byBoYXZlIGEgY2xlYW4gaW1w
        bGVtZW50YXRpb24gZm9yIGxhbmd1YWdlCiAgICBpbXBsZW1lbnRvcnMgdGhh
        dCBuZWVkIGEgbWluaW1hbCBzZXQgb2YgbWV0aG9kcyB0byBib290c3RyYXAg
        YSB3b3JraW5nCiAgICB0ZXN0IHN1aXRlLiBGb3IgZXhhbXBsZSwgdGhlcmUg
        aXMgbm8gbWFnaWMgaW52b2x2ZWQgZm9yIHRlc3QtY2FzZQogICAgZGlzY292
        ZXJ5LgoKICAgICAgICAiQWdhaW4sIEkgY2FuJ3QgcHJhaXNlIGVub3VnaCB0
        aGUgaWRlYSBvZiBhIHRlc3Rpbmcvc3BlY2luZwogICAgICAgICBmcmFtZXdv
        cmsgdGhhdCBJIGNhbiBhY3R1YWxseSByZWFkIGluIGZ1bGwgaW4gb25lIHNp
        dHRpbmchIgoKICAgICAgICAtLSBQaW90ciBTem90a293c2tpCgogICAgQ29t
        cGFyaW5nIHRvIHJzcGVjOgoKICAgICAgICByc3BlYyBpcyBhIHRlc3Rpbmcg
        RFNMLiBtaW5pdGVzdCBpcyBydWJ5LgoKICAgICAgICAtLSBBZGFtIEhhd2tp
        bnMsICJCb3cgQmVmb3JlIE1pbmlUZXN0IgoKICAgIG1pbml0ZXN0IGRvZXNu
        J3QgcmVpbnZlbnQgYW55dGhpbmcgdGhhdCBydWJ5IGFscmVhZHkgcHJvdmlk
        ZXMsIGxpa2U6CiAgICBjbGFzc2VzLCBtb2R1bGVzLCBpbmhlcml0YW5jZSwg
        bWV0aG9kcy4gVGhpcyBtZWFucyB5b3Ugb25seSBoYXZlIHRvCiAgICBsZWFy
        biBydWJ5IHRvIHVzZSBtaW5pdGVzdCBhbmQgYWxsIG9mIHlvdXIgcmVndWxh
        ciBPTyBwcmFjdGljZXMgbGlrZQogICAgZXh0cmFjdC1tZXRob2QgcmVmYWN0
        b3JpbmdzIHN0aWxsIGFwcGx5LgogIGRvd25sb2Fkc19jb3VudDogMTA4OTcz
        CiAgbWV0YWRhdGE6IHt9CiAgbnVtYmVyOiA0LjcuMwogIHN1bW1hcnk6IG1p
        bml0ZXN0IHByb3ZpZGVzIGEgY29tcGxldGUgc3VpdGUgb2YgdGVzdGluZyBm
        YWNpbGl0aWVzIHN1cHBvcnRpbmcgVERELAogICAgQkRELCBtb2NraW5nLCBh
        bmQgYmVuY2htYXJraW5nCiAgcGxhdGZvcm06IHJ1YnkKICBydWJ5Z2Vtc192
        ZXJzaW9uOiAiPj0gMCIKICBydWJ5X3ZlcnNpb246IAogIHByZXJlbGVhc2U6
        IGZhbHNlCiAgbGljZW5zZXM6IFtdCiAgcmVxdWlyZW1lbnRzOiAKICBzaGE6
        IGM3YTUzNGEzNjRkMzg1ODM4MDgzZDA0NzhiN2E5MGYxZTk4ODNmYmFjNzJk
        OWQyMGNkNzcwYWQ5OTFiMWVkMWMKLSBhdXRob3JzOiBSeWFuIERhdmlzCiAg
        YnVpbHRfYXQ6ICcyMDEzLTA0LTE4VDAwOjAwOjAwLjAwMFonCiAgY3JlYXRl
        ZF9hdDogJzIwMTMtMDQtMThUMjM6MTY6MDIuNTAxWicKICBkZXNjcmlwdGlv
        bjogfC0KICAgIG1pbml0ZXN0IHByb3ZpZGVzIGEgY29tcGxldGUgc3VpdGUg
        b2YgdGVzdGluZyBmYWNpbGl0aWVzIHN1cHBvcnRpbmcKICAgIFRERCwgQkRE
        LCBtb2NraW5nLCBhbmQgYmVuY2htYXJraW5nLgoKICAgICAgICAiSSBoYWQg
        YSBjbGFzcyB3aXRoIEppbSBXZWlyaWNoIG9uIHRlc3RpbmcgbGFzdCB3ZWVr
        IGFuZCB3ZSB3ZXJlCiAgICAgICAgIGFsbG93ZWQgdG8gY2hvb3NlIG91ciB0
        ZXN0aW5nIGZyYW1ld29ya3MuIEtpcmsgSGFpbmVzIGFuZCBJIHdlcmUKICAg
        ICAgICAgcGFpcmVkIHVwIGFuZCB3ZSBjcmFja2VkIG9wZW4gdGhlIGNvZGUg
        Zm9yIGEgZmV3IHRlc3QKICAgICAgICAgZnJhbWV3b3Jrcy4uLgoKICAgICAg
        ICAgSSBNVVNUIHNheSB0aGF0IG1pbml0ZXN0IGlzICp2ZXJ5KiByZWFkYWJs
        ZSAvIHVuZGVyc3RhbmRhYmxlCiAgICAgICAgIGNvbXBhcmVkIHRvIHRoZSAn
        b3RoZXIgdHdvJyBvcHRpb25zIHdlIGxvb2tlZCBhdC4gTmljZWx5IGRvbmUg
        YW5kCiAgICAgICAgIHRoYW5rIHlvdSBmb3IgaGVscGluZyB1cyBrZWVwIG91
        ciBtZW50YWwgc2FuaXR5LiIKCiAgICAgICAgLS0gV2F5bmUgRS4gU2VndWlu
        CgogICAgbWluaXRlc3QvdW5pdCBpcyBhIHNtYWxsIGFuZCBpbmNyZWRpYmx5
        IGZhc3QgdW5pdCB0ZXN0aW5nIGZyYW1ld29yay4KICAgIEl0IHByb3ZpZGVz
        IGEgcmljaCBzZXQgb2YgYXNzZXJ0aW9ucyB0byBtYWtlIHlvdXIgdGVzdHMg
        Y2xlYW4gYW5kCiAgICByZWFkYWJsZS4KCiAgICBtaW5pdGVzdC9zcGVjIGlz
        IGEgZnVuY3Rpb25hbGx5IGNvbXBsZXRlIHNwZWMgZW5naW5lLiBJdCBob29r
        cyBvbnRvCiAgICBtaW5pdGVzdC91bml0IGFuZCBzZWFtbGVzc2x5IGJyaWRn
        ZXMgdGVzdCBhc3NlcnRpb25zIG92ZXIgdG8gc3BlYwogICAgZXhwZWN0YXRp
        b25zLgoKICAgIG1pbml0ZXN0L2JlbmNobWFyayBpcyBhbiBhd2Vzb21lIHdh
        eSB0byBhc3NlcnQgdGhlIHBlcmZvcm1hbmNlIG9mIHlvdXIKICAgIGFsZ29y
        aXRobXMgaW4gYSByZXBlYXRhYmxlIG1hbm5lci4gTm93IHlvdSBjYW4gYXNz
        ZXJ0IHRoYXQgeW91ciBuZXdiCiAgICBjby13b3JrZXIgZG9lc24ndCByZXBs
        YWNlIHlvdXIgbGluZWFyIGFsZ29yaXRobSB3aXRoIGFuIGV4cG9uZW50aWFs
        CiAgICBvbmUhCgogICAgbWluaXRlc3QvbW9jayBieSBTdGV2ZW4gQmFrZXIs
        IGlzIGEgYmVhdXRpZnVsbHkgdGlueSBtb2NrIChhbmQgc3R1YikKICAgIG9i
        amVjdCBmcmFtZXdvcmsuCgogICAgbWluaXRlc3QvcHJpZGUgc2hvd3MgcHJp
        ZGUgaW4gdGVzdGluZyBhbmQgYWRkcyBjb2xvcmluZyB0byB5b3VyIHRlc3QK
        ICAgIG91dHB1dC4gSSBndWVzcyBpdCBpcyBhbiBleGFtcGxlIG9mIGhvdyB0
        byB3cml0ZSBJTyBwaXBlcyB0b28uIDpQCgogICAgbWluaXRlc3QvdW5pdCBp
        cyBtZWFudCB0byBoYXZlIGEgY2xlYW4gaW1wbGVtZW50YXRpb24gZm9yIGxh
        bmd1YWdlCiAgICBpbXBsZW1lbnRvcnMgdGhhdCBuZWVkIGEgbWluaW1hbCBz
        ZXQgb2YgbWV0aG9kcyB0byBib290c3RyYXAgYSB3b3JraW5nCiAgICB0ZXN0
        IHN1aXRlLiBGb3IgZXhhbXBsZSwgdGhlcmUgaXMgbm8gbWFnaWMgaW52b2x2
        ZWQgZm9yIHRlc3QtY2FzZQogICAgZGlzY292ZXJ5LgoKICAgICAgICAiQWdh
        aW4sIEkgY2FuJ3QgcHJhaXNlIGVub3VnaCB0aGUgaWRlYSBvZiBhIHRlc3Rp
        bmcvc3BlY2luZwogICAgICAgICBmcmFtZXdvcmsgdGhhdCBJIGNhbiBhY3R1
        YWxseSByZWFkIGluIGZ1bGwgaW4gb25lIHNpdHRpbmchIgoKICAgICAgICAt
        LSBQaW90ciBTem90a293c2tpCgogICAgQ29tcGFyaW5nIHRvIHJzcGVjOgoK
        ICAgICAgICByc3BlYyBpcyBhIHRlc3RpbmcgRFNMLiBtaW5pdGVzdCBpcyBy
        dWJ5LgoKICAgICAgICAtLSBBZGFtIEhhd2tpbnMsICJCb3cgQmVmb3JlIE1p
        bmlUZXN0IgoKICAgIG1pbml0ZXN0IGRvZXNuJ3QgcmVpbnZlbnQgYW55dGhp
        bmcgdGhhdCBydWJ5IGFscmVhZHkgcHJvdmlkZXMsIGxpa2U6CiAgICBjbGFz
        c2VzLCBtb2R1bGVzLCBpbmhlcml0YW5jZSwgbWV0aG9kcy4gVGhpcyBtZWFu
        cyB5b3Ugb25seSBoYXZlIHRvCiAgICBsZWFybiBydWJ5IHRvIHVzZSBtaW5p
        dGVzdCBhbmQgYWxsIG9mIHlvdXIgcmVndWxhciBPTyBwcmFjdGljZXMgbGlr
        ZQogICAgZXh0cmFjdC1tZXRob2QgcmVmYWN0b3JpbmdzIHN0aWxsIGFwcGx5
        LgogIGRvd25sb2Fkc19jb3VudDogMjYyMDkKICBtZXRhZGF0YToge30KICBu
        dW1iZXI6IDQuNy4yCiAgc3VtbWFyeTogbWluaXRlc3QgcHJvdmlkZXMgYSBj
        b21wbGV0ZSBzdWl0ZSBvZiB0ZXN0aW5nIGZhY2lsaXRpZXMgc3VwcG9ydGlu
        ZyBUREQsCiAgICBCREQsIG1vY2tpbmcsIGFuZCBiZW5jaG1hcmtpbmcKICBw
        bGF0Zm9ybTogcnVieQogIHJ1YnlnZW1zX3ZlcnNpb246ICI+PSAwIgogIHJ1
        YnlfdmVyc2lvbjogCiAgcHJlcmVsZWFzZTogZmFsc2UKICBsaWNlbnNlczog
        W10KICByZXF1aXJlbWVudHM6IAogIHNoYTogMWUzNzhiMmExMGY2NzVjYmIx
        YTE5NTA4NWQyYzhhOGFiZThjYTcyNTIwMGNjMTczYzIxMzA1YjBiMWFhNzNl
        OAotIGF1dGhvcnM6IFJ5YW4gRGF2aXMKICBidWlsdF9hdDogJzIwMTMtMDQt
        MTBUMDA6MDA6MDAuMDAwWicKICBjcmVhdGVkX2F0OiAnMjAxMy0wNC0xMFQw
        MzoxMDowNi41NTFaJwogIGRlc2NyaXB0aW9uOiB8LQogICAgbWluaXRlc3Qg
        cHJvdmlkZXMgYSBjb21wbGV0ZSBzdWl0ZSBvZiB0ZXN0aW5nIGZhY2lsaXRp
        ZXMgc3VwcG9ydGluZwogICAgVERELCBCREQsIG1vY2tpbmcsIGFuZCBiZW5j
        aG1hcmtpbmcuCgogICAgICAgICJJIGhhZCBhIGNsYXNzIHdpdGggSmltIFdl
        aXJpY2ggb24gdGVzdGluZyBsYXN0IHdlZWsgYW5kIHdlIHdlcmUKICAgICAg
        ICAgYWxsb3dlZCB0byBjaG9vc2Ugb3VyIHRlc3RpbmcgZnJhbWV3b3Jrcy4g
        S2lyayBIYWluZXMgYW5kIEkgd2VyZQogICAgICAgICBwYWlyZWQgdXAgYW5k
        IHdlIGNyYWNrZWQgb3BlbiB0aGUgY29kZSBmb3IgYSBmZXcgdGVzdAogICAg
        ICAgICBmcmFtZXdvcmtzLi4uCgogICAgICAgICBJIE1VU1Qgc2F5IHRoYXQg
        bWluaXRlc3QgaXMgKnZlcnkqIHJlYWRhYmxlIC8gdW5kZXJzdGFuZGFibGUK
        ICAgICAgICAgY29tcGFyZWQgdG8gdGhlICdvdGhlciB0d28nIG9wdGlvbnMg
        d2UgbG9va2VkIGF0LiBOaWNlbHkgZG9uZSBhbmQKICAgICAgICAgdGhhbmsg
        eW91IGZvciBoZWxwaW5nIHVzIGtlZXAgb3VyIG1lbnRhbCBzYW5pdHkuIgoK
        ICAgICAgICAtLSBXYXluZSBFLiBTZWd1aW4KCiAgICBtaW5pdGVzdC91bml0
        IGlzIGEgc21hbGwgYW5kIGluY3JlZGlibHkgZmFzdCB1bml0IHRlc3Rpbmcg
        ZnJhbWV3b3JrLgogICAgSXQgcHJvdmlkZXMgYSByaWNoIHNldCBvZiBhc3Nl
        cnRpb25zIHRvIG1ha2UgeW91ciB0ZXN0cyBjbGVhbiBhbmQKICAgIHJlYWRh
        YmxlLgoKICAgIG1pbml0ZXN0L3NwZWMgaXMgYSBmdW5jdGlvbmFsbHkgY29t
        cGxldGUgc3BlYyBlbmdpbmUuIEl0IGhvb2tzIG9udG8KICAgIG1pbml0ZXN0
        L3VuaXQgYW5kIHNlYW1sZXNzbHkgYnJpZGdlcyB0ZXN0IGFzc2VydGlvbnMg
        b3ZlciB0byBzcGVjCiAgICBleHBlY3RhdGlvbnMuCgogICAgbWluaXRlc3Qv
        YmVuY2htYXJrIGlzIGFuIGF3ZXNvbWUgd2F5IHRvIGFzc2VydCB0aGUgcGVy
        Zm9ybWFuY2Ugb2YgeW91cgogICAgYWxnb3JpdGhtcyBpbiBhIHJlcGVhdGFi
        bGUgbWFubmVyLiBOb3cgeW91IGNhbiBhc3NlcnQgdGhhdCB5b3VyIG5ld2IK
        ICAgIGNvLXdvcmtlciBkb2Vzbid0IHJlcGxhY2UgeW91ciBsaW5lYXIgYWxn
        b3JpdGhtIHdpdGggYW4gZXhwb25lbnRpYWwKICAgIG9uZSEKCiAgICBtaW5p
        dGVzdC9tb2NrIGJ5IFN0ZXZlbiBCYWtlciwgaXMgYSBiZWF1dGlmdWxseSB0
        aW55IG1vY2sgKGFuZCBzdHViKQogICAgb2JqZWN0IGZyYW1ld29yay4KCiAg
        ICBtaW5pdGVzdC9wcmlkZSBzaG93cyBwcmlkZSBpbiB0ZXN0aW5nIGFuZCBh
        ZGRzIGNvbG9yaW5nIHRvIHlvdXIgdGVzdAogICAgb3V0cHV0LiBJIGd1ZXNz
        IGl0IGlzIGFuIGV4YW1wbGUgb2YgaG93IHRvIHdyaXRlIElPIHBpcGVzIHRv
        by4gOlAKCiAgICBtaW5pdGVzdC91bml0IGlzIG1lYW50IHRvIGhhdmUgYSBj
        bGVhbiBpbXBsZW1lbnRhdGlvbiBmb3IgbGFuZ3VhZ2UKICAgIGltcGxlbWVu
        dG9ycyB0aGF0IG5lZWQgYSBtaW5pbWFsIHNldCBvZiBtZXRob2RzIHRvIGJv
        b3RzdHJhcCBhIHdvcmtpbmcKICAgIHRlc3Qgc3VpdGUuIEZvciBleGFtcGxl
        LCB0aGVyZSBpcyBubyBtYWdpYyBpbnZvbHZlZCBmb3IgdGVzdC1jYXNlCiAg
        ICBkaXNjb3ZlcnkuCgogICAgICAgICJBZ2FpbiwgSSBjYW4ndCBwcmFpc2Ug
        ZW5vdWdoIHRoZSBpZGVhIG9mIGEgdGVzdGluZy9zcGVjaW5nCiAgICAgICAg
        IGZyYW1ld29yayB0aGF0IEkgY2FuIGFjdHVhbGx5IHJlYWQgaW4gZnVsbCBp
        biBvbmUgc2l0dGluZyEiCgogICAgICAgIC0tIFBpb3RyIFN6b3Rrb3dza2kK
        CiAgICBDb21wYXJpbmcgdG8gcnNwZWM6CgogICAgICAgIHJzcGVjIGlzIGEg
        dGVzdGluZyBEU0wuIG1pbml0ZXN0IGlzIHJ1YnkuCgogICAgICAgIC0tIEFk
        YW0gSGF3a2lucywgIkJvdyBCZWZvcmUgTWluaVRlc3QiCgogICAgbWluaXRl
        c3QgZG9lc24ndCByZWludmVudCBhbnl0aGluZyB0aGF0IHJ1YnkgYWxyZWFk
        eSBwcm92aWRlcywgbGlrZToKICAgIGNsYXNzZXMsIG1vZHVsZXMsIGluaGVy
        aXRhbmNlLCBtZXRob2RzLiBUaGlzIG1lYW5zIHlvdSBvbmx5IGhhdmUgdG8K
        ICAgIGxlYXJuIHJ1YnkgdG8gdXNlIG1pbml0ZXN0IGFuZCBhbGwgb2YgeW91
        ciByZWd1bGFyIE9PIHByYWN0aWNlcyBsaWtlCiAgICBleHRyYWN0LW1ldGhv
        ZCByZWZhY3RvcmluZ3Mgc3RpbGwgYXBwbHkuCiAgZG93bmxvYWRzX2NvdW50
        OiAxMDc2MDgKICBtZXRhZGF0YToge30KICBudW1iZXI6IDQuNy4xCiAgc3Vt
        bWFyeTogbWluaXRlc3QgcHJvdmlkZXMgYSBjb21wbGV0ZSBzdWl0ZSBvZiB0
        ZXN0aW5nIGZhY2lsaXRpZXMgc3VwcG9ydGluZyBUREQsCiAgICBCREQsIG1v
        Y2tpbmcsIGFuZCBiZW5jaG1hcmtpbmcKICBwbGF0Zm9ybTogcnVieQogIHJ1
        YnlnZW1zX3ZlcnNpb246ICI+PSAwIgogIHJ1YnlfdmVyc2lvbjogCiAgcHJl
        cmVsZWFzZTogZmFsc2UKICBsaWNlbnNlczogW10KICByZXF1aXJlbWVudHM6
        IAogIHNoYTogNzFlZmRlMjlmNmVhOTc1YTNmMGQ4YjIwNjNjZTAxNjAxYmQ3
        MGM2YjAyMjFhNGU0OGRmZDJjZDE4ZTBiOTcwOAotIGF1dGhvcnM6IFJ5YW4g
        RGF2aXMKICBidWlsdF9hdDogJzIwMTMtMDMtMThUMDA6MDA6MDAuMDAwWicK
        ICBjcmVhdGVkX2F0OiAnMjAxMy0wMy0xOFQyMjozMTo1Mi4xNjVaJwogIGRl
        c2NyaXB0aW9uOiB8LQogICAgbWluaXRlc3QgcHJvdmlkZXMgYSBjb21wbGV0
        ZSBzdWl0ZSBvZiB0ZXN0aW5nIGZhY2lsaXRpZXMgc3VwcG9ydGluZwogICAg
        VERELCBCREQsIG1vY2tpbmcsIGFuZCBiZW5jaG1hcmtpbmcuCgogICAgICAg
        ICJJIGhhZCBhIGNsYXNzIHdpdGggSmltIFdlaXJpY2ggb24gdGVzdGluZyBs
        YXN0IHdlZWsgYW5kIHdlIHdlcmUKICAgICAgICAgYWxsb3dlZCB0byBjaG9v
        c2Ugb3VyIHRlc3RpbmcgZnJhbWV3b3Jrcy4gS2lyayBIYWluZXMgYW5kIEkg
        d2VyZQogICAgICAgICBwYWlyZWQgdXAgYW5kIHdlIGNyYWNrZWQgb3BlbiB0
        aGUgY29kZSBmb3IgYSBmZXcgdGVzdAogICAgICAgICBmcmFtZXdvcmtzLi4u
        CgogICAgICAgICBJIE1VU1Qgc2F5IHRoYXQgbWluaXRlc3QgaXMgKnZlcnkq
        IHJlYWRhYmxlIC8gdW5kZXJzdGFuZGFibGUKICAgICAgICAgY29tcGFyZWQg
        dG8gdGhlICdvdGhlciB0d28nIG9wdGlvbnMgd2UgbG9va2VkIGF0LiBOaWNl
        bHkgZG9uZSBhbmQKICAgICAgICAgdGhhbmsgeW91IGZvciBoZWxwaW5nIHVz
        IGtlZXAgb3VyIG1lbnRhbCBzYW5pdHkuIgoKICAgICAgICAtLSBXYXluZSBF
        LiBTZWd1aW4KCiAgICBtaW5pdGVzdC91bml0IGlzIGEgc21hbGwgYW5kIGlu
        Y3JlZGlibHkgZmFzdCB1bml0IHRlc3RpbmcgZnJhbWV3b3JrLgogICAgSXQg
        cHJvdmlkZXMgYSByaWNoIHNldCBvZiBhc3NlcnRpb25zIHRvIG1ha2UgeW91
        ciB0ZXN0cyBjbGVhbiBhbmQKICAgIHJlYWRhYmxlLgoKICAgIG1pbml0ZXN0
        L3NwZWMgaXMgYSBmdW5jdGlvbmFsbHkgY29tcGxldGUgc3BlYyBlbmdpbmUu
        IEl0IGhvb2tzIG9udG8KICAgIG1pbml0ZXN0L3VuaXQgYW5kIHNlYW1sZXNz
        bHkgYnJpZGdlcyB0ZXN0IGFzc2VydGlvbnMgb3ZlciB0byBzcGVjCiAgICBl
        eHBlY3RhdGlvbnMuCgogICAgbWluaXRlc3QvYmVuY2htYXJrIGlzIGFuIGF3
        ZXNvbWUgd2F5IHRvIGFzc2VydCB0aGUgcGVyZm9ybWFuY2Ugb2YgeW91cgog
        ICAgYWxnb3JpdGhtcyBpbiBhIHJlcGVhdGFibGUgbWFubmVyLiBOb3cgeW91
        IGNhbiBhc3NlcnQgdGhhdCB5b3VyIG5ld2IKICAgIGNvLXdvcmtlciBkb2Vz
        bid0IHJlcGxhY2UgeW91ciBsaW5lYXIgYWxnb3JpdGhtIHdpdGggYW4gZXhw
        b25lbnRpYWwKICAgIG9uZSEKCiAgICBtaW5pdGVzdC9tb2NrIGJ5IFN0ZXZl
        biBCYWtlciwgaXMgYSBiZWF1dGlmdWxseSB0aW55IG1vY2sgKGFuZCBzdHVi
        KQogICAgb2JqZWN0IGZyYW1ld29yay4KCiAgICBtaW5pdGVzdC9wcmlkZSBz
        aG93cyBwcmlkZSBpbiB0ZXN0aW5nIGFuZCBhZGRzIGNvbG9yaW5nIHRvIHlv
        dXIgdGVzdAogICAgb3V0cHV0LiBJIGd1ZXNzIGl0IGlzIGFuIGV4YW1wbGUg
        b2YgaG93IHRvIHdyaXRlIElPIHBpcGVzIHRvby4gOlAKCiAgICBtaW5pdGVz
        dC91bml0IGlzIG1lYW50IHRvIGhhdmUgYSBjbGVhbiBpbXBsZW1lbnRhdGlv
        biBmb3IgbGFuZ3VhZ2UKICAgIGltcGxlbWVudG9ycyB0aGF0IG5lZWQgYSBt
        aW5pbWFsIHNldCBvZiBtZXRob2RzIHRvIGJvb3RzdHJhcCBhIHdvcmtpbmcK
        ICAgIHRlc3Qgc3VpdGUuIEZvciBleGFtcGxlLCB0aGVyZSBpcyBubyBtYWdp
        YyBpbnZvbHZlZCBmb3IgdGVzdC1jYXNlCiAgICBkaXNjb3ZlcnkuCgogICAg
        ICAgICJBZ2FpbiwgSSBjYW4ndCBwcmFpc2UgZW5vdWdoIHRoZSBpZGVhIG9m
        IGEgdGVzdGluZy9zcGVjaW5nCiAgICAgICAgIGZyYW1ld29yayB0aGF0IEkg
        Y2FuIGFjdHVhbGx5IHJlYWQgaW4gZnVsbCBpbiBvbmUgc2l0dGluZyEiCgog
        ICAgICAgIC0tIFBpb3RyIFN6b3Rrb3dza2kKCiAgICBDb21wYXJpbmcgdG8g
        cnNwZWM6CgogICAgICAgIHJzcGVjIGlzIGEgdGVzdGluZyBEU0wuIG1pbml0
        ZXN0IGlzIHJ1YnkuCgogICAgICAgIC0tIEFkYW0gSGF3a2lucywgIkJvdyBC
        ZWZvcmUgTWluaVRlc3QiCgogICAgbWluaXRlc3QgZG9lc24ndCByZWludmVu
        dCBhbnl0aGluZyB0aGF0IHJ1YnkgYWxyZWFkeSBwcm92aWRlcywgbGlrZToK
        ICAgIGNsYXNzZXMsIG1vZHVsZXMsIGluaGVyaXRhbmNlLCBtZXRob2RzLiBU
        aGlzIG1lYW5zIHlvdSBvbmx5IGhhdmUgdG8KICAgIGxlYXJuIHJ1YnkgdG8g
        dXNlIG1pbml0ZXN0IGFuZCBhbGwgb2YgeW91ciByZWd1bGFyIE9PIHByYWN0
        aWNlcyBsaWtlCiAgICBleHRyYWN0LW1ldGhvZCByZWZhY3RvcmluZ3Mgc3Rp
        bGwgYXBwbHkuCiAgZG93bmxvYWRzX2NvdW50OiAzNTE5NjUKICBtZXRhZGF0
        YToge30KICBudW1iZXI6IDQuNy4wCiAgc3VtbWFyeTogbWluaXRlc3QgcHJv
        dmlkZXMgYSBjb21wbGV0ZSBzdWl0ZSBvZiB0ZXN0aW5nIGZhY2lsaXRpZXMg
        c3VwcG9ydGluZyBUREQsCiAgICBCREQsIG1vY2tpbmcsIGFuZCBiZW5jaG1h
        cmtpbmcKICBwbGF0Zm9ybTogcnVieQogIHJ1YnlnZW1zX3ZlcnNpb246ICI+
        PSAwIgogIHJ1YnlfdmVyc2lvbjogCiAgcHJlcmVsZWFzZTogZmFsc2UKICBs
        aWNlbnNlczogW10KICByZXF1aXJlbWVudHM6IAogIHNoYTogYjI1ZWE5ZGNl
        ZWE2ZGU5MjEzMzFhZTdjYTc0MTU4ZTk4NzhlZjVhY2NlMDVmZjNiYzNhZTFk
        MjkzZjAyY2NjMAotIGF1dGhvcnM6IFJ5YW4gRGF2aXMKICBidWlsdF9hdDog
        JzIwMTMtMDItMjhUMDA6MDA6MDAuMDAwWicKICBjcmVhdGVkX2F0OiAnMjAx
        My0wMi0yOFQwMToxOTowNC4xMTNaJwogIGRlc2NyaXB0aW9uOiB8LQogICAg
        bWluaXRlc3QgcHJvdmlkZXMgYSBjb21wbGV0ZSBzdWl0ZSBvZiB0ZXN0aW5n
        IGZhY2lsaXRpZXMgc3VwcG9ydGluZwogICAgVERELCBCREQsIG1vY2tpbmcs
        IGFuZCBiZW5jaG1hcmtpbmcuCgogICAgICAgICJJIGhhZCBhIGNsYXNzIHdp
        dGggSmltIFdlaXJpY2ggb24gdGVzdGluZyBsYXN0IHdlZWsgYW5kIHdlIHdl
        cmUKICAgICAgICAgYWxsb3dlZCB0byBjaG9vc2Ugb3VyIHRlc3RpbmcgZnJh
        bWV3b3Jrcy4gS2lyayBIYWluZXMgYW5kIEkgd2VyZQogICAgICAgICBwYWly
        ZWQgdXAgYW5kIHdlIGNyYWNrZWQgb3BlbiB0aGUgY29kZSBmb3IgYSBmZXcg
        dGVzdAogICAgICAgICBmcmFtZXdvcmtzLi4uCgogICAgICAgICBJIE1VU1Qg
        c2F5IHRoYXQgbWluaXRlc3QgaXMgKnZlcnkqIHJlYWRhYmxlIC8gdW5kZXJz
        dGFuZGFibGUKICAgICAgICAgY29tcGFyZWQgdG8gdGhlICdvdGhlciB0d28n
        IG9wdGlvbnMgd2UgbG9va2VkIGF0LiBOaWNlbHkgZG9uZSBhbmQKICAgICAg
        ICAgdGhhbmsgeW91IGZvciBoZWxwaW5nIHVzIGtlZXAgb3VyIG1lbnRhbCBz
        YW5pdHkuIgoKICAgICAgICAtLSBXYXluZSBFLiBTZWd1aW4KCiAgICBtaW5p
        dGVzdC91bml0IGlzIGEgc21hbGwgYW5kIGluY3JlZGlibHkgZmFzdCB1bml0
        IHRlc3RpbmcgZnJhbWV3b3JrLgogICAgSXQgcHJvdmlkZXMgYSByaWNoIHNl
        dCBvZiBhc3NlcnRpb25zIHRvIG1ha2UgeW91ciB0ZXN0cyBjbGVhbiBhbmQK
        ICAgIHJlYWRhYmxlLgoKICAgIG1pbml0ZXN0L3NwZWMgaXMgYSBmdW5jdGlv
        bmFsbHkgY29tcGxldGUgc3BlYyBlbmdpbmUuIEl0IGhvb2tzIG9udG8KICAg
        IG1pbml0ZXN0L3VuaXQgYW5kIHNlYW1sZXNzbHkgYnJpZGdlcyB0ZXN0IGFz
        c2VydGlvbnMgb3ZlciB0byBzcGVjCiAgICBleHBlY3RhdGlvbnMuCgogICAg
        bWluaXRlc3QvYmVuY2htYXJrIGlzIGFuIGF3ZXNvbWUgd2F5IHRvIGFzc2Vy
        dCB0aGUgcGVyZm9ybWFuY2Ugb2YgeW91cgogICAgYWxnb3JpdGhtcyBpbiBh
        IHJlcGVhdGFibGUgbWFubmVyLiBOb3cgeW91IGNhbiBhc3NlcnQgdGhhdCB5
        b3VyIG5ld2IKICAgIGNvLXdvcmtlciBkb2Vzbid0IHJlcGxhY2UgeW91ciBs
        aW5lYXIgYWxnb3JpdGhtIHdpdGggYW4gZXhwb25lbnRpYWwKICAgIG9uZSEK
        CiAgICBtaW5pdGVzdC9tb2NrIGJ5IFN0ZXZlbiBCYWtlciwgaXMgYSBiZWF1
        dGlmdWxseSB0aW55IG1vY2sgKGFuZCBzdHViKQogICAgb2JqZWN0IGZyYW1l
        d29yay4KCiAgICBtaW5pdGVzdC9wcmlkZSBzaG93cyBwcmlkZSBpbiB0ZXN0
        aW5nIGFuZCBhZGRzIGNvbG9yaW5nIHRvIHlvdXIgdGVzdAogICAgb3V0cHV0
        LiBJIGd1ZXNzIGl0IGlzIGFuIGV4YW1wbGUgb2YgaG93IHRvIHdyaXRlIElP
        IHBpcGVzIHRvby4gOlAKCiAgICBtaW5pdGVzdC91bml0IGlzIG1lYW50IHRv
        IGhhdmUgYSBjbGVhbiBpbXBsZW1lbnRhdGlvbiBmb3IgbGFuZ3VhZ2UKICAg
        IGltcGxlbWVudG9ycyB0aGF0IG5lZWQgYSBtaW5pbWFsIHNldCBvZiBtZXRo
        b2RzIHRvIGJvb3RzdHJhcCBhIHdvcmtpbmcKICAgIHRlc3Qgc3VpdGUuIEZv
        ciBleGFtcGxlLCB0aGVyZSBpcyBubyBtYWdpYyBpbnZvbHZlZCBmb3IgdGVz
        dC1jYXNlCiAgICBkaXNjb3ZlcnkuCgogICAgICAgICJBZ2FpbiwgSSBjYW4n
        dCBwcmFpc2UgZW5vdWdoIHRoZSBpZGVhIG9mIGEgdGVzdGluZy9zcGVjaW5n
        CiAgICAgICAgIGZyYW1ld29yayB0aGF0IEkgY2FuIGFjdHVhbGx5IHJlYWQg
        aW4gZnVsbCBpbiBvbmUgc2l0dGluZyEiCgogICAgICAgIC0tIFBpb3RyIFN6
        b3Rrb3dza2kKCiAgICBDb21wYXJpbmcgdG8gcnNwZWM6CgogICAgICAgIHJz
        cGVjIGlzIGEgdGVzdGluZyBEU0wuIG1pbml0ZXN0IGlzIHJ1YnkuCgogICAg
        ICAgIC0tIEFkYW0gSGF3a2lucywgIkJvdyBCZWZvcmUgTWluaVRlc3QiCgog
        ICAgbWluaXRlc3QgZG9lc24ndCByZWludmVudCBhbnl0aGluZyB0aGF0IHJ1
        YnkgYWxyZWFkeSBwcm92aWRlcywgbGlrZToKICAgIGNsYXNzZXMsIG1vZHVs
        ZXMsIGluaGVyaXRhbmNlLCBtZXRob2RzLiBUaGlzIG1lYW5zIHlvdSBvbmx5
        IGhhdmUgdG8KICAgIGxlYXJuIHJ1YnkgdG8gdXNlIG1pbml0ZXN0IGFuZCBh
        bGwgb2YgeW91ciByZWd1bGFyIE9PIHByYWN0aWNlcyBsaWtlCiAgICBleHRy
        YWN0LW1ldGhvZCByZWZhY3RvcmluZ3Mgc3RpbGwgYXBwbHkuCiAgZG93bmxv
        YWRzX2NvdW50OiAxNzEyMzIKICBtZXRhZGF0YToge30KICBudW1iZXI6IDQu
        Ni4yCiAgc3VtbWFyeTogbWluaXRlc3QgcHJvdmlkZXMgYSBjb21wbGV0ZSBz
        dWl0ZSBvZiB0ZXN0aW5nIGZhY2lsaXRpZXMgc3VwcG9ydGluZyBUREQsCiAg
        ICBCREQsIG1vY2tpbmcsIGFuZCBiZW5jaG1hcmtpbmcKICBwbGF0Zm9ybTog
        cnVieQogIHJ1YnlnZW1zX3ZlcnNpb246ICI+PSAwIgogIHJ1YnlfdmVyc2lv
        bjogCiAgcHJlcmVsZWFzZTogZmFsc2UKICBsaWNlbnNlczogW10KICByZXF1
        aXJlbWVudHM6IAogIHNoYTogZmVmNjdiY2VjYWYxMzBmNmI1YWZlNGI0MzU4
        N2EzZjdiY2JkZDlkOGEyNjViZDliNDFkOWE1ZTI2OTI5ZWZjYQotIGF1dGhv
        cnM6IFJ5YW4gRGF2aXMKICBidWlsdF9hdDogJzIwMTMtMDItMTVUMDA6MDA6
        MDAuMDAwWicKICBjcmVhdGVkX2F0OiAnMjAxMy0wMi0xNVQwMDoyOToyMS42
        OTRaJwogIGRlc2NyaXB0aW9uOiB8LQogICAgbWluaXRlc3QgcHJvdmlkZXMg
        YSBjb21wbGV0ZSBzdWl0ZSBvZiB0ZXN0aW5nIGZhY2lsaXRpZXMgc3VwcG9y
        dGluZwogICAgVERELCBCREQsIG1vY2tpbmcsIGFuZCBiZW5jaG1hcmtpbmcu
        CgogICAgICAgICJJIGhhZCBhIGNsYXNzIHdpdGggSmltIFdlaXJpY2ggb24g
        dGVzdGluZyBsYXN0IHdlZWsgYW5kIHdlIHdlcmUKICAgICAgICAgYWxsb3dl
        ZCB0byBjaG9vc2Ugb3VyIHRlc3RpbmcgZnJhbWV3b3Jrcy4gS2lyayBIYWlu
        ZXMgYW5kIEkgd2VyZQogICAgICAgICBwYWlyZWQgdXAgYW5kIHdlIGNyYWNr
        ZWQgb3BlbiB0aGUgY29kZSBmb3IgYSBmZXcgdGVzdAogICAgICAgICBmcmFt
        ZXdvcmtzLi4uCgogICAgICAgICBJIE1VU1Qgc2F5IHRoYXQgbWluaXRlc3Qg
        aXMgKnZlcnkqIHJlYWRhYmxlIC8gdW5kZXJzdGFuZGFibGUKICAgICAgICAg
        Y29tcGFyZWQgdG8gdGhlICdvdGhlciB0d28nIG9wdGlvbnMgd2UgbG9va2Vk
        IGF0LiBOaWNlbHkgZG9uZSBhbmQKICAgICAgICAgdGhhbmsgeW91IGZvciBo
        ZWxwaW5nIHVzIGtlZXAgb3VyIG1lbnRhbCBzYW5pdHkuIgoKICAgICAgICAt
        LSBXYXluZSBFLiBTZWd1aW4KCiAgICBtaW5pdGVzdC91bml0IGlzIGEgc21h
        bGwgYW5kIGluY3JlZGlibHkgZmFzdCB1bml0IHRlc3RpbmcgZnJhbWV3b3Jr
        LgogICAgSXQgcHJvdmlkZXMgYSByaWNoIHNldCBvZiBhc3NlcnRpb25zIHRv
        IG1ha2UgeW91ciB0ZXN0cyBjbGVhbiBhbmQKICAgIHJlYWRhYmxlLgoKICAg
        IG1pbml0ZXN0L3NwZWMgaXMgYSBmdW5jdGlvbmFsbHkgY29tcGxldGUgc3Bl
        YyBlbmdpbmUuIEl0IGhvb2tzIG9udG8KICAgIG1pbml0ZXN0L3VuaXQgYW5k
        IHNlYW1sZXNzbHkgYnJpZGdlcyB0ZXN0IGFzc2VydGlvbnMgb3ZlciB0byBz
        cGVjCiAgICBleHBlY3RhdGlvbnMuCgogICAgbWluaXRlc3QvYmVuY2htYXJr
        IGlzIGFuIGF3ZXNvbWUgd2F5IHRvIGFzc2VydCB0aGUgcGVyZm9ybWFuY2Ug
        b2YgeW91cgogICAgYWxnb3JpdGhtcyBpbiBhIHJlcGVhdGFibGUgbWFubmVy
        LiBOb3cgeW91IGNhbiBhc3NlcnQgdGhhdCB5b3VyIG5ld2IKICAgIGNvLXdv
        cmtlciBkb2Vzbid0IHJlcGxhY2UgeW91ciBsaW5lYXIgYWxnb3JpdGhtIHdp
        dGggYW4gZXhwb25lbnRpYWwKICAgIG9uZSEKCiAgICBtaW5pdGVzdC9tb2Nr
        IGJ5IFN0ZXZlbiBCYWtlciwgaXMgYSBiZWF1dGlmdWxseSB0aW55IG1vY2sg
        KGFuZCBzdHViKQogICAgb2JqZWN0IGZyYW1ld29yay4KCiAgICBtaW5pdGVz
        dC9wcmlkZSBzaG93cyBwcmlkZSBpbiB0ZXN0aW5nIGFuZCBhZGRzIGNvbG9y
        aW5nIHRvIHlvdXIgdGVzdAogICAgb3V0cHV0LiBJIGd1ZXNzIGl0IGlzIGFu
        IGV4YW1wbGUgb2YgaG93IHRvIHdyaXRlIElPIHBpcGVzIHRvby4gOlAKCiAg
        ICBtaW5pdGVzdC91bml0IGlzIG1lYW50IHRvIGhhdmUgYSBjbGVhbiBpbXBs
        ZW1lbnRhdGlvbiBmb3IgbGFuZ3VhZ2UKICAgIGltcGxlbWVudG9ycyB0aGF0
        IG5lZWQgYSBtaW5pbWFsIHNldCBvZiBtZXRob2RzIHRvIGJvb3RzdHJhcCBh
        IHdvcmtpbmcKICAgIHRlc3Qgc3VpdGUuIEZvciBleGFtcGxlLCB0aGVyZSBp
        cyBubyBtYWdpYyBpbnZvbHZlZCBmb3IgdGVzdC1jYXNlCiAgICBkaXNjb3Zl
        cnkuCgogICAgICAgICJBZ2FpbiwgSSBjYW4ndCBwcmFpc2UgZW5vdWdoIHRo
        ZSBpZGVhIG9mIGEgdGVzdGluZy9zcGVjaW5nCiAgICAgICAgIGZyYW1ld29y
        ayB0aGF0IEkgY2FuIGFjdHVhbGx5IHJlYWQgaW4gZnVsbCBpbiBvbmUgc2l0
        dGluZyEiCgogICAgICAgIC0tIFBpb3RyIFN6b3Rrb3dza2kKCiAgICBDb21w
        YXJpbmcgdG8gcnNwZWM6CgogICAgICAgIHJzcGVjIGlzIGEgdGVzdGluZyBE
        U0wuIG1pbml0ZXN0IGlzIHJ1YnkuCgogICAgICAgIC0tIEFkYW0gSGF3a2lu
        cywgIkJvdyBCZWZvcmUgTWluaVRlc3QiCgogICAgbWluaXRlc3QgZG9lc24n
        dCByZWludmVudCBhbnl0aGluZyB0aGF0IHJ1YnkgYWxyZWFkeSBwcm92aWRl
        cywgbGlrZToKICAgIGNsYXNzZXMsIG1vZHVsZXMsIGluaGVyaXRhbmNlLCBt
        ZXRob2RzLiBUaGlzIG1lYW5zIHlvdSBvbmx5IGhhdmUgdG8KICAgIGxlYXJu
        IHJ1YnkgdG8gdXNlIG1pbml0ZXN0IGFuZCBhbGwgb2YgeW91ciByZWd1bGFy
        IE9PIHByYWN0aWNlcyBsaWtlCiAgICBleHRyYWN0LW1ldGhvZCByZWZhY3Rv
        cmluZ3Mgc3RpbGwgYXBwbHkuCiAgZG93bmxvYWRzX2NvdW50OiAxMDM0NjQK
        ICBtZXRhZGF0YToge30KICBudW1iZXI6IDQuNi4xCiAgc3VtbWFyeTogbWlu
        aXRlc3QgcHJvdmlkZXMgYSBjb21wbGV0ZSBzdWl0ZSBvZiB0ZXN0aW5nIGZh
        Y2lsaXRpZXMgc3VwcG9ydGluZyBUREQsCiAgICBCREQsIG1vY2tpbmcsIGFu
        ZCBiZW5jaG1hcmtpbmcKICBwbGF0Zm9ybTogcnVieQogIHJ1YnlnZW1zX3Zl
        cnNpb246ICI+PSAwIgogIHJ1YnlfdmVyc2lvbjogCiAgcHJlcmVsZWFzZTog
        ZmFsc2UKICBsaWNlbnNlczogW10KICByZXF1aXJlbWVudHM6IAogIHNoYTog
        MzNkOGI2MzUxMjU0MDAyYzRjNWQ1MjlkMTc2MzdhNDNlODA5YThhOWQwNGQy
        NmRkYTY4MjNmZDlmMzM4ZGFmMwotIGF1dGhvcnM6IFJ5YW4gRGF2aXMKICBi
        dWlsdF9hdDogJzIwMTMtMDItMDdUMDA6MDA6MDAuMDAwWicKICBjcmVhdGVk
        X2F0OiAnMjAxMy0wMi0wN1QyMzo0MzoyMi4zNTRaJwogIGRlc2NyaXB0aW9u
        OiB8LQogICAgbWluaXRlc3QgcHJvdmlkZXMgYSBjb21wbGV0ZSBzdWl0ZSBv
        ZiB0ZXN0aW5nIGZhY2lsaXRpZXMgc3VwcG9ydGluZwogICAgVERELCBCREQs
        IG1vY2tpbmcsIGFuZCBiZW5jaG1hcmtpbmcuCgogICAgICAgICJJIGhhZCBh
        IGNsYXNzIHdpdGggSmltIFdlaXJpY2ggb24gdGVzdGluZyBsYXN0IHdlZWsg
        YW5kIHdlIHdlcmUKICAgICAgICAgYWxsb3dlZCB0byBjaG9vc2Ugb3VyIHRl
        c3RpbmcgZnJhbWV3b3Jrcy4gS2lyayBIYWluZXMgYW5kIEkgd2VyZQogICAg
        ICAgICBwYWlyZWQgdXAgYW5kIHdlIGNyYWNrZWQgb3BlbiB0aGUgY29kZSBm
        b3IgYSBmZXcgdGVzdAogICAgICAgICBmcmFtZXdvcmtzLi4uCgogICAgICAg
        ICBJIE1VU1Qgc2F5IHRoYXQgbWluaXRlc3QgaXMgKnZlcnkqIHJlYWRhYmxl
        IC8gdW5kZXJzdGFuZGFibGUKICAgICAgICAgY29tcGFyZWQgdG8gdGhlICdv
        dGhlciB0d28nIG9wdGlvbnMgd2UgbG9va2VkIGF0LiBOaWNlbHkgZG9uZSBh
        bmQKICAgICAgICAgdGhhbmsgeW91IGZvciBoZWxwaW5nIHVzIGtlZXAgb3Vy
        IG1lbnRhbCBzYW5pdHkuIgoKICAgICAgICAtLSBXYXluZSBFLiBTZWd1aW4K
        CiAgICBtaW5pdGVzdC91bml0IGlzIGEgc21hbGwgYW5kIGluY3JlZGlibHkg
        ZmFzdCB1bml0IHRlc3RpbmcgZnJhbWV3b3JrLgogICAgSXQgcHJvdmlkZXMg
        YSByaWNoIHNldCBvZiBhc3NlcnRpb25zIHRvIG1ha2UgeW91ciB0ZXN0cyBj
        bGVhbiBhbmQKICAgIHJlYWRhYmxlLgoKICAgIG1pbml0ZXN0L3NwZWMgaXMg
        YSBmdW5jdGlvbmFsbHkgY29tcGxldGUgc3BlYyBlbmdpbmUuIEl0IGhvb2tz
        IG9udG8KICAgIG1pbml0ZXN0L3VuaXQgYW5kIHNlYW1sZXNzbHkgYnJpZGdl
        cyB0ZXN0IGFzc2VydGlvbnMgb3ZlciB0byBzcGVjCiAgICBleHBlY3RhdGlv
        bnMuCgogICAgbWluaXRlc3QvYmVuY2htYXJrIGlzIGFuIGF3ZXNvbWUgd2F5
        IHRvIGFzc2VydCB0aGUgcGVyZm9ybWFuY2Ugb2YgeW91cgogICAgYWxnb3Jp
        dGhtcyBpbiBhIHJlcGVhdGFibGUgbWFubmVyLiBOb3cgeW91IGNhbiBhc3Nl
        cnQgdGhhdCB5b3VyIG5ld2IKICAgIGNvLXdvcmtlciBkb2Vzbid0IHJlcGxh
        Y2UgeW91ciBsaW5lYXIgYWxnb3JpdGhtIHdpdGggYW4gZXhwb25lbnRpYWwK
        ICAgIG9uZSEKCiAgICBtaW5pdGVzdC9tb2NrIGJ5IFN0ZXZlbiBCYWtlciwg
        aXMgYSBiZWF1dGlmdWxseSB0aW55IG1vY2sgKGFuZCBzdHViKQogICAgb2Jq
        ZWN0IGZyYW1ld29yay4KCiAgICBtaW5pdGVzdC9wcmlkZSBzaG93cyBwcmlk
        ZSBpbiB0ZXN0aW5nIGFuZCBhZGRzIGNvbG9yaW5nIHRvIHlvdXIgdGVzdAog
        ICAgb3V0cHV0LiBJIGd1ZXNzIGl0IGlzIGFuIGV4YW1wbGUgb2YgaG93IHRv
        IHdyaXRlIElPIHBpcGVzIHRvby4gOlAKCiAgICBtaW5pdGVzdC91bml0IGlz
        IG1lYW50IHRvIGhhdmUgYSBjbGVhbiBpbXBsZW1lbnRhdGlvbiBmb3IgbGFu
        Z3VhZ2UKICAgIGltcGxlbWVudG9ycyB0aGF0IG5lZWQgYSBtaW5pbWFsIHNl
        dCBvZiBtZXRob2RzIHRvIGJvb3RzdHJhcCBhIHdvcmtpbmcKICAgIHRlc3Qg
        c3VpdGUuIEZvciBleGFtcGxlLCB0aGVyZSBpcyBubyBtYWdpYyBpbnZvbHZl
        ZCBmb3IgdGVzdC1jYXNlCiAgICBkaXNjb3ZlcnkuCgogICAgICAgICJBZ2Fp
        biwgSSBjYW4ndCBwcmFpc2UgZW5vdWdoIHRoZSBpZGVhIG9mIGEgdGVzdGlu
        Zy9zcGVjaW5nCiAgICAgICAgIGZyYW1ld29yayB0aGF0IEkgY2FuIGFjdHVh
        bGx5IHJlYWQgaW4gZnVsbCBpbiBvbmUgc2l0dGluZyEiCgogICAgICAgIC0t
        IFBpb3RyIFN6b3Rrb3dza2kKCiAgICBDb21wYXJpbmcgdG8gcnNwZWM6Cgog
        ICAgICAgIHJzcGVjIGlzIGEgdGVzdGluZyBEU0wuIG1pbml0ZXN0IGlzIHJ1
        YnkuCgogICAgICAgIC0tIEFkYW0gSGF3a2lucywgIkJvdyBCZWZvcmUgTWlu
        aVRlc3QiCgogICAgbWluaXRlc3QgZG9lc24ndCByZWludmVudCBhbnl0aGlu
        ZyB0aGF0IHJ1YnkgYWxyZWFkeSBwcm92aWRlcywgbGlrZToKICAgIGNsYXNz
        ZXMsIG1vZHVsZXMsIGluaGVyaXRhbmNlLCBtZXRob2RzLiBUaGlzIG1lYW5z
        IHlvdSBvbmx5IGhhdmUgdG8KICAgIGxlYXJuIHJ1YnkgdG8gdXNlIG1pbml0
        ZXN0IGFuZCBhbGwgb2YgeW91ciByZWd1bGFyIE9PIHByYWN0aWNlcyBsaWtl
        CiAgICBleHRyYWN0LW1ldGhvZCByZWZhY3RvcmluZ3Mgc3RpbGwgYXBwbHku
        CiAgZG93bmxvYWRzX2NvdW50OiA0NDM1MAogIG1ldGFkYXRhOiB7fQogIG51
        bWJlcjogNC42LjAKICBzdW1tYXJ5OiBtaW5pdGVzdCBwcm92aWRlcyBhIGNv
        bXBsZXRlIHN1aXRlIG9mIHRlc3RpbmcgZmFjaWxpdGllcyBzdXBwb3J0aW5n
        IFRERCwKICAgIEJERCwgbW9ja2luZywgYW5kIGJlbmNobWFya2luZwogIHBs
        YXRmb3JtOiBydWJ5CiAgcnVieWdlbXNfdmVyc2lvbjogIj49IDAiCiAgcnVi
        eV92ZXJzaW9uOiAKICBwcmVyZWxlYXNlOiBmYWxzZQogIGxpY2Vuc2VzOiBb
        XQogIHJlcXVpcmVtZW50czogCiAgc2hhOiBhN2NmZjBiY2I5MjBkYzc5ZDll
        NWVhYjUxZTE0MWY1ZDE2Zjc3NTIwODY5M2Q0NWY0NTZkZDZlOWY3MDJmMWQ1
        Ci0gYXV0aG9yczogUnlhbiBEYXZpcwogIGJ1aWx0X2F0OiAnMjAxMy0wMS0y
        M1QwMDowMDowMC4wMDBaJwogIGNyZWF0ZWRfYXQ6ICcyMDEzLTAxLTIzVDAz
        OjMwOjQwLjYzM1onCiAgZGVzY3JpcHRpb246IHwtCiAgICBtaW5pdGVzdCBw
        cm92aWRlcyBhIGNvbXBsZXRlIHN1aXRlIG9mIHRlc3RpbmcgZmFjaWxpdGll
        cyBzdXBwb3J0aW5nCiAgICBUREQsIEJERCwgbW9ja2luZywgYW5kIGJlbmNo
        bWFya2luZy4KCiAgICAgICAgIkkgaGFkIGEgY2xhc3Mgd2l0aCBKaW0gV2Vp
        cmljaCBvbiB0ZXN0aW5nIGxhc3Qgd2VlayBhbmQgd2Ugd2VyZQogICAgICAg
        ICBhbGxvd2VkIHRvIGNob29zZSBvdXIgdGVzdGluZyBmcmFtZXdvcmtzLiBL
        aXJrIEhhaW5lcyBhbmQgSSB3ZXJlCiAgICAgICAgIHBhaXJlZCB1cCBhbmQg
        d2UgY3JhY2tlZCBvcGVuIHRoZSBjb2RlIGZvciBhIGZldyB0ZXN0CiAgICAg
        ICAgIGZyYW1ld29ya3MuLi4KCiAgICAgICAgIEkgTVVTVCBzYXkgdGhhdCBt
        aW5pdGVzdCBpcyAqdmVyeSogcmVhZGFibGUgLyB1bmRlcnN0YW5kYWJsZQog
        ICAgICAgICBjb21wYXJlZCB0byB0aGUgJ290aGVyIHR3bycgb3B0aW9ucyB3
        ZSBsb29rZWQgYXQuIE5pY2VseSBkb25lIGFuZAogICAgICAgICB0aGFuayB5
        b3UgZm9yIGhlbHBpbmcgdXMga2VlcCBvdXIgbWVudGFsIHNhbml0eS4iCgog
        ICAgICAgIC0tIFdheW5lIEUuIFNlZ3VpbgoKICAgIG1pbml0ZXN0L3VuaXQg
        aXMgYSBzbWFsbCBhbmQgaW5jcmVkaWJseSBmYXN0IHVuaXQgdGVzdGluZyBm
        cmFtZXdvcmsuCiAgICBJdCBwcm92aWRlcyBhIHJpY2ggc2V0IG9mIGFzc2Vy
        dGlvbnMgdG8gbWFrZSB5b3VyIHRlc3RzIGNsZWFuIGFuZAogICAgcmVhZGFi
        bGUuCgogICAgbWluaXRlc3Qvc3BlYyBpcyBhIGZ1bmN0aW9uYWxseSBjb21w
        bGV0ZSBzcGVjIGVuZ2luZS4gSXQgaG9va3Mgb250bwogICAgbWluaXRlc3Qv
        dW5pdCBhbmQgc2VhbWxlc3NseSBicmlkZ2VzIHRlc3QgYXNzZXJ0aW9ucyBv
        dmVyIHRvIHNwZWMKICAgIGV4cGVjdGF0aW9ucy4KCiAgICBtaW5pdGVzdC9i
        ZW5jaG1hcmsgaXMgYW4gYXdlc29tZSB3YXkgdG8gYXNzZXJ0IHRoZSBwZXJm
        b3JtYW5jZSBvZiB5b3VyCiAgICBhbGdvcml0aG1zIGluIGEgcmVwZWF0YWJs
        ZSBtYW5uZXIuIE5vdyB5b3UgY2FuIGFzc2VydCB0aGF0IHlvdXIgbmV3Ygog
        ICAgY28td29ya2VyIGRvZXNuJ3QgcmVwbGFjZSB5b3VyIGxpbmVhciBhbGdv
        cml0aG0gd2l0aCBhbiBleHBvbmVudGlhbAogICAgb25lIQoKICAgIG1pbml0
        ZXN0L21vY2sgYnkgU3RldmVuIEJha2VyLCBpcyBhIGJlYXV0aWZ1bGx5IHRp
        bnkgbW9jayAoYW5kIHN0dWIpCiAgICBvYmplY3QgZnJhbWV3b3JrLgoKICAg
        IG1pbml0ZXN0L3ByaWRlIHNob3dzIHByaWRlIGluIHRlc3RpbmcgYW5kIGFk
        ZHMgY29sb3JpbmcgdG8geW91ciB0ZXN0CiAgICBvdXRwdXQuIEkgZ3Vlc3Mg
        aXQgaXMgYW4gZXhhbXBsZSBvZiBob3cgdG8gd3JpdGUgSU8gcGlwZXMgdG9v
        LiA6UAoKICAgIG1pbml0ZXN0L3VuaXQgaXMgbWVhbnQgdG8gaGF2ZSBhIGNs
        ZWFuIGltcGxlbWVudGF0aW9uIGZvciBsYW5ndWFnZQogICAgaW1wbGVtZW50
        b3JzIHRoYXQgbmVlZCBhIG1pbmltYWwgc2V0IG9mIG1ldGhvZHMgdG8gYm9v
        dHN0cmFwIGEgd29ya2luZwogICAgdGVzdCBzdWl0ZS4gRm9yIGV4YW1wbGUs
        IHRoZXJlIGlzIG5vIG1hZ2ljIGludm9sdmVkIGZvciB0ZXN0LWNhc2UKICAg
        IGRpc2NvdmVyeS4KCiAgICAgICAgIkFnYWluLCBJIGNhbid0IHByYWlzZSBl
        bm91Z2ggdGhlIGlkZWEgb2YgYSB0ZXN0aW5nL3NwZWNpbmcKICAgICAgICAg
        ZnJhbWV3b3JrIHRoYXQgSSBjYW4gYWN0dWFsbHkgcmVhZCBpbiBmdWxsIGlu
        IG9uZSBzaXR0aW5nISIKCiAgICAgICAgLS0gUGlvdHIgU3pvdGtvd3NraQoK
        ICAgIENvbXBhcmluZyB0byByc3BlYzoKCiAgICAgICAgcnNwZWMgaXMgYSB0
        ZXN0aW5nIERTTC4gbWluaXRlc3QgaXMgcnVieS4KCiAgICAgICAgLS0gQWRh
        bSBIYXdraW5zLCAiQm93IEJlZm9yZSBNaW5pVGVzdCIKCiAgICBtaW5pdGVz
        dCBkb2Vzbid0IHJlaW52ZW50IGFueXRoaW5nIHRoYXQgcnVieSBhbHJlYWR5
        IHByb3ZpZGVzLCBsaWtlOgogICAgY2xhc3NlcywgbW9kdWxlcywgaW5oZXJp
        dGFuY2UsIG1ldGhvZHMuIFRoaXMgbWVhbnMgeW91IG9ubHkgaGF2ZSB0bwog
        ICAgbGVhcm4gcnVieSB0byB1c2UgbWluaXRlc3QgYW5kIGFsbCBvZiB5b3Vy
        IHJlZ3VsYXIgT08gcHJhY3RpY2VzIGxpa2UKICAgIGV4dHJhY3QtbWV0aG9k
        IHJlZmFjdG9yaW5ncyBzdGlsbCBhcHBseS4KICBkb3dubG9hZHNfY291bnQ6
        IDk3MjQ3CiAgbWV0YWRhdGE6IHt9CiAgbnVtYmVyOiA0LjUuMAogIHN1bW1h
        cnk6IG1pbml0ZXN0IHByb3ZpZGVzIGEgY29tcGxldGUgc3VpdGUgb2YgdGVz
        dGluZyBmYWNpbGl0aWVzIHN1cHBvcnRpbmcgVERELAogICAgQkRELCBtb2Nr
        aW5nLCBhbmQgYmVuY2htYXJraW5nCiAgcGxhdGZvcm06IHJ1YnkKICBydWJ5
        Z2Vtc192ZXJzaW9uOiAiPj0gMCIKICBydWJ5X3ZlcnNpb246IAogIHByZXJl
        bGVhc2U6IGZhbHNlCiAgbGljZW5zZXM6IFtdCiAgcmVxdWlyZW1lbnRzOiAK
        ICBzaGE6IGEyNmRmMmQ5NWVmYmJhYzM4YjRhNTM0ZjJhMjkzZmY0NWIyMjA1
        ZTIyZWM1OTI3ODI2ODFiZjY0OWZlNjA1OTAKLSBhdXRob3JzOiBSeWFuIERh
        dmlzCiAgYnVpbHRfYXQ6ICcyMDEzLTAxLTA4VDAwOjAwOjAwLjAwMFonCiAg
        Y3JlYXRlZF9hdDogJzIwMTMtMDEtMDhUMDE6Mzc6MzkuMzc5WicKICBkZXNj
        cmlwdGlvbjogfC0KICAgIG1pbml0ZXN0IHByb3ZpZGVzIGEgY29tcGxldGUg
        c3VpdGUgb2YgdGVzdGluZyBmYWNpbGl0aWVzIHN1cHBvcnRpbmcKICAgIFRE
        RCwgQkRELCBtb2NraW5nLCBhbmQgYmVuY2htYXJraW5nLgoKICAgICAgICAi
        SSBoYWQgYSBjbGFzcyB3aXRoIEppbSBXZWlyaWNoIG9uIHRlc3RpbmcgbGFz
        dCB3ZWVrIGFuZCB3ZSB3ZXJlCiAgICAgICAgIGFsbG93ZWQgdG8gY2hvb3Nl
        IG91ciB0ZXN0aW5nIGZyYW1ld29ya3MuIEtpcmsgSGFpbmVzIGFuZCBJIHdl
        cmUKICAgICAgICAgcGFpcmVkIHVwIGFuZCB3ZSBjcmFja2VkIG9wZW4gdGhl
        IGNvZGUgZm9yIGEgZmV3IHRlc3QKICAgICAgICAgZnJhbWV3b3Jrcy4uLgoK
        ICAgICAgICAgSSBNVVNUIHNheSB0aGF0IG1pbml0ZXN0IGlzICp2ZXJ5KiBy
        ZWFkYWJsZSAvIHVuZGVyc3RhbmRhYmxlCiAgICAgICAgIGNvbXBhcmVkIHRv
        IHRoZSAnb3RoZXIgdHdvJyBvcHRpb25zIHdlIGxvb2tlZCBhdC4gTmljZWx5
        IGRvbmUgYW5kCiAgICAgICAgIHRoYW5rIHlvdSBmb3IgaGVscGluZyB1cyBr
        ZWVwIG91ciBtZW50YWwgc2FuaXR5LiIKCiAgICAgICAgLS0gV2F5bmUgRS4g
        U2VndWluCgogICAgbWluaXRlc3QvdW5pdCBpcyBhIHNtYWxsIGFuZCBpbmNy
        ZWRpYmx5IGZhc3QgdW5pdCB0ZXN0aW5nIGZyYW1ld29yay4KICAgIEl0IHBy
        b3ZpZGVzIGEgcmljaCBzZXQgb2YgYXNzZXJ0aW9ucyB0byBtYWtlIHlvdXIg
        dGVzdHMgY2xlYW4gYW5kCiAgICByZWFkYWJsZS4KCiAgICBtaW5pdGVzdC9z
        cGVjIGlzIGEgZnVuY3Rpb25hbGx5IGNvbXBsZXRlIHNwZWMgZW5naW5lLiBJ
        dCBob29rcyBvbnRvCiAgICBtaW5pdGVzdC91bml0IGFuZCBzZWFtbGVzc2x5
        IGJyaWRnZXMgdGVzdCBhc3NlcnRpb25zIG92ZXIgdG8gc3BlYwogICAgZXhw
        ZWN0YXRpb25zLgoKICAgIG1pbml0ZXN0L2JlbmNobWFyayBpcyBhbiBhd2Vz
        b21lIHdheSB0byBhc3NlcnQgdGhlIHBlcmZvcm1hbmNlIG9mIHlvdXIKICAg
        IGFsZ29yaXRobXMgaW4gYSByZXBlYXRhYmxlIG1hbm5lci4gTm93IHlvdSBj
        YW4gYXNzZXJ0IHRoYXQgeW91ciBuZXdiCiAgICBjby13b3JrZXIgZG9lc24n
        dCByZXBsYWNlIHlvdXIgbGluZWFyIGFsZ29yaXRobSB3aXRoIGFuIGV4cG9u
        ZW50aWFsCiAgICBvbmUhCgogICAgbWluaXRlc3QvbW9jayBieSBTdGV2ZW4g
        QmFrZXIsIGlzIGEgYmVhdXRpZnVsbHkgdGlueSBtb2NrIChhbmQgc3R1YikK
        ICAgIG9iamVjdCBmcmFtZXdvcmsuCgogICAgbWluaXRlc3QvcHJpZGUgc2hv
        d3MgcHJpZGUgaW4gdGVzdGluZyBhbmQgYWRkcyBjb2xvcmluZyB0byB5b3Vy
        IHRlc3QKICAgIG91dHB1dC4gSSBndWVzcyBpdCBpcyBhbiBleGFtcGxlIG9m
        IGhvdyB0byB3cml0ZSBJTyBwaXBlcyB0b28uIDpQCgogICAgbWluaXRlc3Qv
        dW5pdCBpcyBtZWFudCB0byBoYXZlIGEgY2xlYW4gaW1wbGVtZW50YXRpb24g
        Zm9yIGxhbmd1YWdlCiAgICBpbXBsZW1lbnRvcnMgdGhhdCBuZWVkIGEgbWlu
        aW1hbCBzZXQgb2YgbWV0aG9kcyB0byBib290c3RyYXAgYSB3b3JraW5nCiAg
        ICB0ZXN0IHN1aXRlLiBGb3IgZXhhbXBsZSwgdGhlcmUgaXMgbm8gbWFnaWMg
        aW52b2x2ZWQgZm9yIHRlc3QtY2FzZQogICAgZGlzY292ZXJ5LgoKICAgICAg
        ICAiQWdhaW4sIEkgY2FuJ3QgcHJhaXNlIGVub3VnaCB0aGUgaWRlYSBvZiBh
        IHRlc3Rpbmcvc3BlY2luZwogICAgICAgICBmcmFtZXdvcmsgdGhhdCBJIGNh
        biBhY3R1YWxseSByZWFkIGluIGZ1bGwgaW4gb25lIHNpdHRpbmchIgoKICAg
        ICAgICAtLSBQaW90ciBTem90a293c2tpCgogICAgQ29tcGFyaW5nIHRvIHJz
        cGVjOgoKICAgICAgICByc3BlYyBpcyBhIHRlc3RpbmcgRFNMLiBtaW5pdGVz
        dCBpcyBydWJ5LgoKICAgICAgICAtLSBBZGFtIEhhd2tpbnMsICJCb3cgQmVm
        b3JlIE1pbmlUZXN0IgoKICAgIG1pbml0ZXN0IGRvZXNuJ3QgcmVpbnZlbnQg
        YW55dGhpbmcgdGhhdCBydWJ5IGFscmVhZHkgcHJvdmlkZXMsIGxpa2U6CiAg
        ICBjbGFzc2VzLCBtb2R1bGVzLCBpbmhlcml0YW5jZSwgbWV0aG9kcy4gVGhp
        cyBtZWFucyB5b3Ugb25seSBoYXZlIHRvCiAgICBsZWFybiBydWJ5IHRvIHVz
        ZSBtaW5pdGVzdCBhbmQgYWxsIG9mIHlvdXIgcmVndWxhciBPTyBwcmFjdGlj
        ZXMgbGlrZQogICAgZXh0cmFjdC1tZXRob2QgcmVmYWN0b3JpbmdzIHN0aWxs
        IGFwcGx5LgogIGRvd25sb2Fkc19jb3VudDogNjk1ODgKICBtZXRhZGF0YTog
        e30KICBudW1iZXI6IDQuNC4wCiAgc3VtbWFyeTogbWluaXRlc3QgcHJvdmlk
        ZXMgYSBjb21wbGV0ZSBzdWl0ZSBvZiB0ZXN0aW5nIGZhY2lsaXRpZXMgc3Vw
        cG9ydGluZyBUREQsCiAgICBCREQsIG1vY2tpbmcsIGFuZCBiZW5jaG1hcmtp
        bmcKICBwbGF0Zm9ybTogcnVieQogIHJ1YnlnZW1zX3ZlcnNpb246ICI+PSAw
        IgogIHJ1YnlfdmVyc2lvbjogCiAgcHJlcmVsZWFzZTogZmFsc2UKICBsaWNl
        bnNlczogW10KICByZXF1aXJlbWVudHM6IAogIHNoYTogNTNiMmQwMzY2N2E5
        ODZkZjM0Y2M3MDkxZmIyMGEyZTE2MmQ3MWZiYWU3YjU2NTUzMTc0ZWE1NjY1
        NDFhZDU3MgotIGF1dGhvcnM6IFJ5YW4gRGF2aXMKICBidWlsdF9hdDogJzIw
        MTItMTItMDdUMDA6MDA6MDAuMDAwWicKICBjcmVhdGVkX2F0OiAnMjAxMi0x
        Mi0wN1QwMTowNzo0OS41MjFaJwogIGRlc2NyaXB0aW9uOiB8LQogICAgbWlu
        aXRlc3QgcHJvdmlkZXMgYSBjb21wbGV0ZSBzdWl0ZSBvZiB0ZXN0aW5nIGZh
        Y2lsaXRpZXMgc3VwcG9ydGluZwogICAgVERELCBCREQsIG1vY2tpbmcsIGFu
        ZCBiZW5jaG1hcmtpbmcuCgogICAgICAgICJJIGhhZCBhIGNsYXNzIHdpdGgg
        SmltIFdlaXJpY2ggb24gdGVzdGluZyBsYXN0IHdlZWsgYW5kIHdlIHdlcmUK
        ICAgICAgICAgYWxsb3dlZCB0byBjaG9vc2Ugb3VyIHRlc3RpbmcgZnJhbWV3
        b3Jrcy4gS2lyayBIYWluZXMgYW5kIEkgd2VyZQogICAgICAgICBwYWlyZWQg
        dXAgYW5kIHdlIGNyYWNrZWQgb3BlbiB0aGUgY29kZSBmb3IgYSBmZXcgdGVz
        dAogICAgICAgICBmcmFtZXdvcmtzLi4uCgogICAgICAgICBJIE1VU1Qgc2F5
        IHRoYXQgbWluaXRlc3QgaXMgKnZlcnkqIHJlYWRhYmxlIC8gdW5kZXJzdGFu
        ZGFibGUKICAgICAgICAgY29tcGFyZWQgdG8gdGhlICdvdGhlciB0d28nIG9w
        dGlvbnMgd2UgbG9va2VkIGF0LiBOaWNlbHkgZG9uZSBhbmQKICAgICAgICAg
        dGhhbmsgeW91IGZvciBoZWxwaW5nIHVzIGtlZXAgb3VyIG1lbnRhbCBzYW5p
        dHkuIgoKICAgICAgICAtLSBXYXluZSBFLiBTZWd1aW4KCiAgICBtaW5pdGVz
        dC91bml0IGlzIGEgc21hbGwgYW5kIGluY3JlZGlibHkgZmFzdCB1bml0IHRl
        c3RpbmcgZnJhbWV3b3JrLgogICAgSXQgcHJvdmlkZXMgYSByaWNoIHNldCBv
        ZiBhc3NlcnRpb25zIHRvIG1ha2UgeW91ciB0ZXN0cyBjbGVhbiBhbmQKICAg
        IHJlYWRhYmxlLgoKICAgIG1pbml0ZXN0L3NwZWMgaXMgYSBmdW5jdGlvbmFs
        bHkgY29tcGxldGUgc3BlYyBlbmdpbmUuIEl0IGhvb2tzIG9udG8KICAgIG1p
        bml0ZXN0L3VuaXQgYW5kIHNlYW1sZXNzbHkgYnJpZGdlcyB0ZXN0IGFzc2Vy
        dGlvbnMgb3ZlciB0byBzcGVjCiAgICBleHBlY3RhdGlvbnMuCgogICAgbWlu
        aXRlc3QvYmVuY2htYXJrIGlzIGFuIGF3ZXNvbWUgd2F5IHRvIGFzc2VydCB0
        aGUgcGVyZm9ybWFuY2Ugb2YgeW91cgogICAgYWxnb3JpdGhtcyBpbiBhIHJl
        cGVhdGFibGUgbWFubmVyLiBOb3cgeW91IGNhbiBhc3NlcnQgdGhhdCB5b3Vy
        IG5ld2IKICAgIGNvLXdvcmtlciBkb2Vzbid0IHJlcGxhY2UgeW91ciBsaW5l
        YXIgYWxnb3JpdGhtIHdpdGggYW4gZXhwb25lbnRpYWwKICAgIG9uZSEKCiAg
        ICBtaW5pdGVzdC9tb2NrIGJ5IFN0ZXZlbiBCYWtlciwgaXMgYSBiZWF1dGlm
        dWxseSB0aW55IG1vY2sgKGFuZCBzdHViKQogICAgb2JqZWN0IGZyYW1ld29y
        ay4KCiAgICBtaW5pdGVzdC9wcmlkZSBzaG93cyBwcmlkZSBpbiB0ZXN0aW5n
        IGFuZCBhZGRzIGNvbG9yaW5nIHRvIHlvdXIgdGVzdAogICAgb3V0cHV0LiBJ
        IGd1ZXNzIGl0IGlzIGFuIGV4YW1wbGUgb2YgaG93IHRvIHdyaXRlIElPIHBp
        cGVzIHRvby4gOlAKCiAgICBtaW5pdGVzdC91bml0IGlzIG1lYW50IHRvIGhh
        dmUgYSBjbGVhbiBpbXBsZW1lbnRhdGlvbiBmb3IgbGFuZ3VhZ2UKICAgIGlt
        cGxlbWVudG9ycyB0aGF0IG5lZWQgYSBtaW5pbWFsIHNldCBvZiBtZXRob2Rz
        IHRvIGJvb3RzdHJhcCBhIHdvcmtpbmcKICAgIHRlc3Qgc3VpdGUuIEZvciBl
        eGFtcGxlLCB0aGVyZSBpcyBubyBtYWdpYyBpbnZvbHZlZCBmb3IgdGVzdC1j
        YXNlCiAgICBkaXNjb3ZlcnkuCgogICAgICAgICJBZ2FpbiwgSSBjYW4ndCBw
        cmFpc2UgZW5vdWdoIHRoZSBpZGVhIG9mIGEgdGVzdGluZy9zcGVjaW5nCiAg
        ICAgICAgIGZyYW1ld29yayB0aGF0IEkgY2FuIGFjdHVhbGx5IHJlYWQgaW4g
        ZnVsbCBpbiBvbmUgc2l0dGluZyEiCgogICAgICAgIC0tIFBpb3RyIFN6b3Rr
        b3dza2kKCiAgICBDb21wYXJpbmcgdG8gcnNwZWM6CgogICAgICAgIHJzcGVj
        IGlzIGEgdGVzdGluZyBEU0wuIG1pbml0ZXN0IGlzIHJ1YnkuCgogICAgICAg
        IC0tIEFkYW0gSGF3a2lucywgIkJvdyBCZWZvcmUgTWluaVRlc3QiCgogICAg
        bWluaXRlc3QgZG9lc24ndCByZWludmVudCBhbnl0aGluZyB0aGF0IHJ1Ynkg
        YWxyZWFkeSBwcm92aWRlcywgbGlrZToKICAgIGNsYXNzZXMsIG1vZHVsZXMs
        IGluaGVyaXRhbmNlLCBtZXRob2RzLiBUaGlzIG1lYW5zIHlvdSBvbmx5IGhh
        dmUgdG8KICAgIGxlYXJuIHJ1YnkgdG8gdXNlIG1pbml0ZXN0IGFuZCBhbGwg
        b2YgeW91ciByZWd1bGFyIE9PIHByYWN0aWNlcyBsaWtlCiAgICBleHRyYWN0
        LW1ldGhvZCByZWZhY3RvcmluZ3Mgc3RpbGwgYXBwbHkuCiAgZG93bmxvYWRz
        X2NvdW50OiA5OTU1NQogIG1ldGFkYXRhOiB7fQogIG51bWJlcjogNC4zLjMK
        ICBzdW1tYXJ5OiBtaW5pdGVzdCBwcm92aWRlcyBhIGNvbXBsZXRlIHN1aXRl
        IG9mIHRlc3RpbmcgZmFjaWxpdGllcyBzdXBwb3J0aW5nIFRERCwKICAgIEJE
        RCwgbW9ja2luZywgYW5kIGJlbmNobWFya2luZwogIHBsYXRmb3JtOiBydWJ5
        CiAgcnVieWdlbXNfdmVyc2lvbjogIj49IDAiCiAgcnVieV92ZXJzaW9uOiAK
        ICBwcmVyZWxlYXNlOiBmYWxzZQogIGxpY2Vuc2VzOiBbXQogIHJlcXVpcmVt
        ZW50czogCiAgc2hhOiBhNGNlZmI3ZmJmZDFkNmZkMzY2YWQ3NGIyNjlhNDYz
        ZWFlZjlhNGM5ZTYwNWM1MjFiNWQyMjE5OWE1OGNiYjFiCi0gYXV0aG9yczog
        UnlhbiBEYXZpcwogIGJ1aWx0X2F0OiAnMjAxMi0xMS0yOFQwMDowMDowMC4w
        MDBaJwogIGNyZWF0ZWRfYXQ6ICcyMDEyLTExLTI4VDA0OjIxOjQzLjU2Mlon
        CiAgZGVzY3JpcHRpb246IHwtCiAgICBtaW5pdGVzdCBwcm92aWRlcyBhIGNv
        bXBsZXRlIHN1aXRlIG9mIHRlc3RpbmcgZmFjaWxpdGllcyBzdXBwb3J0aW5n
        CiAgICBUREQsIEJERCwgbW9ja2luZywgYW5kIGJlbmNobWFya2luZy4KCiAg
        ICAgICAgIkkgaGFkIGEgY2xhc3Mgd2l0aCBKaW0gV2VpcmljaCBvbiB0ZXN0
        aW5nIGxhc3Qgd2VlayBhbmQgd2Ugd2VyZQogICAgICAgICBhbGxvd2VkIHRv
        IGNob29zZSBvdXIgdGVzdGluZyBmcmFtZXdvcmtzLiBLaXJrIEhhaW5lcyBh
        bmQgSSB3ZXJlCiAgICAgICAgIHBhaXJlZCB1cCBhbmQgd2UgY3JhY2tlZCBv
        cGVuIHRoZSBjb2RlIGZvciBhIGZldyB0ZXN0CiAgICAgICAgIGZyYW1ld29y
        a3MuLi4KCiAgICAgICAgIEkgTVVTVCBzYXkgdGhhdCBtaW5pdGVzdCBpcyAq
        dmVyeSogcmVhZGFibGUgLyB1bmRlcnN0YW5kYWJsZQogICAgICAgICBjb21w
        YXJlZCB0byB0aGUgJ290aGVyIHR3bycgb3B0aW9ucyB3ZSBsb29rZWQgYXQu
        IE5pY2VseSBkb25lIGFuZAogICAgICAgICB0aGFuayB5b3UgZm9yIGhlbHBp
        bmcgdXMga2VlcCBvdXIgbWVudGFsIHNhbml0eS4iCgogICAgICAgIC0tIFdh
        eW5lIEUuIFNlZ3VpbgoKICAgIG1pbml0ZXN0L3VuaXQgaXMgYSBzbWFsbCBh
        bmQgaW5jcmVkaWJseSBmYXN0IHVuaXQgdGVzdGluZyBmcmFtZXdvcmsuCiAg
        ICBJdCBwcm92aWRlcyBhIHJpY2ggc2V0IG9mIGFzc2VydGlvbnMgdG8gbWFr
        ZSB5b3VyIHRlc3RzIGNsZWFuIGFuZAogICAgcmVhZGFibGUuCgogICAgbWlu
        aXRlc3Qvc3BlYyBpcyBhIGZ1bmN0aW9uYWxseSBjb21wbGV0ZSBzcGVjIGVu
        Z2luZS4gSXQgaG9va3Mgb250bwogICAgbWluaXRlc3QvdW5pdCBhbmQgc2Vh
        bWxlc3NseSBicmlkZ2VzIHRlc3QgYXNzZXJ0aW9ucyBvdmVyIHRvIHNwZWMK
        ICAgIGV4cGVjdGF0aW9ucy4KCiAgICBtaW5pdGVzdC9iZW5jaG1hcmsgaXMg
        YW4gYXdlc29tZSB3YXkgdG8gYXNzZXJ0IHRoZSBwZXJmb3JtYW5jZSBvZiB5
        b3VyCiAgICBhbGdvcml0aG1zIGluIGEgcmVwZWF0YWJsZSBtYW5uZXIuIE5v
        dyB5b3UgY2FuIGFzc2VydCB0aGF0IHlvdXIgbmV3YgogICAgY28td29ya2Vy
        IGRvZXNuJ3QgcmVwbGFjZSB5b3VyIGxpbmVhciBhbGdvcml0aG0gd2l0aCBh
        biBleHBvbmVudGlhbAogICAgb25lIQoKICAgIG1pbml0ZXN0L21vY2sgYnkg
        U3RldmVuIEJha2VyLCBpcyBhIGJlYXV0aWZ1bGx5IHRpbnkgbW9jayAoYW5k
        IHN0dWIpCiAgICBvYmplY3QgZnJhbWV3b3JrLgoKICAgIG1pbml0ZXN0L3By
        aWRlIHNob3dzIHByaWRlIGluIHRlc3RpbmcgYW5kIGFkZHMgY29sb3Jpbmcg
        dG8geW91ciB0ZXN0CiAgICBvdXRwdXQuIEkgZ3Vlc3MgaXQgaXMgYW4gZXhh
        bXBsZSBvZiBob3cgdG8gd3JpdGUgSU8gcGlwZXMgdG9vLiA6UAoKICAgIG1p
        bml0ZXN0L3VuaXQgaXMgbWVhbnQgdG8gaGF2ZSBhIGNsZWFuIGltcGxlbWVu
        dGF0aW9uIGZvciBsYW5ndWFnZQogICAgaW1wbGVtZW50b3JzIHRoYXQgbmVl
        ZCBhIG1pbmltYWwgc2V0IG9mIG1ldGhvZHMgdG8gYm9vdHN0cmFwIGEgd29y
        a2luZwogICAgdGVzdCBzdWl0ZS4gRm9yIGV4YW1wbGUsIHRoZXJlIGlzIG5v
        IG1hZ2ljIGludm9sdmVkIGZvciB0ZXN0LWNhc2UKICAgIGRpc2NvdmVyeS4K
        CiAgICAgICAgIkFnYWluLCBJIGNhbid0IHByYWlzZSBlbm91Z2ggdGhlIGlk
        ZWEgb2YgYSB0ZXN0aW5nL3NwZWNpbmcKICAgICAgICAgZnJhbWV3b3JrIHRo
        YXQgSSBjYW4gYWN0dWFsbHkgcmVhZCBpbiBmdWxsIGluIG9uZSBzaXR0aW5n
        ISIKCiAgICAgICAgLS0gUGlvdHIgU3pvdGtvd3NraQoKICAgIENvbXBhcmlu
        ZyB0byByc3BlYzoKCiAgICAgICAgcnNwZWMgaXMgYSB0ZXN0aW5nIERTTC4g
        bWluaXRlc3QgaXMgcnVieS4KCiAgICAgICAgLS0gQWRhbSBIYXdraW5zLCAi
        Qm93IEJlZm9yZSBNaW5pVGVzdCIKCiAgICBtaW5pdGVzdCBkb2Vzbid0IHJl
        aW52ZW50IGFueXRoaW5nIHRoYXQgcnVieSBhbHJlYWR5IHByb3ZpZGVzLCBs
        aWtlOgogICAgY2xhc3NlcywgbW9kdWxlcywgaW5oZXJpdGFuY2UsIG1ldGhv
        ZHMuIFRoaXMgbWVhbnMgeW91IG9ubHkgaGF2ZSB0bwogICAgbGVhcm4gcnVi
        eSB0byB1c2UgbWluaXRlc3QgYW5kIGFsbCBvZiB5b3VyIHJlZ3VsYXIgT08g
        cHJhY3RpY2VzIGxpa2UKICAgIGV4dHJhY3QtbWV0aG9kIHJlZmFjdG9yaW5n
        cyBzdGlsbCBhcHBseS4KICBkb3dubG9hZHNfY291bnQ6IDc3NDc0CiAgbWV0
        YWRhdGE6IHt9CiAgbnVtYmVyOiA0LjMuMgogIHN1bW1hcnk6IG1pbml0ZXN0
        IHByb3ZpZGVzIGEgY29tcGxldGUgc3VpdGUgb2YgdGVzdGluZyBmYWNpbGl0
        aWVzIHN1cHBvcnRpbmcgVERELAogICAgQkRELCBtb2NraW5nLCBhbmQgYmVu
        Y2htYXJraW5nCiAgcGxhdGZvcm06IHJ1YnkKICBydWJ5Z2Vtc192ZXJzaW9u
        OiAiPj0gMCIKICBydWJ5X3ZlcnNpb246IAogIHByZXJlbGVhc2U6IGZhbHNl
        CiAgbGljZW5zZXM6IFtdCiAgcmVxdWlyZW1lbnRzOiAKICBzaGE6IGY0OWZh
        NWFmZjg2NGQ5OGI2ZGNmNmU4ZDYyMjI5N2Q4MDhlMjc4Y2Q4Nzc1NTAwOTNi
        MDA3NTE3NjI3YzNjZWIKLSBhdXRob3JzOiBSeWFuIERhdmlzCiAgYnVpbHRf
        YXQ6ICcyMDEyLTExLTIzVDAwOjAwOjAwLjAwMFonCiAgY3JlYXRlZF9hdDog
        JzIwMTItMTEtMjNUMjI6NTE6MzMuNTU3WicKICBkZXNjcmlwdGlvbjogfC0K
        ICAgIG1pbml0ZXN0IHByb3ZpZGVzIGEgY29tcGxldGUgc3VpdGUgb2YgdGVz
        dGluZyBmYWNpbGl0aWVzIHN1cHBvcnRpbmcKICAgIFRERCwgQkRELCBtb2Nr
        aW5nLCBhbmQgYmVuY2htYXJraW5nLgoKICAgICAgICAiSSBoYWQgYSBjbGFz
        cyB3aXRoIEppbSBXZWlyaWNoIG9uIHRlc3RpbmcgbGFzdCB3ZWVrIGFuZCB3
        ZSB3ZXJlCiAgICAgICAgIGFsbG93ZWQgdG8gY2hvb3NlIG91ciB0ZXN0aW5n
        IGZyYW1ld29ya3MuIEtpcmsgSGFpbmVzIGFuZCBJIHdlcmUKICAgICAgICAg
        cGFpcmVkIHVwIGFuZCB3ZSBjcmFja2VkIG9wZW4gdGhlIGNvZGUgZm9yIGEg
        ZmV3IHRlc3QKICAgICAgICAgZnJhbWV3b3Jrcy4uLgoKICAgICAgICAgSSBN
        VVNUIHNheSB0aGF0IG1pbml0ZXN0IGlzICp2ZXJ5KiByZWFkYWJsZSAvIHVu
        ZGVyc3RhbmRhYmxlCiAgICAgICAgIGNvbXBhcmVkIHRvIHRoZSAnb3RoZXIg
        dHdvJyBvcHRpb25zIHdlIGxvb2tlZCBhdC4gTmljZWx5IGRvbmUgYW5kCiAg
        ICAgICAgIHRoYW5rIHlvdSBmb3IgaGVscGluZyB1cyBrZWVwIG91ciBtZW50
        YWwgc2FuaXR5LiIKCiAgICAgICAgLS0gV2F5bmUgRS4gU2VndWluCgogICAg
        bWluaXRlc3QvdW5pdCBpcyBhIHNtYWxsIGFuZCBpbmNyZWRpYmx5IGZhc3Qg
        dW5pdCB0ZXN0aW5nIGZyYW1ld29yay4KICAgIEl0IHByb3ZpZGVzIGEgcmlj
        aCBzZXQgb2YgYXNzZXJ0aW9ucyB0byBtYWtlIHlvdXIgdGVzdHMgY2xlYW4g
        YW5kCiAgICByZWFkYWJsZS4KCiAgICBtaW5pdGVzdC9zcGVjIGlzIGEgZnVu
        Y3Rpb25hbGx5IGNvbXBsZXRlIHNwZWMgZW5naW5lLiBJdCBob29rcyBvbnRv
        CiAgICBtaW5pdGVzdC91bml0IGFuZCBzZWFtbGVzc2x5IGJyaWRnZXMgdGVz
        dCBhc3NlcnRpb25zIG92ZXIgdG8gc3BlYwogICAgZXhwZWN0YXRpb25zLgoK
        ICAgIG1pbml0ZXN0L2JlbmNobWFyayBpcyBhbiBhd2Vzb21lIHdheSB0byBh
        c3NlcnQgdGhlIHBlcmZvcm1hbmNlIG9mIHlvdXIKICAgIGFsZ29yaXRobXMg
        aW4gYSByZXBlYXRhYmxlIG1hbm5lci4gTm93IHlvdSBjYW4gYXNzZXJ0IHRo
        YXQgeW91ciBuZXdiCiAgICBjby13b3JrZXIgZG9lc24ndCByZXBsYWNlIHlv
        dXIgbGluZWFyIGFsZ29yaXRobSB3aXRoIGFuIGV4cG9uZW50aWFsCiAgICBv
        bmUhCgogICAgbWluaXRlc3QvbW9jayBieSBTdGV2ZW4gQmFrZXIsIGlzIGEg
        YmVhdXRpZnVsbHkgdGlueSBtb2NrIChhbmQgc3R1YikKICAgIG9iamVjdCBm
        cmFtZXdvcmsuCgogICAgbWluaXRlc3QvcHJpZGUgc2hvd3MgcHJpZGUgaW4g
        dGVzdGluZyBhbmQgYWRkcyBjb2xvcmluZyB0byB5b3VyIHRlc3QKICAgIG91
        dHB1dC4gSSBndWVzcyBpdCBpcyBhbiBleGFtcGxlIG9mIGhvdyB0byB3cml0
        ZSBJTyBwaXBlcyB0b28uIDpQCgogICAgbWluaXRlc3QvdW5pdCBpcyBtZWFu
        dCB0byBoYXZlIGEgY2xlYW4gaW1wbGVtZW50YXRpb24gZm9yIGxhbmd1YWdl
        CiAgICBpbXBsZW1lbnRvcnMgdGhhdCBuZWVkIGEgbWluaW1hbCBzZXQgb2Yg
        bWV0aG9kcyB0byBib290c3RyYXAgYSB3b3JraW5nCiAgICB0ZXN0IHN1aXRl
        LiBGb3IgZXhhbXBsZSwgdGhlcmUgaXMgbm8gbWFnaWMgaW52b2x2ZWQgZm9y
        IHRlc3QtY2FzZQogICAgZGlzY292ZXJ5LgoKICAgICAgICAiQWdhaW4sIEkg
        Y2FuJ3QgcHJhaXNlIGVub3VnaCB0aGUgaWRlYSBvZiBhIHRlc3Rpbmcvc3Bl
        Y2luZwogICAgICAgICBmcmFtZXdvcmsgdGhhdCBJIGNhbiBhY3R1YWxseSBy
        ZWFkIGluIGZ1bGwgaW4gb25lIHNpdHRpbmchIgoKICAgICAgICAtLSBQaW90
        ciBTem90a293c2tpCgogICAgQ29tcGFyaW5nIHRvIHJzcGVjOgoKICAgICAg
        ICByc3BlYyBpcyBhIHRlc3RpbmcgRFNMLiBtaW5pdGVzdCBpcyBydWJ5LgoK
        ICAgICAgICAtLSBBZGFtIEhhd2tpbnMsICJCb3cgQmVmb3JlIE1pbmlUZXN0
        IgoKICAgIG1pbml0ZXN0IGRvZXNuJ3QgcmVpbnZlbnQgYW55dGhpbmcgdGhh
        dCBydWJ5IGFscmVhZHkgcHJvdmlkZXMsIGxpa2U6CiAgICBjbGFzc2VzLCBt
        b2R1bGVzLCBpbmhlcml0YW5jZSwgbWV0aG9kcy4gVGhpcyBtZWFucyB5b3Ug
        b25seSBoYXZlIHRvCiAgICBsZWFybiBydWJ5IHRvIHVzZSBtaW5pdGVzdCBh
        bmQgYWxsIG9mIHlvdXIgcmVndWxhciBPTyBwcmFjdGljZXMgbGlrZQogICAg
        ZXh0cmFjdC1tZXRob2QgcmVmYWN0b3JpbmdzIHN0aWxsIGFwcGx5LgogIGRv
        d25sb2Fkc19jb3VudDogMTczMDMKICBtZXRhZGF0YToge30KICBudW1iZXI6
        IDQuMy4xCiAgc3VtbWFyeTogbWluaXRlc3QgcHJvdmlkZXMgYSBjb21wbGV0
        ZSBzdWl0ZSBvZiB0ZXN0aW5nIGZhY2lsaXRpZXMgc3VwcG9ydGluZyBUREQs
        CiAgICBCREQsIG1vY2tpbmcsIGFuZCBiZW5jaG1hcmtpbmcKICBwbGF0Zm9y
        bTogcnVieQogIHJ1YnlnZW1zX3ZlcnNpb246ICI+PSAwIgogIHJ1YnlfdmVy
        c2lvbjogCiAgcHJlcmVsZWFzZTogZmFsc2UKICBsaWNlbnNlczogW10KICBy
        ZXF1aXJlbWVudHM6IAogIHNoYTogZjE3YzE2MDQxNjFlMmM2ODQ1NWFjODA1
        NmE3NGFmYjE3ZWMzMWRmOTU5NzIzODc3MzVhM2UwZTM1ZmFiZTA0ZgotIGF1
        dGhvcnM6IFJ5YW4gRGF2aXMKICBidWlsdF9hdDogJzIwMTItMTEtMTdUMDA6
        MDA6MDAuMDAwWicKICBjcmVhdGVkX2F0OiAnMjAxMi0xMS0xN1QyMzozNzox
        OC41MjRaJwogIGRlc2NyaXB0aW9uOiB8LQogICAgbWluaXRlc3QgcHJvdmlk
        ZXMgYSBjb21wbGV0ZSBzdWl0ZSBvZiB0ZXN0aW5nIGZhY2lsaXRpZXMgc3Vw
        cG9ydGluZwogICAgVERELCBCREQsIG1vY2tpbmcsIGFuZCBiZW5jaG1hcmtp
        bmcuCgogICAgICAgICJJIGhhZCBhIGNsYXNzIHdpdGggSmltIFdlaXJpY2gg
        b24gdGVzdGluZyBsYXN0IHdlZWsgYW5kIHdlIHdlcmUKICAgICAgICAgYWxs
        b3dlZCB0byBjaG9vc2Ugb3VyIHRlc3RpbmcgZnJhbWV3b3Jrcy4gS2lyayBI
        YWluZXMgYW5kIEkgd2VyZQogICAgICAgICBwYWlyZWQgdXAgYW5kIHdlIGNy
        YWNrZWQgb3BlbiB0aGUgY29kZSBmb3IgYSBmZXcgdGVzdAogICAgICAgICBm
        cmFtZXdvcmtzLi4uCgogICAgICAgICBJIE1VU1Qgc2F5IHRoYXQgbWluaXRl
        c3QgaXMgKnZlcnkqIHJlYWRhYmxlIC8gdW5kZXJzdGFuZGFibGUKICAgICAg
        ICAgY29tcGFyZWQgdG8gdGhlICdvdGhlciB0d28nIG9wdGlvbnMgd2UgbG9v
        a2VkIGF0LiBOaWNlbHkgZG9uZSBhbmQKICAgICAgICAgdGhhbmsgeW91IGZv
        ciBoZWxwaW5nIHVzIGtlZXAgb3VyIG1lbnRhbCBzYW5pdHkuIgoKICAgICAg
        ICAtLSBXYXluZSBFLiBTZWd1aW4KCiAgICBtaW5pdGVzdC91bml0IGlzIGEg
        c21hbGwgYW5kIGluY3JlZGlibHkgZmFzdCB1bml0IHRlc3RpbmcgZnJhbWV3
        b3JrLgogICAgSXQgcHJvdmlkZXMgYSByaWNoIHNldCBvZiBhc3NlcnRpb25z
        IHRvIG1ha2UgeW91ciB0ZXN0cyBjbGVhbiBhbmQKICAgIHJlYWRhYmxlLgoK
        ICAgIG1pbml0ZXN0L3NwZWMgaXMgYSBmdW5jdGlvbmFsbHkgY29tcGxldGUg
        c3BlYyBlbmdpbmUuIEl0IGhvb2tzIG9udG8KICAgIG1pbml0ZXN0L3VuaXQg
        YW5kIHNlYW1sZXNzbHkgYnJpZGdlcyB0ZXN0IGFzc2VydGlvbnMgb3ZlciB0
        byBzcGVjCiAgICBleHBlY3RhdGlvbnMuCgogICAgbWluaXRlc3QvYmVuY2ht
        YXJrIGlzIGFuIGF3ZXNvbWUgd2F5IHRvIGFzc2VydCB0aGUgcGVyZm9ybWFu
        Y2Ugb2YgeW91cgogICAgYWxnb3JpdGhtcyBpbiBhIHJlcGVhdGFibGUgbWFu
        bmVyLiBOb3cgeW91IGNhbiBhc3NlcnQgdGhhdCB5b3VyIG5ld2IKICAgIGNv
        LXdvcmtlciBkb2Vzbid0IHJlcGxhY2UgeW91ciBsaW5lYXIgYWxnb3JpdGht
        IHdpdGggYW4gZXhwb25lbnRpYWwKICAgIG9uZSEKCiAgICBtaW5pdGVzdC9t
        b2NrIGJ5IFN0ZXZlbiBCYWtlciwgaXMgYSBiZWF1dGlmdWxseSB0aW55IG1v
        Y2sgKGFuZCBzdHViKQogICAgb2JqZWN0IGZyYW1ld29yay4KCiAgICBtaW5p
        dGVzdC9wcmlkZSBzaG93cyBwcmlkZSBpbiB0ZXN0aW5nIGFuZCBhZGRzIGNv
        bG9yaW5nIHRvIHlvdXIgdGVzdAogICAgb3V0cHV0LiBJIGd1ZXNzIGl0IGlz
        IGFuIGV4YW1wbGUgb2YgaG93IHRvIHdyaXRlIElPIHBpcGVzIHRvby4gOlAK
        CiAgICBtaW5pdGVzdC91bml0IGlzIG1lYW50IHRvIGhhdmUgYSBjbGVhbiBp
        bXBsZW1lbnRhdGlvbiBmb3IgbGFuZ3VhZ2UKICAgIGltcGxlbWVudG9ycyB0
        aGF0IG5lZWQgYSBtaW5pbWFsIHNldCBvZiBtZXRob2RzIHRvIGJvb3RzdHJh
        cCBhIHdvcmtpbmcKICAgIHRlc3Qgc3VpdGUuIEZvciBleGFtcGxlLCB0aGVy
        ZSBpcyBubyBtYWdpYyBpbnZvbHZlZCBmb3IgdGVzdC1jYXNlCiAgICBkaXNj
        b3ZlcnkuCgogICAgICAgICJBZ2FpbiwgSSBjYW4ndCBwcmFpc2UgZW5vdWdo
        IHRoZSBpZGVhIG9mIGEgdGVzdGluZy9zcGVjaW5nCiAgICAgICAgIGZyYW1l
        d29yayB0aGF0IEkgY2FuIGFjdHVhbGx5IHJlYWQgaW4gZnVsbCBpbiBvbmUg
        c2l0dGluZyEiCgogICAgICAgIC0tIFBpb3RyIFN6b3Rrb3dza2kKCiAgICBD
        b21wYXJpbmcgdG8gcnNwZWM6CgogICAgICAgIHJzcGVjIGlzIGEgdGVzdGlu
        ZyBEU0wuIG1pbml0ZXN0IGlzIHJ1YnkuCgogICAgICAgIC0tIEFkYW0gSGF3
        a2lucywgIkJvdyBCZWZvcmUgTWluaVRlc3QiCgogICAgbWluaXRlc3QgZG9l
        c24ndCByZWludmVudCBhbnl0aGluZyB0aGF0IHJ1YnkgYWxyZWFkeSBwcm92
        aWRlcywgbGlrZToKICAgIGNsYXNzZXMsIG1vZHVsZXMsIGluaGVyaXRhbmNl
        LCBtZXRob2RzLiBUaGlzIG1lYW5zIHlvdSBvbmx5IGhhdmUgdG8KICAgIGxl
        YXJuIHJ1YnkgdG8gdXNlIG1pbml0ZXN0IGFuZCBhbGwgb2YgeW91ciByZWd1
        bGFyIE9PIHByYWN0aWNlcyBsaWtlCiAgICBleHRyYWN0LW1ldGhvZCByZWZh
        Y3RvcmluZ3Mgc3RpbGwgYXBwbHkuCiAgZG93bmxvYWRzX2NvdW50OiAzMTE3
        NgogIG1ldGFkYXRhOiB7fQogIG51bWJlcjogNC4zLjAKICBzdW1tYXJ5OiBt
        aW5pdGVzdCBwcm92aWRlcyBhIGNvbXBsZXRlIHN1aXRlIG9mIHRlc3Rpbmcg
        ZmFjaWxpdGllcyBzdXBwb3J0aW5nIFRERCwKICAgIEJERCwgbW9ja2luZywg
        YW5kIGJlbmNobWFya2luZwogIHBsYXRmb3JtOiBydWJ5CiAgcnVieWdlbXNf
        dmVyc2lvbjogIj49IDAiCiAgcnVieV92ZXJzaW9uOiAKICBwcmVyZWxlYXNl
        OiBmYWxzZQogIGxpY2Vuc2VzOiBbXQogIHJlcXVpcmVtZW50czogCiAgc2hh
        OiA0NWYyYjA5NGIyYjg0ZGRmNWM1OTU0OWE1MDU4MWYwMDdmNmQ5NTBkOGNj
        MmY5OWI3YjUzMGZjYWNmMGJhMzA0Ci0gYXV0aG9yczogUnlhbiBEYXZpcwog
        IGJ1aWx0X2F0OiAnMjAxMi0xMS0wMlQwMDowMDowMC4wMDBaJwogIGNyZWF0
        ZWRfYXQ6ICcyMDEyLTExLTAyVDIzOjA2OjI3LjI1NlonCiAgZGVzY3JpcHRp
        b246IHwtCiAgICBtaW5pdGVzdCBwcm92aWRlcyBhIGNvbXBsZXRlIHN1aXRl
        IG9mIHRlc3RpbmcgZmFjaWxpdGllcyBzdXBwb3J0aW5nCiAgICBUREQsIEJE
        RCwgbW9ja2luZywgYW5kIGJlbmNobWFya2luZy4KCiAgICAgICAgIkkgaGFk
        IGEgY2xhc3Mgd2l0aCBKaW0gV2VpcmljaCBvbiB0ZXN0aW5nIGxhc3Qgd2Vl
        ayBhbmQgd2Ugd2VyZQogICAgICAgICBhbGxvd2VkIHRvIGNob29zZSBvdXIg
        dGVzdGluZyBmcmFtZXdvcmtzLiBLaXJrIEhhaW5lcyBhbmQgSSB3ZXJlCiAg
        ICAgICAgIHBhaXJlZCB1cCBhbmQgd2UgY3JhY2tlZCBvcGVuIHRoZSBjb2Rl
        IGZvciBhIGZldyB0ZXN0CiAgICAgICAgIGZyYW1ld29ya3MuLi4KCiAgICAg
        ICAgIEkgTVVTVCBzYXkgdGhhdCBtaW5pdGVzdCBpcyAqdmVyeSogcmVhZGFi
        bGUgLyB1bmRlcnN0YW5kYWJsZQogICAgICAgICBjb21wYXJlZCB0byB0aGUg
        J290aGVyIHR3bycgb3B0aW9ucyB3ZSBsb29rZWQgYXQuIE5pY2VseSBkb25l
        IGFuZAogICAgICAgICB0aGFuayB5b3UgZm9yIGhlbHBpbmcgdXMga2VlcCBv
        dXIgbWVudGFsIHNhbml0eS4iCgogICAgICAgIC0tIFdheW5lIEUuIFNlZ3Vp
        bgoKICAgIG1pbml0ZXN0L3VuaXQgaXMgYSBzbWFsbCBhbmQgaW5jcmVkaWJs
        eSBmYXN0IHVuaXQgdGVzdGluZyBmcmFtZXdvcmsuCiAgICBJdCBwcm92aWRl
        cyBhIHJpY2ggc2V0IG9mIGFzc2VydGlvbnMgdG8gbWFrZSB5b3VyIHRlc3Rz
        IGNsZWFuIGFuZAogICAgcmVhZGFibGUuCgogICAgbWluaXRlc3Qvc3BlYyBp
        cyBhIGZ1bmN0aW9uYWxseSBjb21wbGV0ZSBzcGVjIGVuZ2luZS4gSXQgaG9v
        a3Mgb250bwogICAgbWluaXRlc3QvdW5pdCBhbmQgc2VhbWxlc3NseSBicmlk
        Z2VzIHRlc3QgYXNzZXJ0aW9ucyBvdmVyIHRvIHNwZWMKICAgIGV4cGVjdGF0
        aW9ucy4KCiAgICBtaW5pdGVzdC9iZW5jaG1hcmsgaXMgYW4gYXdlc29tZSB3
        YXkgdG8gYXNzZXJ0IHRoZSBwZXJmb3JtYW5jZSBvZiB5b3VyCiAgICBhbGdv
        cml0aG1zIGluIGEgcmVwZWF0YWJsZSBtYW5uZXIuIE5vdyB5b3UgY2FuIGFz
        c2VydCB0aGF0IHlvdXIgbmV3YgogICAgY28td29ya2VyIGRvZXNuJ3QgcmVw
        bGFjZSB5b3VyIGxpbmVhciBhbGdvcml0aG0gd2l0aCBhbiBleHBvbmVudGlh
        bAogICAgb25lIQoKICAgIG1pbml0ZXN0L21vY2sgYnkgU3RldmVuIEJha2Vy
        LCBpcyBhIGJlYXV0aWZ1bGx5IHRpbnkgbW9jayAoYW5kIHN0dWIpCiAgICBv
        YmplY3QgZnJhbWV3b3JrLgoKICAgIG1pbml0ZXN0L3ByaWRlIHNob3dzIHBy
        aWRlIGluIHRlc3RpbmcgYW5kIGFkZHMgY29sb3JpbmcgdG8geW91ciB0ZXN0
        CiAgICBvdXRwdXQuIEkgZ3Vlc3MgaXQgaXMgYW4gZXhhbXBsZSBvZiBob3cg
        dG8gd3JpdGUgSU8gcGlwZXMgdG9vLiA6UAoKICAgIG1pbml0ZXN0L3VuaXQg
        aXMgbWVhbnQgdG8gaGF2ZSBhIGNsZWFuIGltcGxlbWVudGF0aW9uIGZvciBs
        YW5ndWFnZQogICAgaW1wbGVtZW50b3JzIHRoYXQgbmVlZCBhIG1pbmltYWwg
        c2V0IG9mIG1ldGhvZHMgdG8gYm9vdHN0cmFwIGEgd29ya2luZwogICAgdGVz
        dCBzdWl0ZS4gRm9yIGV4YW1wbGUsIHRoZXJlIGlzIG5vIG1hZ2ljIGludm9s
        dmVkIGZvciB0ZXN0LWNhc2UKICAgIGRpc2NvdmVyeS4KCiAgICAgICAgIkFn
        YWluLCBJIGNhbid0IHByYWlzZSBlbm91Z2ggdGhlIGlkZWEgb2YgYSB0ZXN0
        aW5nL3NwZWNpbmcKICAgICAgICAgZnJhbWV3b3JrIHRoYXQgSSBjYW4gYWN0
        dWFsbHkgcmVhZCBpbiBmdWxsIGluIG9uZSBzaXR0aW5nISIKCiAgICAgICAg
        LS0gUGlvdHIgU3pvdGtvd3NraQogIGRvd25sb2Fkc19jb3VudDogODI1OTMK
        ICBtZXRhZGF0YToge30KICBudW1iZXI6IDQuMi4wCiAgc3VtbWFyeTogbWlu
        aXRlc3QgcHJvdmlkZXMgYSBjb21wbGV0ZSBzdWl0ZSBvZiB0ZXN0aW5nIGZh
        Y2lsaXRpZXMgc3VwcG9ydGluZyBUREQsCiAgICBCREQsIG1vY2tpbmcsIGFu
        ZCBiZW5jaG1hcmtpbmcKICBwbGF0Zm9ybTogcnVieQogIHJ1YnlnZW1zX3Zl
        cnNpb246ICI+PSAwIgogIHJ1YnlfdmVyc2lvbjogCiAgcHJlcmVsZWFzZTog
        ZmFsc2UKICBsaWNlbnNlczogCiAgcmVxdWlyZW1lbnRzOiAKICBzaGE6IDkw
        NjljZWFhOWNhOGRjNWE1NDhjNzYxNTgzODMxYTQyYTViZTY3NjE5ZjIzMzYx
        Njk5MGIxYmZiMjc4MDBlMWIKLSBhdXRob3JzOiBSeWFuIERhdmlzCiAgYnVp
        bHRfYXQ6ICcyMDEyLTEwLTA1VDAwOjAwOjAwLjAwMFonCiAgY3JlYXRlZF9h
        dDogJzIwMTItMTAtMDVUMjI6NDY6MTguNDA4WicKICBkZXNjcmlwdGlvbjog
        fC0KICAgIG1pbml0ZXN0IHByb3ZpZGVzIGEgY29tcGxldGUgc3VpdGUgb2Yg
        dGVzdGluZyBmYWNpbGl0aWVzIHN1cHBvcnRpbmcKICAgIFRERCwgQkRELCBt
        b2NraW5nLCBhbmQgYmVuY2htYXJraW5nLgoKICAgICAgICAiSSBoYWQgYSBj
        bGFzcyB3aXRoIEppbSBXZWlyaWNoIG9uIHRlc3RpbmcgbGFzdCB3ZWVrIGFu
        ZCB3ZSB3ZXJlCiAgICAgICAgIGFsbG93ZWQgdG8gY2hvb3NlIG91ciB0ZXN0
        aW5nIGZyYW1ld29ya3MuIEtpcmsgSGFpbmVzIGFuZCBJIHdlcmUKICAgICAg
        ICAgcGFpcmVkIHVwIGFuZCB3ZSBjcmFja2VkIG9wZW4gdGhlIGNvZGUgZm9y
        IGEgZmV3IHRlc3QKICAgICAgICAgZnJhbWV3b3Jrcy4uLgoKICAgICAgICAg
        SSBNVVNUIHNheSB0aGF0IG1pbml0ZXN0IGlzICp2ZXJ5KiByZWFkYWJsZSAv
        IHVuZGVyc3RhbmRhYmxlCiAgICAgICAgIGNvbXBhcmVkIHRvIHRoZSAnb3Ro
        ZXIgdHdvJyBvcHRpb25zIHdlIGxvb2tlZCBhdC4gTmljZWx5IGRvbmUgYW5k
        CiAgICAgICAgIHRoYW5rIHlvdSBmb3IgaGVscGluZyB1cyBrZWVwIG91ciBt
        ZW50YWwgc2FuaXR5LiIKCiAgICAgICAgLS0gV2F5bmUgRS4gU2VndWluCgog
        ICAgbWluaXRlc3QvdW5pdCBpcyBhIHNtYWxsIGFuZCBpbmNyZWRpYmx5IGZh
        c3QgdW5pdCB0ZXN0aW5nIGZyYW1ld29yay4KICAgIEl0IHByb3ZpZGVzIGEg
        cmljaCBzZXQgb2YgYXNzZXJ0aW9ucyB0byBtYWtlIHlvdXIgdGVzdHMgY2xl
        YW4gYW5kCiAgICByZWFkYWJsZS4KCiAgICBtaW5pdGVzdC9zcGVjIGlzIGEg
        ZnVuY3Rpb25hbGx5IGNvbXBsZXRlIHNwZWMgZW5naW5lLiBJdCBob29rcyBv
        bnRvCiAgICBtaW5pdGVzdC91bml0IGFuZCBzZWFtbGVzc2x5IGJyaWRnZXMg
        dGVzdCBhc3NlcnRpb25zIG92ZXIgdG8gc3BlYwogICAgZXhwZWN0YXRpb25z
        LgoKICAgIG1pbml0ZXN0L2JlbmNobWFyayBpcyBhbiBhd2Vzb21lIHdheSB0
        byBhc3NlcnQgdGhlIHBlcmZvcm1hbmNlIG9mIHlvdXIKICAgIGFsZ29yaXRo
        bXMgaW4gYSByZXBlYXRhYmxlIG1hbm5lci4gTm93IHlvdSBjYW4gYXNzZXJ0
        IHRoYXQgeW91ciBuZXdiCiAgICBjby13b3JrZXIgZG9lc24ndCByZXBsYWNl
        IHlvdXIgbGluZWFyIGFsZ29yaXRobSB3aXRoIGFuIGV4cG9uZW50aWFsCiAg
        ICBvbmUhCgogICAgbWluaXRlc3QvbW9jayBieSBTdGV2ZW4gQmFrZXIsIGlz
        IGEgYmVhdXRpZnVsbHkgdGlueSBtb2NrIChhbmQgc3R1YikKICAgIG9iamVj
        dCBmcmFtZXdvcmsuCgogICAgbWluaXRlc3QvcHJpZGUgc2hvd3MgcHJpZGUg
        aW4gdGVzdGluZyBhbmQgYWRkcyBjb2xvcmluZyB0byB5b3VyIHRlc3QKICAg
        IG91dHB1dC4gSSBndWVzcyBpdCBpcyBhbiBleGFtcGxlIG9mIGhvdyB0byB3
        cml0ZSBJTyBwaXBlcyB0b28uIDpQCgogICAgbWluaXRlc3QvdW5pdCBpcyBt
        ZWFudCB0byBoYXZlIGEgY2xlYW4gaW1wbGVtZW50YXRpb24gZm9yIGxhbmd1
        YWdlCiAgICBpbXBsZW1lbnRvcnMgdGhhdCBuZWVkIGEgbWluaW1hbCBzZXQg
        b2YgbWV0aG9kcyB0byBib290c3RyYXAgYSB3b3JraW5nCiAgICB0ZXN0IHN1
        aXRlLiBGb3IgZXhhbXBsZSwgdGhlcmUgaXMgbm8gbWFnaWMgaW52b2x2ZWQg
        Zm9yIHRlc3QtY2FzZQogICAgZGlzY292ZXJ5LgoKICAgICAgICAiQWdhaW4s
        IEkgY2FuJ3QgcHJhaXNlIGVub3VnaCB0aGUgaWRlYSBvZiBhIHRlc3Rpbmcv
        c3BlY2luZwogICAgICAgICBmcmFtZXdvcmsgdGhhdCBJIGNhbiBhY3R1YWxs
        eSByZWFkIGluIGZ1bGwgaW4gb25lIHNpdHRpbmchIgoKICAgICAgICAtLSBQ
        aW90ciBTem90a293c2tpCiAgZG93bmxvYWRzX2NvdW50OiAxMDAyOTcKICBt
        ZXRhZGF0YToge30KICBudW1iZXI6IDQuMS4wCiAgc3VtbWFyeTogbWluaXRl
        c3QgcHJvdmlkZXMgYSBjb21wbGV0ZSBzdWl0ZSBvZiB0ZXN0aW5nIGZhY2ls
        aXRpZXMgc3VwcG9ydGluZyBUREQsCiAgICBCREQsIG1vY2tpbmcsIGFuZCBi
        ZW5jaG1hcmtpbmcKICBwbGF0Zm9ybTogcnVieQogIHJ1YnlnZW1zX3ZlcnNp
        b246ICI+PSAwIgogIHJ1YnlfdmVyc2lvbjogCiAgcHJlcmVsZWFzZTogZmFs
        c2UKICBsaWNlbnNlczogCiAgcmVxdWlyZW1lbnRzOiAKICBzaGE6IDhlNzc3
        ZjcxNWZmYjlmMzI0Y2UzY2ZkZWIxZWU1M2E3MjczYjllMzQyYWI3ZWI2ZGYy
        MmNmM2NlOGVlYmE3OGEKLSBhdXRob3JzOiBSeWFuIERhdmlzCiAgYnVpbHRf
        YXQ6ICcyMDEyLTA5LTI5VDAwOjAwOjAwLjAwMFonCiAgY3JlYXRlZF9hdDog
        JzIwMTItMDktMjlUMDA6NTA6MDIuMTQ0WicKICBkZXNjcmlwdGlvbjogfC0K
        ICAgIG1pbml0ZXN0IHByb3ZpZGVzIGEgY29tcGxldGUgc3VpdGUgb2YgdGVz
        dGluZyBmYWNpbGl0aWVzIHN1cHBvcnRpbmcKICAgIFRERCwgQkRELCBtb2Nr
        aW5nLCBhbmQgYmVuY2htYXJraW5nLgoKICAgICAgICAiSSBoYWQgYSBjbGFz
        cyB3aXRoIEppbSBXZWlyaWNoIG9uIHRlc3RpbmcgbGFzdCB3ZWVrIGFuZCB3
        ZSB3ZXJlCiAgICAgICAgIGFsbG93ZWQgdG8gY2hvb3NlIG91ciB0ZXN0aW5n
        IGZyYW1ld29ya3MuIEtpcmsgSGFpbmVzIGFuZCBJIHdlcmUKICAgICAgICAg
        cGFpcmVkIHVwIGFuZCB3ZSBjcmFja2VkIG9wZW4gdGhlIGNvZGUgZm9yIGEg
        ZmV3IHRlc3QKICAgICAgICAgZnJhbWV3b3Jrcy4uLgoKICAgICAgICAgSSBN
        VVNUIHNheSB0aGF0IG1pbml0ZXN0IGlzICp2ZXJ5KiByZWFkYWJsZSAvIHVu
        ZGVyc3RhbmRhYmxlCiAgICAgICAgIGNvbXBhcmVkIHRvIHRoZSAnb3RoZXIg
        dHdvJyBvcHRpb25zIHdlIGxvb2tlZCBhdC4gTmljZWx5IGRvbmUgYW5kCiAg
        ICAgICAgIHRoYW5rIHlvdSBmb3IgaGVscGluZyB1cyBrZWVwIG91ciBtZW50
        YWwgc2FuaXR5LiIKCiAgICAgICAgLS0gV2F5bmUgRS4gU2VndWluCgogICAg
        bWluaXRlc3QvdW5pdCBpcyBhIHNtYWxsIGFuZCBpbmNyZWRpYmx5IGZhc3Qg
        dW5pdCB0ZXN0aW5nIGZyYW1ld29yay4KICAgIEl0IHByb3ZpZGVzIGEgcmlj
        aCBzZXQgb2YgYXNzZXJ0aW9ucyB0byBtYWtlIHlvdXIgdGVzdHMgY2xlYW4g
        YW5kCiAgICByZWFkYWJsZS4KCiAgICBtaW5pdGVzdC9zcGVjIGlzIGEgZnVu
        Y3Rpb25hbGx5IGNvbXBsZXRlIHNwZWMgZW5naW5lLiBJdCBob29rcyBvbnRv
        CiAgICBtaW5pdGVzdC91bml0IGFuZCBzZWFtbGVzc2x5IGJyaWRnZXMgdGVz
        dCBhc3NlcnRpb25zIG92ZXIgdG8gc3BlYwogICAgZXhwZWN0YXRpb25zLgoK
        ICAgIG1pbml0ZXN0L2JlbmNobWFyayBpcyBhbiBhd2Vzb21lIHdheSB0byBh
        c3NlcnQgdGhlIHBlcmZvcm1hbmNlIG9mIHlvdXIKICAgIGFsZ29yaXRobXMg
        aW4gYSByZXBlYXRhYmxlIG1hbm5lci4gTm93IHlvdSBjYW4gYXNzZXJ0IHRo
        YXQgeW91ciBuZXdiCiAgICBjby13b3JrZXIgZG9lc24ndCByZXBsYWNlIHlv
        dXIgbGluZWFyIGFsZ29yaXRobSB3aXRoIGFuIGV4cG9uZW50aWFsCiAgICBv
        bmUhCgogICAgbWluaXRlc3QvbW9jayBieSBTdGV2ZW4gQmFrZXIsIGlzIGEg
        YmVhdXRpZnVsbHkgdGlueSBtb2NrIChhbmQgc3R1YikKICAgIG9iamVjdCBm
        cmFtZXdvcmsuCgogICAgbWluaXRlc3QvcHJpZGUgc2hvd3MgcHJpZGUgaW4g
        dGVzdGluZyBhbmQgYWRkcyBjb2xvcmluZyB0byB5b3VyIHRlc3QKICAgIG91
        dHB1dC4gSSBndWVzcyBpdCBpcyBhbiBleGFtcGxlIG9mIGhvdyB0byB3cml0
        ZSBJTyBwaXBlcyB0b28uIDpQCgogICAgbWluaXRlc3QvdW5pdCBpcyBtZWFu
        dCB0byBoYXZlIGEgY2xlYW4gaW1wbGVtZW50YXRpb24gZm9yIGxhbmd1YWdl
        CiAgICBpbXBsZW1lbnRvcnMgdGhhdCBuZWVkIGEgbWluaW1hbCBzZXQgb2Yg
        bWV0aG9kcyB0byBib290c3RyYXAgYSB3b3JraW5nCiAgICB0ZXN0IHN1aXRl
        LiBGb3IgZXhhbXBsZSwgdGhlcmUgaXMgbm8gbWFnaWMgaW52b2x2ZWQgZm9y
        IHRlc3QtY2FzZQogICAgZGlzY292ZXJ5LgoKICAgICAgICAiQWdhaW4sIEkg
        Y2FuJ3QgcHJhaXNlIGVub3VnaCB0aGUgaWRlYSBvZiBhIHRlc3Rpbmcvc3Bl
        Y2luZwogICAgICAgICBmcmFtZXdvcmsgdGhhdCBJIGNhbiBhY3R1YWxseSBy
        ZWFkIGluIGZ1bGwgaW4gb25lIHNpdHRpbmchIgoKICAgICAgICAtLSBQaW90
        ciBTem90a293c2tpCiAgZG93bmxvYWRzX2NvdW50OiAyMTMwMwogIG1ldGFk
        YXRhOiB7fQogIG51bWJlcjogNC4wLjAKICBzdW1tYXJ5OiBtaW5pdGVzdCBw
        cm92aWRlcyBhIGNvbXBsZXRlIHN1aXRlIG9mIHRlc3RpbmcgZmFjaWxpdGll
        cyBzdXBwb3J0aW5nIFRERCwKICAgIEJERCwgbW9ja2luZywgYW5kIGJlbmNo
        bWFya2luZwogIHBsYXRmb3JtOiBydWJ5CiAgcnVieWdlbXNfdmVyc2lvbjog
        Ij49IDAiCiAgcnVieV92ZXJzaW9uOiAKICBwcmVyZWxlYXNlOiBmYWxzZQog
        IGxpY2Vuc2VzOiAKICByZXF1aXJlbWVudHM6IAogIHNoYTogNTg0YzMxNWI3
        ZDZjNTAxZGE2ZmQ0ZTIzNWY0ZmRkYzc2ODI5NGU5MjQ4MzViYTNhYTkwZWQ2
        MGVmMGMyYWYxZAotIGF1dGhvcnM6IFJ5YW4gRGF2aXMKICBidWlsdF9hdDog
        JzIwMTItMDktMjFUMDA6MDA6MDAuMDAwWicKICBjcmVhdGVkX2F0OiAnMjAx
        Mi0wOS0yMVQyMzo0MjoxMy40NjJaJwogIGRlc2NyaXB0aW9uOiB8LQogICAg
        bWluaXRlc3QgcHJvdmlkZXMgYSBjb21wbGV0ZSBzdWl0ZSBvZiB0ZXN0aW5n
        IGZhY2lsaXRpZXMgc3VwcG9ydGluZwogICAgVERELCBCREQsIG1vY2tpbmcs
        IGFuZCBiZW5jaG1hcmtpbmcuCgogICAgICAgICJJIGhhZCBhIGNsYXNzIHdp
        dGggSmltIFdlaXJpY2ggb24gdGVzdGluZyBsYXN0IHdlZWsgYW5kIHdlIHdl
        cmUKICAgICAgICAgYWxsb3dlZCB0byBjaG9vc2Ugb3VyIHRlc3RpbmcgZnJh
        bWV3b3Jrcy4gS2lyayBIYWluZXMgYW5kIEkgd2VyZQogICAgICAgICBwYWly
        ZWQgdXAgYW5kIHdlIGNyYWNrZWQgb3BlbiB0aGUgY29kZSBmb3IgYSBmZXcg
        dGVzdAogICAgICAgICBmcmFtZXdvcmtzLi4uCgogICAgICAgICBJIE1VU1Qg
        c2F5IHRoYXQgbWluaXRlc3QgaXMgKnZlcnkqIHJlYWRhYmxlIC8gdW5kZXJz
        dGFuZGFibGUKICAgICAgICAgY29tcGFyZWQgdG8gdGhlICdvdGhlciB0d28n
        IG9wdGlvbnMgd2UgbG9va2VkIGF0LiBOaWNlbHkgZG9uZSBhbmQKICAgICAg
        ICAgdGhhbmsgeW91IGZvciBoZWxwaW5nIHVzIGtlZXAgb3VyIG1lbnRhbCBz
        YW5pdHkuIgoKICAgICAgICAtLSBXYXluZSBFLiBTZWd1aW4KCiAgICBtaW5p
        dGVzdC91bml0IGlzIGEgc21hbGwgYW5kIGluY3JlZGlibHkgZmFzdCB1bml0
        IHRlc3RpbmcgZnJhbWV3b3JrLgogICAgSXQgcHJvdmlkZXMgYSByaWNoIHNl
        dCBvZiBhc3NlcnRpb25zIHRvIG1ha2UgeW91ciB0ZXN0cyBjbGVhbiBhbmQK
        ICAgIHJlYWRhYmxlLgoKICAgIG1pbml0ZXN0L3NwZWMgaXMgYSBmdW5jdGlv
        bmFsbHkgY29tcGxldGUgc3BlYyBlbmdpbmUuIEl0IGhvb2tzIG9udG8KICAg
        IG1pbml0ZXN0L3VuaXQgYW5kIHNlYW1sZXNzbHkgYnJpZGdlcyB0ZXN0IGFz
        c2VydGlvbnMgb3ZlciB0byBzcGVjCiAgICBleHBlY3RhdGlvbnMuCgogICAg
        bWluaXRlc3QvYmVuY2htYXJrIGlzIGFuIGF3ZXNvbWUgd2F5IHRvIGFzc2Vy
        dCB0aGUgcGVyZm9ybWFuY2Ugb2YgeW91cgogICAgYWxnb3JpdGhtcyBpbiBh
        IHJlcGVhdGFibGUgbWFubmVyLiBOb3cgeW91IGNhbiBhc3NlcnQgdGhhdCB5
        b3VyIG5ld2IKICAgIGNvLXdvcmtlciBkb2Vzbid0IHJlcGxhY2UgeW91ciBs
        aW5lYXIgYWxnb3JpdGhtIHdpdGggYW4gZXhwb25lbnRpYWwKICAgIG9uZSEK
        CiAgICBtaW5pdGVzdC9tb2NrIGJ5IFN0ZXZlbiBCYWtlciwgaXMgYSBiZWF1
        dGlmdWxseSB0aW55IG1vY2sgKGFuZCBzdHViKQogICAgb2JqZWN0IGZyYW1l
        d29yay4KCiAgICBtaW5pdGVzdC9wcmlkZSBzaG93cyBwcmlkZSBpbiB0ZXN0
        aW5nIGFuZCBhZGRzIGNvbG9yaW5nIHRvIHlvdXIgdGVzdAogICAgb3V0cHV0
        LiBJIGd1ZXNzIGl0IGlzIGFuIGV4YW1wbGUgb2YgaG93IHRvIHdyaXRlIElP
        IHBpcGVzIHRvby4gOlAKCiAgICBtaW5pdGVzdC91bml0IGlzIG1lYW50IHRv
        IGhhdmUgYSBjbGVhbiBpbXBsZW1lbnRhdGlvbiBmb3IgbGFuZ3VhZ2UKICAg
        IGltcGxlbWVudG9ycyB0aGF0IG5lZWQgYSBtaW5pbWFsIHNldCBvZiBtZXRo
        b2RzIHRvIGJvb3RzdHJhcCBhIHdvcmtpbmcKICAgIHRlc3Qgc3VpdGUuIEZv
        ciBleGFtcGxlLCB0aGVyZSBpcyBubyBtYWdpYyBpbnZvbHZlZCBmb3IgdGVz
        dC1jYXNlCiAgICBkaXNjb3ZlcnkuCgogICAgICAgICJBZ2FpbiwgSSBjYW4n
        dCBwcmFpc2UgZW5vdWdoIHRoZSBpZGVhIG9mIGEgdGVzdGluZy9zcGVjaW5n
        CiAgICAgICAgIGZyYW1ld29yayB0aGF0IEkgY2FuIGFjdHVhbGx5IHJlYWQg
        aW4gZnVsbCBpbiBvbmUgc2l0dGluZyEiCgogICAgICAgIC0tIFBpb3RyIFN6
        b3Rrb3dza2kKICBkb3dubG9hZHNfY291bnQ6IDc1ODI1CiAgbWV0YWRhdGE6
        IHt9CiAgbnVtYmVyOiAzLjUuMAogIHN1bW1hcnk6IG1pbml0ZXN0IHByb3Zp
        ZGVzIGEgY29tcGxldGUgc3VpdGUgb2YgdGVzdGluZyBmYWNpbGl0aWVzIHN1
        cHBvcnRpbmcgVERELAogICAgQkRELCBtb2NraW5nLCBhbmQgYmVuY2htYXJr
        aW5nCiAgcGxhdGZvcm06IHJ1YnkKICBydWJ5Z2Vtc192ZXJzaW9uOiAiPj0g
        MCIKICBydWJ5X3ZlcnNpb246IAogIHByZXJlbGVhc2U6IGZhbHNlCiAgbGlj
        ZW5zZXM6IAogIHJlcXVpcmVtZW50czogCiAgc2hhOiA3NGYxZmU0MDllNGU5
        ZTk5OTdjZDc4NjViZjNlOWRmOWMxNDUyZDdhYmNlMzc1MTIwZGYzOWJmMDVl
        M2RkYjZlCi0gYXV0aG9yczogUnlhbiBEYXZpcwogIGJ1aWx0X2F0OiAnMjAx
        Mi0wOS0wNVQwMDowMDowMC4wMDBaJwogIGNyZWF0ZWRfYXQ6ICcyMDEyLTA5
        LTA1VDIyOjEzOjQ2LjUyOFonCiAgZGVzY3JpcHRpb246IHwtCiAgICBtaW5p
        dGVzdCBwcm92aWRlcyBhIGNvbXBsZXRlIHN1aXRlIG9mIHRlc3RpbmcgZmFj
        aWxpdGllcyBzdXBwb3J0aW5nCiAgICBUREQsIEJERCwgbW9ja2luZywgYW5k
        IGJlbmNobWFya2luZy4KCiAgICAgICAgIkkgaGFkIGEgY2xhc3Mgd2l0aCBK
        aW0gV2VpcmljaCBvbiB0ZXN0aW5nIGxhc3Qgd2VlayBhbmQgd2Ugd2VyZQog
        ICAgICAgICBhbGxvd2VkIHRvIGNob29zZSBvdXIgdGVzdGluZyBmcmFtZXdv
        cmtzLiBLaXJrIEhhaW5lcyBhbmQgSSB3ZXJlCiAgICAgICAgIHBhaXJlZCB1
        cCBhbmQgd2UgY3JhY2tlZCBvcGVuIHRoZSBjb2RlIGZvciBhIGZldyB0ZXN0
        CiAgICAgICAgIGZyYW1ld29ya3MuLi4KCiAgICAgICAgIEkgTVVTVCBzYXkg
        dGhhdCBtaW5pdGVzdCBpcyAqdmVyeSogcmVhZGFibGUgLyB1bmRlcnN0YW5k
        YWJsZQogICAgICAgICBjb21wYXJlZCB0byB0aGUgJ290aGVyIHR3bycgb3B0
        aW9ucyB3ZSBsb29rZWQgYXQuIE5pY2VseSBkb25lIGFuZAogICAgICAgICB0
        aGFuayB5b3UgZm9yIGhlbHBpbmcgdXMga2VlcCBvdXIgbWVudGFsIHNhbml0
        eS4iCgogICAgICAgIC0tIFdheW5lIEUuIFNlZ3VpbgoKICAgIG1pbml0ZXN0
        L3VuaXQgaXMgYSBzbWFsbCBhbmQgaW5jcmVkaWJseSBmYXN0IHVuaXQgdGVz
        dGluZyBmcmFtZXdvcmsuCiAgICBJdCBwcm92aWRlcyBhIHJpY2ggc2V0IG9m
        IGFzc2VydGlvbnMgdG8gbWFrZSB5b3VyIHRlc3RzIGNsZWFuIGFuZAogICAg
        cmVhZGFibGUuCgogICAgbWluaXRlc3Qvc3BlYyBpcyBhIGZ1bmN0aW9uYWxs
        eSBjb21wbGV0ZSBzcGVjIGVuZ2luZS4gSXQgaG9va3Mgb250bwogICAgbWlu
        aXRlc3QvdW5pdCBhbmQgc2VhbWxlc3NseSBicmlkZ2VzIHRlc3QgYXNzZXJ0
        aW9ucyBvdmVyIHRvIHNwZWMKICAgIGV4cGVjdGF0aW9ucy4KCiAgICBtaW5p
        dGVzdC9iZW5jaG1hcmsgaXMgYW4gYXdlc29tZSB3YXkgdG8gYXNzZXJ0IHRo
        ZSBwZXJmb3JtYW5jZSBvZiB5b3VyCiAgICBhbGdvcml0aG1zIGluIGEgcmVw
        ZWF0YWJsZSBtYW5uZXIuIE5vdyB5b3UgY2FuIGFzc2VydCB0aGF0IHlvdXIg
        bmV3YgogICAgY28td29ya2VyIGRvZXNuJ3QgcmVwbGFjZSB5b3VyIGxpbmVh
        ciBhbGdvcml0aG0gd2l0aCBhbiBleHBvbmVudGlhbAogICAgb25lIQoKICAg
        IG1pbml0ZXN0L21vY2sgYnkgU3RldmVuIEJha2VyLCBpcyBhIGJlYXV0aWZ1
        bGx5IHRpbnkgbW9jayAoYW5kIHN0dWIpCiAgICBvYmplY3QgZnJhbWV3b3Jr
        LgoKICAgIG1pbml0ZXN0L3ByaWRlIHNob3dzIHByaWRlIGluIHRlc3Rpbmcg
        YW5kIGFkZHMgY29sb3JpbmcgdG8geW91ciB0ZXN0CiAgICBvdXRwdXQuIEkg
        Z3Vlc3MgaXQgaXMgYW4gZXhhbXBsZSBvZiBob3cgdG8gd3JpdGUgSU8gcGlw
        ZXMgdG9vLiA6UAoKICAgIG1pbml0ZXN0L3VuaXQgaXMgbWVhbnQgdG8gaGF2
        ZSBhIGNsZWFuIGltcGxlbWVudGF0aW9uIGZvciBsYW5ndWFnZQogICAgaW1w
        bGVtZW50b3JzIHRoYXQgbmVlZCBhIG1pbmltYWwgc2V0IG9mIG1ldGhvZHMg
        dG8gYm9vdHN0cmFwIGEgd29ya2luZwogICAgdGVzdCBzdWl0ZS4gRm9yIGV4
        YW1wbGUsIHRoZXJlIGlzIG5vIG1hZ2ljIGludm9sdmVkIGZvciB0ZXN0LWNh
        c2UKICAgIGRpc2NvdmVyeS4KCiAgICAgICAgIkFnYWluLCBJIGNhbid0IHBy
        YWlzZSBlbm91Z2ggdGhlIGlkZWEgb2YgYSB0ZXN0aW5nL3NwZWNpbmcKICAg
        ICAgICAgZnJhbWV3b3JrIHRoYXQgSSBjYW4gYWN0dWFsbHkgcmVhZCBpbiBm
        dWxsIGluIG9uZSBzaXR0aW5nISIKCiAgICAgICAgLS0gUGlvdHIgU3pvdGtv
        d3NraQogIGRvd25sb2Fkc19jb3VudDogNDM5OTMKICBtZXRhZGF0YToge30K
        ICBudW1iZXI6IDMuNC4wCiAgc3VtbWFyeTogbWluaXRlc3QgcHJvdmlkZXMg
        YSBjb21wbGV0ZSBzdWl0ZSBvZiB0ZXN0aW5nIGZhY2lsaXRpZXMgc3VwcG9y
        dGluZyBUREQsCiAgICBCREQsIG1vY2tpbmcsIGFuZCBiZW5jaG1hcmtpbmcK
        ICBwbGF0Zm9ybTogcnVieQogIHJ1YnlnZW1zX3ZlcnNpb246ICI+PSAwIgog
        IHJ1YnlfdmVyc2lvbjogCiAgcHJlcmVsZWFzZTogZmFsc2UKICBsaWNlbnNl
        czogCiAgcmVxdWlyZW1lbnRzOiAKICBzaGE6IDM5YzcwOWI2NGY0NGFmNjI3
        ZWEyY2M0MjVmOGMwNGNlNzI2ZDE5ZTA4Yzk0ZDA4OTJjM2JmZDcwMTA5YTdk
        YTgKLSBhdXRob3JzOiBSeWFuIERhdmlzCiAgYnVpbHRfYXQ6ICcyMDEyLTA3
        LTI3VDAwOjAwOjAwLjAwMFonCiAgY3JlYXRlZF9hdDogJzIwMTItMDctMjdU
        MDA6MTA6MTMuMTI2WicKICBkZXNjcmlwdGlvbjogfC0KICAgIG1pbml0ZXN0
        IHByb3ZpZGVzIGEgY29tcGxldGUgc3VpdGUgb2YgdGVzdGluZyBmYWNpbGl0
        aWVzIHN1cHBvcnRpbmcKICAgIFRERCwgQkRELCBtb2NraW5nLCBhbmQgYmVu
        Y2htYXJraW5nLgoKICAgICAgICAiSSBoYWQgYSBjbGFzcyB3aXRoIEppbSBX
        ZWlyaWNoIG9uIHRlc3RpbmcgbGFzdCB3ZWVrIGFuZCB3ZSB3ZXJlCiAgICAg
        ICAgIGFsbG93ZWQgdG8gY2hvb3NlIG91ciB0ZXN0aW5nIGZyYW1ld29ya3Mu
        IEtpcmsgSGFpbmVzIGFuZCBJIHdlcmUKICAgICAgICAgcGFpcmVkIHVwIGFu
        ZCB3ZSBjcmFja2VkIG9wZW4gdGhlIGNvZGUgZm9yIGEgZmV3IHRlc3QKICAg
        ICAgICAgZnJhbWV3b3Jrcy4uLgoKICAgICAgICAgSSBNVVNUIHNheSB0aGF0
        IG1pbml0ZXN0IGlzICp2ZXJ5KiByZWFkYWJsZSAvIHVuZGVyc3RhbmRhYmxl
        CiAgICAgICAgIGNvbXBhcmVkIHRvIHRoZSAnb3RoZXIgdHdvJyBvcHRpb25z
        IHdlIGxvb2tlZCBhdC4gTmljZWx5IGRvbmUgYW5kCiAgICAgICAgIHRoYW5r
        IHlvdSBmb3IgaGVscGluZyB1cyBrZWVwIG91ciBtZW50YWwgc2FuaXR5LiIK
        CiAgICAgICAgLS0gV2F5bmUgRS4gU2VndWluCgogICAgbWluaXRlc3QvdW5p
        dCBpcyBhIHNtYWxsIGFuZCBpbmNyZWRpYmx5IGZhc3QgdW5pdCB0ZXN0aW5n
        IGZyYW1ld29yay4KICAgIEl0IHByb3ZpZGVzIGEgcmljaCBzZXQgb2YgYXNz
        ZXJ0aW9ucyB0byBtYWtlIHlvdXIgdGVzdHMgY2xlYW4gYW5kCiAgICByZWFk
        YWJsZS4KCiAgICBtaW5pdGVzdC9zcGVjIGlzIGEgZnVuY3Rpb25hbGx5IGNv
        bXBsZXRlIHNwZWMgZW5naW5lLiBJdCBob29rcyBvbnRvCiAgICBtaW5pdGVz
        dC91bml0IGFuZCBzZWFtbGVzc2x5IGJyaWRnZXMgdGVzdCBhc3NlcnRpb25z
        IG92ZXIgdG8gc3BlYwogICAgZXhwZWN0YXRpb25zLgoKICAgIG1pbml0ZXN0
        L2JlbmNobWFyayBpcyBhbiBhd2Vzb21lIHdheSB0byBhc3NlcnQgdGhlIHBl
        cmZvcm1hbmNlIG9mIHlvdXIKICAgIGFsZ29yaXRobXMgaW4gYSByZXBlYXRh
        YmxlIG1hbm5lci4gTm93IHlvdSBjYW4gYXNzZXJ0IHRoYXQgeW91ciBuZXdi
        CiAgICBjby13b3JrZXIgZG9lc24ndCByZXBsYWNlIHlvdXIgbGluZWFyIGFs
        Z29yaXRobSB3aXRoIGFuIGV4cG9uZW50aWFsCiAgICBvbmUhCgogICAgbWlu
        aXRlc3QvbW9jayBieSBTdGV2ZW4gQmFrZXIsIGlzIGEgYmVhdXRpZnVsbHkg
        dGlueSBtb2NrIChhbmQgc3R1YikKICAgIG9iamVjdCBmcmFtZXdvcmsuCgog
        ICAgbWluaXRlc3QvcHJpZGUgc2hvd3MgcHJpZGUgaW4gdGVzdGluZyBhbmQg
        YWRkcyBjb2xvcmluZyB0byB5b3VyIHRlc3QKICAgIG91dHB1dC4gSSBndWVz
        cyBpdCBpcyBhbiBleGFtcGxlIG9mIGhvdyB0byB3cml0ZSBJTyBwaXBlcyB0
        b28uIDpQCgogICAgbWluaXRlc3QvdW5pdCBpcyBtZWFudCB0byBoYXZlIGEg
        Y2xlYW4gaW1wbGVtZW50YXRpb24gZm9yIGxhbmd1YWdlCiAgICBpbXBsZW1l
        bnRvcnMgdGhhdCBuZWVkIGEgbWluaW1hbCBzZXQgb2YgbWV0aG9kcyB0byBi
        b290c3RyYXAgYSB3b3JraW5nCiAgICB0ZXN0IHN1aXRlLiBGb3IgZXhhbXBs
        ZSwgdGhlcmUgaXMgbm8gbWFnaWMgaW52b2x2ZWQgZm9yIHRlc3QtY2FzZQog
        ICAgZGlzY292ZXJ5LgoKICAgICAgICAiQWdhaW4sIEkgY2FuJ3QgcHJhaXNl
        IGVub3VnaCB0aGUgaWRlYSBvZiBhIHRlc3Rpbmcvc3BlY2luZwogICAgICAg
        ICBmcmFtZXdvcmsgdGhhdCBJIGNhbiBhY3R1YWxseSByZWFkIGluIGZ1bGwg
        aW4gb25lIHNpdHRpbmchIgoKICAgICAgICAtLSBQaW90ciBTem90a293c2tp
        CiAgZG93bmxvYWRzX2NvdW50OiAxMzAyOTYKICBtZXRhZGF0YToge30KICBu
        dW1iZXI6IDMuMy4wCiAgc3VtbWFyeTogbWluaXRlc3QgcHJvdmlkZXMgYSBj
        b21wbGV0ZSBzdWl0ZSBvZiB0ZXN0aW5nIGZhY2lsaXRpZXMgc3VwcG9ydGlu
        ZyBUREQsCiAgICBCREQsIG1vY2tpbmcsIGFuZCBiZW5jaG1hcmtpbmcKICBw
        bGF0Zm9ybTogcnVieQogIHJ1YnlnZW1zX3ZlcnNpb246ICI+PSAwIgogIHJ1
        YnlfdmVyc2lvbjogCiAgcHJlcmVsZWFzZTogZmFsc2UKICBsaWNlbnNlczog
        CiAgcmVxdWlyZW1lbnRzOiAKICBzaGE6IGJjNTQ5NTM4NzAzMjYxYzM0MWE5
        MjMyZWYzODQ0ODFmODYwYmE3YmJkYzY3NTMwZmE5NjdjMzM3YThmYmQzODcK
        LSBhdXRob3JzOiBSeWFuIERhdmlzCiAgYnVpbHRfYXQ6ICcyMDEyLTA2LTI2
        VDAwOjAwOjAwLjAwMFonCiAgY3JlYXRlZF9hdDogJzIwMTItMDYtMjZUMjI6
        MzU6MTUuOTA3WicKICBkZXNjcmlwdGlvbjogfC0KICAgIG1pbml0ZXN0IHBy
        b3ZpZGVzIGEgY29tcGxldGUgc3VpdGUgb2YgdGVzdGluZyBmYWNpbGl0aWVz
        IHN1cHBvcnRpbmcKICAgIFRERCwgQkRELCBtb2NraW5nLCBhbmQgYmVuY2ht
        YXJraW5nLgoKICAgICAgICAiSSBoYWQgYSBjbGFzcyB3aXRoIEppbSBXZWly
        aWNoIG9uIHRlc3RpbmcgbGFzdCB3ZWVrIGFuZCB3ZSB3ZXJlCiAgICAgICAg
        IGFsbG93ZWQgdG8gY2hvb3NlIG91ciB0ZXN0aW5nIGZyYW1ld29ya3MuIEtp
        cmsgSGFpbmVzIGFuZCBJIHdlcmUKICAgICAgICAgcGFpcmVkIHVwIGFuZCB3
        ZSBjcmFja2VkIG9wZW4gdGhlIGNvZGUgZm9yIGEgZmV3IHRlc3QKICAgICAg
        ICAgZnJhbWV3b3Jrcy4uLgoKICAgICAgICAgSSBNVVNUIHNheSB0aGF0IG1p
        bml0ZXN0IGlzICp2ZXJ5KiByZWFkYWJsZSAvIHVuZGVyc3RhbmRhYmxlCiAg
        ICAgICAgIGNvbXBhcmVkIHRvIHRoZSAnb3RoZXIgdHdvJyBvcHRpb25zIHdl
        IGxvb2tlZCBhdC4gTmljZWx5IGRvbmUgYW5kCiAgICAgICAgIHRoYW5rIHlv
        dSBmb3IgaGVscGluZyB1cyBrZWVwIG91ciBtZW50YWwgc2FuaXR5LiIKCiAg
        ICAgICAgLS0gV2F5bmUgRS4gU2VndWluCgogICAgbWluaXRlc3QvdW5pdCBp
        cyBhIHNtYWxsIGFuZCBpbmNyZWRpYmx5IGZhc3QgdW5pdCB0ZXN0aW5nIGZy
        YW1ld29yay4KICAgIEl0IHByb3ZpZGVzIGEgcmljaCBzZXQgb2YgYXNzZXJ0
        aW9ucyB0byBtYWtlIHlvdXIgdGVzdHMgY2xlYW4gYW5kCiAgICByZWFkYWJs
        ZS4KCiAgICBtaW5pdGVzdC9zcGVjIGlzIGEgZnVuY3Rpb25hbGx5IGNvbXBs
        ZXRlIHNwZWMgZW5naW5lLiBJdCBob29rcyBvbnRvCiAgICBtaW5pdGVzdC91
        bml0IGFuZCBzZWFtbGVzc2x5IGJyaWRnZXMgdGVzdCBhc3NlcnRpb25zIG92
        ZXIgdG8gc3BlYwogICAgZXhwZWN0YXRpb25zLgoKICAgIG1pbml0ZXN0L2Jl
        bmNobWFyayBpcyBhbiBhd2Vzb21lIHdheSB0byBhc3NlcnQgdGhlIHBlcmZv
        cm1hbmNlIG9mIHlvdXIKICAgIGFsZ29yaXRobXMgaW4gYSByZXBlYXRhYmxl
        IG1hbm5lci4gTm93IHlvdSBjYW4gYXNzZXJ0IHRoYXQgeW91ciBuZXdiCiAg
        ICBjby13b3JrZXIgZG9lc24ndCByZXBsYWNlIHlvdXIgbGluZWFyIGFsZ29y
        aXRobSB3aXRoIGFuIGV4cG9uZW50aWFsCiAgICBvbmUhCgogICAgbWluaXRl
        c3QvbW9jayBieSBTdGV2ZW4gQmFrZXIsIGlzIGEgYmVhdXRpZnVsbHkgdGlu
        eSBtb2NrIChhbmQgc3R1YikKICAgIG9iamVjdCBmcmFtZXdvcmsuCgogICAg
        bWluaXRlc3QvcHJpZGUgc2hvd3MgcHJpZGUgaW4gdGVzdGluZyBhbmQgYWRk
        cyBjb2xvcmluZyB0byB5b3VyIHRlc3QKICAgIG91dHB1dC4gSSBndWVzcyBp
        dCBpcyBhbiBleGFtcGxlIG9mIGhvdyB0byB3cml0ZSBJTyBwaXBlcyB0b28u
        IDpQCgogICAgbWluaXRlc3QvdW5pdCBpcyBtZWFudCB0byBoYXZlIGEgY2xl
        YW4gaW1wbGVtZW50YXRpb24gZm9yIGxhbmd1YWdlCiAgICBpbXBsZW1lbnRv
        cnMgdGhhdCBuZWVkIGEgbWluaW1hbCBzZXQgb2YgbWV0aG9kcyB0byBib290
        c3RyYXAgYSB3b3JraW5nCiAgICB0ZXN0IHN1aXRlLiBGb3IgZXhhbXBsZSwg
        dGhlcmUgaXMgbm8gbWFnaWMgaW52b2x2ZWQgZm9yIHRlc3QtY2FzZQogICAg
        ZGlzY292ZXJ5LgoKICAgICAgICAiQWdhaW4sIEkgY2FuJ3QgcHJhaXNlIGVu
        b3VnaCB0aGUgaWRlYSBvZiBhIHRlc3Rpbmcvc3BlY2luZwogICAgICAgICBm
        cmFtZXdvcmsgdGhhdCBJIGNhbiBhY3R1YWxseSByZWFkIGluIGZ1bGwgaW4g
        b25lIHNpdHRpbmchIgoKICAgICAgICAtLSBQaW90ciBTem90a293c2tpCiAg
        ZG93bmxvYWRzX2NvdW50OiA5MDE0MQogIG1ldGFkYXRhOiB7fQogIG51bWJl
        cjogMy4yLjAKICBzdW1tYXJ5OiBtaW5pdGVzdCBwcm92aWRlcyBhIGNvbXBs
        ZXRlIHN1aXRlIG9mIHRlc3RpbmcgZmFjaWxpdGllcyBzdXBwb3J0aW5nIFRE
        RCwKICAgIEJERCwgbW9ja2luZywgYW5kIGJlbmNobWFya2luZwogIHBsYXRm
        b3JtOiBydWJ5CiAgcnVieWdlbXNfdmVyc2lvbjogIj49IDAiCiAgcnVieV92
        ZXJzaW9uOiAKICBwcmVyZWxlYXNlOiBmYWxzZQogIGxpY2Vuc2VzOiAKICBy
        ZXF1aXJlbWVudHM6IAogIHNoYTogZDQwM2IxMWRiZDQ2NDJlY2UxNjlkNzk1
        OWMxZmZkOGUxMWYyOTY3MTU0OGNjZGVkNGMxYWIyNDk5MzBmOTUwMQotIGF1
        dGhvcnM6IFJ5YW4gRGF2aXMKICBidWlsdF9hdDogJzIwMTItMDYtMTNUMDA6
        MDA6MDAuMDAwWicKICBjcmVhdGVkX2F0OiAnMjAxMi0wNi0xM1QyMzoyODo0
        My44NjdaJwogIGRlc2NyaXB0aW9uOiB8LQogICAgbWluaXRlc3QgcHJvdmlk
        ZXMgYSBjb21wbGV0ZSBzdWl0ZSBvZiB0ZXN0aW5nIGZhY2lsaXRpZXMgc3Vw
        cG9ydGluZwogICAgVERELCBCREQsIG1vY2tpbmcsIGFuZCBiZW5jaG1hcmtp
        bmcuCgogICAgICAgICJJIGhhZCBhIGNsYXNzIHdpdGggSmltIFdlaXJpY2gg
        b24gdGVzdGluZyBsYXN0IHdlZWsgYW5kIHdlIHdlcmUKICAgICAgICAgYWxs
        b3dlZCB0byBjaG9vc2Ugb3VyIHRlc3RpbmcgZnJhbWV3b3Jrcy4gS2lyayBI
        YWluZXMgYW5kIEkgd2VyZQogICAgICAgICBwYWlyZWQgdXAgYW5kIHdlIGNy
        YWNrZWQgb3BlbiB0aGUgY29kZSBmb3IgYSBmZXcgdGVzdAogICAgICAgICBm
        cmFtZXdvcmtzLi4uCgogICAgICAgICBJIE1VU1Qgc2F5IHRoYXQgbWluaXRl
        c3QgaXMgKnZlcnkqIHJlYWRhYmxlIC8gdW5kZXJzdGFuZGFibGUKICAgICAg
        ICAgY29tcGFyZWQgdG8gdGhlICdvdGhlciB0d28nIG9wdGlvbnMgd2UgbG9v
        a2VkIGF0LiBOaWNlbHkgZG9uZSBhbmQKICAgICAgICAgdGhhbmsgeW91IGZv
        ciBoZWxwaW5nIHVzIGtlZXAgb3VyIG1lbnRhbCBzYW5pdHkuIgoKICAgICAg
        ICAtLSBXYXluZSBFLiBTZWd1aW4KCiAgICBtaW5pdGVzdC91bml0IGlzIGEg
        c21hbGwgYW5kIGluY3JlZGlibHkgZmFzdCB1bml0IHRlc3RpbmcgZnJhbWV3
        b3JrLgogICAgSXQgcHJvdmlkZXMgYSByaWNoIHNldCBvZiBhc3NlcnRpb25z
        IHRvIG1ha2UgeW91ciB0ZXN0cyBjbGVhbiBhbmQKICAgIHJlYWRhYmxlLgoK
        ICAgIG1pbml0ZXN0L3NwZWMgaXMgYSBmdW5jdGlvbmFsbHkgY29tcGxldGUg
        c3BlYyBlbmdpbmUuIEl0IGhvb2tzIG9udG8KICAgIG1pbml0ZXN0L3VuaXQg
        YW5kIHNlYW1sZXNzbHkgYnJpZGdlcyB0ZXN0IGFzc2VydGlvbnMgb3ZlciB0
        byBzcGVjCiAgICBleHBlY3RhdGlvbnMuCgogICAgbWluaXRlc3QvYmVuY2ht
        YXJrIGlzIGFuIGF3ZXNvbWUgd2F5IHRvIGFzc2VydCB0aGUgcGVyZm9ybWFu
        Y2Ugb2YgeW91cgogICAgYWxnb3JpdGhtcyBpbiBhIHJlcGVhdGFibGUgbWFu
        bmVyLiBOb3cgeW91IGNhbiBhc3NlcnQgdGhhdCB5b3VyIG5ld2IKICAgIGNv
        LXdvcmtlciBkb2Vzbid0IHJlcGxhY2UgeW91ciBsaW5lYXIgYWxnb3JpdGht
        IHdpdGggYW4gZXhwb25lbnRpYWwKICAgIG9uZSEKCiAgICBtaW5pdGVzdC9t
        b2NrIGJ5IFN0ZXZlbiBCYWtlciwgaXMgYSBiZWF1dGlmdWxseSB0aW55IG1v
        Y2sgKGFuZCBzdHViKQogICAgb2JqZWN0IGZyYW1ld29yay4KCiAgICBtaW5p
        dGVzdC9wcmlkZSBzaG93cyBwcmlkZSBpbiB0ZXN0aW5nIGFuZCBhZGRzIGNv
        bG9yaW5nIHRvIHlvdXIgdGVzdAogICAgb3V0cHV0LiBJIGd1ZXNzIGl0IGlz
        IGFuIGV4YW1wbGUgb2YgaG93IHRvIHdyaXRlIElPIHBpcGVzIHRvby4gOlAK
        CiAgICBtaW5pdGVzdC91bml0IGlzIG1lYW50IHRvIGhhdmUgYSBjbGVhbiBp
        bXBsZW1lbnRhdGlvbiBmb3IgbGFuZ3VhZ2UKICAgIGltcGxlbWVudG9ycyB0
        aGF0IG5lZWQgYSBtaW5pbWFsIHNldCBvZiBtZXRob2RzIHRvIGJvb3RzdHJh
        cCBhIHdvcmtpbmcKICAgIHRlc3Qgc3VpdGUuIEZvciBleGFtcGxlLCB0aGVy
        ZSBpcyBubyBtYWdpYyBpbnZvbHZlZCBmb3IgdGVzdC1jYXNlCiAgICBkaXNj
        b3ZlcnkuCgogICAgICAgICJBZ2FpbiwgSSBjYW4ndCBwcmFpc2UgZW5vdWdo
        IHRoZSBpZGVhIG9mIGEgdGVzdGluZy9zcGVjaW5nCiAgICAgICAgIGZyYW1l
        d29yayB0aGF0IEkgY2FuIGFjdHVhbGx5IHJlYWQgaW4gZnVsbCBpbiBvbmUg
        c2l0dGluZyEiCgogICAgICAgIC0tIFBpb3RyIFN6b3Rrb3dza2kKICBkb3du
        bG9hZHNfY291bnQ6IDE1MTA5NwogIG1ldGFkYXRhOiB7fQogIG51bWJlcjog
        My4xLjAKICBzdW1tYXJ5OiBtaW5pdGVzdCBwcm92aWRlcyBhIGNvbXBsZXRl
        IHN1aXRlIG9mIHRlc3RpbmcgZmFjaWxpdGllcyBzdXBwb3J0aW5nIFRERCwK
        ICAgIEJERCwgbW9ja2luZywgYW5kIGJlbmNobWFya2luZwogIHBsYXRmb3Jt
        OiBydWJ5CiAgcnVieWdlbXNfdmVyc2lvbjogIj49IDAiCiAgcnVieV92ZXJz
        aW9uOiAKICBwcmVyZWxlYXNlOiBmYWxzZQogIGxpY2Vuc2VzOiAKICByZXF1
        aXJlbWVudHM6IAogIHNoYTogNGE2NmU0OWZhMzMyZjIyNGNmZTg1ZmZhMjQy
        NDU4YjNhZjQ2NDI4YmE4ZTEwNzJhZjU4NDFkYzgzYTY5ZTkwYQotIGF1dGhv
        cnM6IFJ5YW4gRGF2aXMKICBidWlsdF9hdDogJzIwMTItMDUtMjRUMDA6MDA6
        MDAuMDAwWicKICBjcmVhdGVkX2F0OiAnMjAxMi0wNS0yNFQyMToxNDoyNy44
        MzBaJwogIGRlc2NyaXB0aW9uOiB8LQogICAgbWluaXRlc3QgcHJvdmlkZXMg
        YSBjb21wbGV0ZSBzdWl0ZSBvZiB0ZXN0aW5nIGZhY2lsaXRpZXMgc3VwcG9y
        dGluZwogICAgVERELCBCREQsIG1vY2tpbmcsIGFuZCBiZW5jaG1hcmtpbmcu
        CgogICAgICAgICJJIGhhZCBhIGNsYXNzIHdpdGggSmltIFdlaXJpY2ggb24g
        dGVzdGluZyBsYXN0IHdlZWsgYW5kIHdlIHdlcmUKICAgICAgICAgYWxsb3dl
        ZCB0byBjaG9vc2Ugb3VyIHRlc3RpbmcgZnJhbWV3b3Jrcy4gS2lyayBIYWlu
        ZXMgYW5kIEkgd2VyZQogICAgICAgICBwYWlyZWQgdXAgYW5kIHdlIGNyYWNr
        ZWQgb3BlbiB0aGUgY29kZSBmb3IgYSBmZXcgdGVzdAogICAgICAgICBmcmFt
        ZXdvcmtzLi4uCgogICAgICAgICBJIE1VU1Qgc2F5IHRoYXQgbWluaXRlc3Qg
        aXMgKnZlcnkqIHJlYWRhYmxlIC8gdW5kZXJzdGFuZGFibGUKICAgICAgICAg
        Y29tcGFyZWQgdG8gdGhlICdvdGhlciB0d28nIG9wdGlvbnMgd2UgbG9va2Vk
        IGF0LiBOaWNlbHkgZG9uZSBhbmQKICAgICAgICAgdGhhbmsgeW91IGZvciBo
        ZWxwaW5nIHVzIGtlZXAgb3VyIG1lbnRhbCBzYW5pdHkuIgoKICAgICAgICAt
        LSBXYXluZSBFLiBTZWd1aW4KCiAgICBtaW5pdGVzdC91bml0IGlzIGEgc21h
        bGwgYW5kIGluY3JlZGlibHkgZmFzdCB1bml0IHRlc3RpbmcgZnJhbWV3b3Jr
        LgogICAgSXQgcHJvdmlkZXMgYSByaWNoIHNldCBvZiBhc3NlcnRpb25zIHRv
        IG1ha2UgeW91ciB0ZXN0cyBjbGVhbiBhbmQKICAgIHJlYWRhYmxlLgoKICAg
        IG1pbml0ZXN0L3NwZWMgaXMgYSBmdW5jdGlvbmFsbHkgY29tcGxldGUgc3Bl
        YyBlbmdpbmUuIEl0IGhvb2tzIG9udG8KICAgIG1pbml0ZXN0L3VuaXQgYW5k
        IHNlYW1sZXNzbHkgYnJpZGdlcyB0ZXN0IGFzc2VydGlvbnMgb3ZlciB0byBz
        cGVjCiAgICBleHBlY3RhdGlvbnMuCgogICAgbWluaXRlc3QvYmVuY2htYXJr
        IGlzIGFuIGF3ZXNvbWUgd2F5IHRvIGFzc2VydCB0aGUgcGVyZm9ybWFuY2Ug
        b2YgeW91cgogICAgYWxnb3JpdGhtcyBpbiBhIHJlcGVhdGFibGUgbWFubmVy
        LiBOb3cgeW91IGNhbiBhc3NlcnQgdGhhdCB5b3VyIG5ld2IKICAgIGNvLXdv
        cmtlciBkb2Vzbid0IHJlcGxhY2UgeW91ciBsaW5lYXIgYWxnb3JpdGhtIHdp
        dGggYW4gZXhwb25lbnRpYWwKICAgIG9uZSEKCiAgICBtaW5pdGVzdC9tb2Nr
        IGJ5IFN0ZXZlbiBCYWtlciwgaXMgYSBiZWF1dGlmdWxseSB0aW55IG1vY2sg
        KGFuZCBzdHViKQogICAgb2JqZWN0IGZyYW1ld29yay4KCiAgICBtaW5pdGVz
        dC9wcmlkZSBzaG93cyBwcmlkZSBpbiB0ZXN0aW5nIGFuZCBhZGRzIGNvbG9y
        aW5nIHRvIHlvdXIgdGVzdAogICAgb3V0cHV0LiBJIGd1ZXNzIGl0IGlzIGFu
        IGV4YW1wbGUgb2YgaG93IHRvIHdyaXRlIElPIHBpcGVzIHRvby4gOlAKCiAg
        ICBtaW5pdGVzdC91bml0IGlzIG1lYW50IHRvIGhhdmUgYSBjbGVhbiBpbXBs
        ZW1lbnRhdGlvbiBmb3IgbGFuZ3VhZ2UKICAgIGltcGxlbWVudG9ycyB0aGF0
        IG5lZWQgYSBtaW5pbWFsIHNldCBvZiBtZXRob2RzIHRvIGJvb3RzdHJhcCBh
        IHdvcmtpbmcKICAgIHRlc3Qgc3VpdGUuIEZvciBleGFtcGxlLCB0aGVyZSBp
        cyBubyBtYWdpYyBpbnZvbHZlZCBmb3IgdGVzdC1jYXNlCiAgICBkaXNjb3Zl
        cnkuCgogICAgICAgICJBZ2FpbiwgSSBjYW4ndCBwcmFpc2UgZW5vdWdoIHRo
        ZSBpZGVhIG9mIGEgdGVzdGluZy9zcGVjaW5nCiAgICAgICAgIGZyYW1ld29y
        ayB0aGF0IEkgY2FuIGFjdHVhbGx5IHJlYWQgaW4gZnVsbCBpbiBvbmUgc2l0
        dGluZyEiCgogICAgICAgIC0tIFBpb3RyIFN6b3Rrb3dza2kKICBkb3dubG9h
        ZHNfY291bnQ6IDI3OTE0OAogIG1ldGFkYXRhOiB7fQogIG51bWJlcjogMy4w
        LjEKICBzdW1tYXJ5OiBtaW5pdGVzdCBwcm92aWRlcyBhIGNvbXBsZXRlIHN1
        aXRlIG9mIHRlc3RpbmcgZmFjaWxpdGllcyBzdXBwb3J0aW5nIFRERCwKICAg
        IEJERCwgbW9ja2luZywgYW5kIGJlbmNobWFya2luZwogIHBsYXRmb3JtOiBy
        dWJ5CiAgcnVieWdlbXNfdmVyc2lvbjogIj49IDAiCiAgcnVieV92ZXJzaW9u
        OiAKICBwcmVyZWxlYXNlOiBmYWxzZQogIGxpY2Vuc2VzOiAKICByZXF1aXJl
        bWVudHM6IAogIHNoYTogY2YwOTQ3MmNjZDhmYzcyNTcxNzc5NWI4N2RlMGI0
        Y2UyZmEzNzVhMzE3ODU4MTc1OGJkMjQ3NWEwNGQzNmI0OAotIGF1dGhvcnM6
        IFJ5YW4gRGF2aXMKICBidWlsdF9hdDogJzIwMTItMDUtMDlUMDA6MDA6MDAu
        MDAwWicKICBjcmVhdGVkX2F0OiAnMjAxMi0wNS0wOVQwMzozNjo1My45NzBa
        JwogIGRlc2NyaXB0aW9uOiB8LQogICAgbWluaXRlc3QgcHJvdmlkZXMgYSBj
        b21wbGV0ZSBzdWl0ZSBvZiB0ZXN0aW5nIGZhY2lsaXRpZXMgc3VwcG9ydGlu
        ZwogICAgVERELCBCREQsIG1vY2tpbmcsIGFuZCBiZW5jaG1hcmtpbmcuCgog
        ICAgICAgICJJIGhhZCBhIGNsYXNzIHdpdGggSmltIFdlaXJpY2ggb24gdGVz
        dGluZyBsYXN0IHdlZWsgYW5kIHdlIHdlcmUKICAgICAgICAgYWxsb3dlZCB0
        byBjaG9vc2Ugb3VyIHRlc3RpbmcgZnJhbWV3b3Jrcy4gS2lyayBIYWluZXMg
        YW5kIEkgd2VyZQogICAgICAgICBwYWlyZWQgdXAgYW5kIHdlIGNyYWNrZWQg
        b3BlbiB0aGUgY29kZSBmb3IgYSBmZXcgdGVzdAogICAgICAgICBmcmFtZXdv
        cmtzLi4uCgogICAgICAgICBJIE1VU1Qgc2F5IHRoYXQgbWluaXRlc3QgaXMg
        KnZlcnkqIHJlYWRhYmxlIC8gdW5kZXJzdGFuZGFibGUKICAgICAgICAgY29t
        cGFyZWQgdG8gdGhlICdvdGhlciB0d28nIG9wdGlvbnMgd2UgbG9va2VkIGF0
        LiBOaWNlbHkgZG9uZSBhbmQKICAgICAgICAgdGhhbmsgeW91IGZvciBoZWxw
        aW5nIHVzIGtlZXAgb3VyIG1lbnRhbCBzYW5pdHkuIgoKICAgICAgICAtLSBX
        YXluZSBFLiBTZWd1aW4KCiAgICBtaW5pdGVzdC91bml0IGlzIGEgc21hbGwg
        YW5kIGluY3JlZGlibHkgZmFzdCB1bml0IHRlc3RpbmcgZnJhbWV3b3JrLgog
        ICAgSXQgcHJvdmlkZXMgYSByaWNoIHNldCBvZiBhc3NlcnRpb25zIHRvIG1h
        a2UgeW91ciB0ZXN0cyBjbGVhbiBhbmQKICAgIHJlYWRhYmxlLgoKICAgIG1p
        bml0ZXN0L3NwZWMgaXMgYSBmdW5jdGlvbmFsbHkgY29tcGxldGUgc3BlYyBl
        bmdpbmUuIEl0IGhvb2tzIG9udG8KICAgIG1pbml0ZXN0L3VuaXQgYW5kIHNl
        YW1sZXNzbHkgYnJpZGdlcyB0ZXN0IGFzc2VydGlvbnMgb3ZlciB0byBzcGVj
        CiAgICBleHBlY3RhdGlvbnMuCgogICAgbWluaXRlc3QvYmVuY2htYXJrIGlz
        IGFuIGF3ZXNvbWUgd2F5IHRvIGFzc2VydCB0aGUgcGVyZm9ybWFuY2Ugb2Yg
        eW91cgogICAgYWxnb3JpdGhtcyBpbiBhIHJlcGVhdGFibGUgbWFubmVyLiBO
        b3cgeW91IGNhbiBhc3NlcnQgdGhhdCB5b3VyIG5ld2IKICAgIGNvLXdvcmtl
        ciBkb2Vzbid0IHJlcGxhY2UgeW91ciBsaW5lYXIgYWxnb3JpdGhtIHdpdGgg
        YW4gZXhwb25lbnRpYWwKICAgIG9uZSEKCiAgICBtaW5pdGVzdC9tb2NrIGJ5
        IFN0ZXZlbiBCYWtlciwgaXMgYSBiZWF1dGlmdWxseSB0aW55IG1vY2sgKGFu
        ZCBzdHViKQogICAgb2JqZWN0IGZyYW1ld29yay4KCiAgICBtaW5pdGVzdC9w
        cmlkZSBzaG93cyBwcmlkZSBpbiB0ZXN0aW5nIGFuZCBhZGRzIGNvbG9yaW5n
        IHRvIHlvdXIgdGVzdAogICAgb3V0cHV0LiBJIGd1ZXNzIGl0IGlzIGFuIGV4
        YW1wbGUgb2YgaG93IHRvIHdyaXRlIElPIHBpcGVzIHRvby4gOlAKCiAgICBt
        aW5pdGVzdC91bml0IGlzIG1lYW50IHRvIGhhdmUgYSBjbGVhbiBpbXBsZW1l
        bnRhdGlvbiBmb3IgbGFuZ3VhZ2UKICAgIGltcGxlbWVudG9ycyB0aGF0IG5l
        ZWQgYSBtaW5pbWFsIHNldCBvZiBtZXRob2RzIHRvIGJvb3RzdHJhcCBhIHdv
        cmtpbmcKICAgIHRlc3Qgc3VpdGUuIEZvciBleGFtcGxlLCB0aGVyZSBpcyBu
        byBtYWdpYyBpbnZvbHZlZCBmb3IgdGVzdC1jYXNlCiAgICBkaXNjb3Zlcnku
        CgogICAgICAgICJBZ2FpbiwgSSBjYW4ndCBwcmFpc2UgZW5vdWdoIHRoZSBp
        ZGVhIG9mIGEgdGVzdGluZy9zcGVjaW5nCiAgICAgICAgIGZyYW1ld29yayB0
        aGF0IEkgY2FuIGFjdHVhbGx5IHJlYWQgaW4gZnVsbCBpbiBvbmUgc2l0dGlu
        ZyEiCgogICAgICAgIC0tIFBpb3RyIFN6b3Rrb3dza2kKICBkb3dubG9hZHNf
        Y291bnQ6IDI5MzQ4CiAgbWV0YWRhdGE6IHt9CiAgbnVtYmVyOiAzLjAuMAog
        IHN1bW1hcnk6IG1pbml0ZXN0IHByb3ZpZGVzIGEgY29tcGxldGUgc3VpdGUg
        b2YgdGVzdGluZyBmYWNpbGl0aWVzIHN1cHBvcnRpbmcgVERELAogICAgQkRE
        LCBtb2NraW5nLCBhbmQgYmVuY2htYXJraW5nCiAgcGxhdGZvcm06IHJ1YnkK
        ICBydWJ5Z2Vtc192ZXJzaW9uOiAiPj0gMCIKICBydWJ5X3ZlcnNpb246IAog
        IHByZXJlbGVhc2U6IGZhbHNlCiAgbGljZW5zZXM6IAogIHJlcXVpcmVtZW50
        czogCiAgc2hhOiA1NmM3YmZlYmNhOWZlZDM1MTBlNjQ3ODA4YzE0Zjg2MWQw
        MDg3Y2RiYTFmZjhkYzczMzVjMWRjZDIzNmM3YWJmCi0gYXV0aG9yczogUnlh
        biBEYXZpcwogIGJ1aWx0X2F0OiAnMjAxMi0wNC0xMVQwMDowMDowMC4wMDBa
        JwogIGNyZWF0ZWRfYXQ6ICcyMDEyLTA0LTExVDAzOjM1OjEyLjE2N1onCiAg
        ZGVzY3JpcHRpb246IHwtCiAgICBtaW5pdGVzdCBwcm92aWRlcyBhIGNvbXBs
        ZXRlIHN1aXRlIG9mIHRlc3RpbmcgZmFjaWxpdGllcyBzdXBwb3J0aW5nCiAg
        ICBUREQsIEJERCwgbW9ja2luZywgYW5kIGJlbmNobWFya2luZy4KCiAgICAg
        ICAgIkkgaGFkIGEgY2xhc3Mgd2l0aCBKaW0gV2VpcmljaCBvbiB0ZXN0aW5n
        IGxhc3Qgd2VlayBhbmQgd2Ugd2VyZQogICAgICAgICBhbGxvd2VkIHRvIGNo
        b29zZSBvdXIgdGVzdGluZyBmcmFtZXdvcmtzLiBLaXJrIEhhaW5lcyBhbmQg
        SSB3ZXJlCiAgICAgICAgIHBhaXJlZCB1cCBhbmQgd2UgY3JhY2tlZCBvcGVu
        IHRoZSBjb2RlIGZvciBhIGZldyB0ZXN0CiAgICAgICAgIGZyYW1ld29ya3Mu
        Li4KCiAgICAgICAgIEkgTVVTVCBzYXkgdGhhdCBtaW5pdGVzdCBpcyAqdmVy
        eSogcmVhZGFibGUgLyB1bmRlcnN0YW5kYWJsZQogICAgICAgICBjb21wYXJl
        ZCB0byB0aGUgJ290aGVyIHR3bycgb3B0aW9ucyB3ZSBsb29rZWQgYXQuIE5p
        Y2VseSBkb25lIGFuZAogICAgICAgICB0aGFuayB5b3UgZm9yIGhlbHBpbmcg
        dXMga2VlcCBvdXIgbWVudGFsIHNhbml0eS4iCgogICAgICAgIC0tIFdheW5l
        IEUuIFNlZ3VpbgoKICAgIG1pbml0ZXN0L3VuaXQgaXMgYSBzbWFsbCBhbmQg
        aW5jcmVkaWJseSBmYXN0IHVuaXQgdGVzdGluZyBmcmFtZXdvcmsuCiAgICBJ
        dCBwcm92aWRlcyBhIHJpY2ggc2V0IG9mIGFzc2VydGlvbnMgdG8gbWFrZSB5
        b3VyIHRlc3RzIGNsZWFuIGFuZAogICAgcmVhZGFibGUuCgogICAgbWluaXRl
        c3Qvc3BlYyBpcyBhIGZ1bmN0aW9uYWxseSBjb21wbGV0ZSBzcGVjIGVuZ2lu
        ZS4gSXQgaG9va3Mgb250bwogICAgbWluaXRlc3QvdW5pdCBhbmQgc2VhbWxl
        c3NseSBicmlkZ2VzIHRlc3QgYXNzZXJ0aW9ucyBvdmVyIHRvIHNwZWMKICAg
        IGV4cGVjdGF0aW9ucy4KCiAgICBtaW5pdGVzdC9iZW5jaG1hcmsgaXMgYW4g
        YXdlc29tZSB3YXkgdG8gYXNzZXJ0IHRoZSBwZXJmb3JtYW5jZSBvZiB5b3Vy
        CiAgICBhbGdvcml0aG1zIGluIGEgcmVwZWF0YWJsZSBtYW5uZXIuIE5vdyB5
        b3UgY2FuIGFzc2VydCB0aGF0IHlvdXIgbmV3YgogICAgY28td29ya2VyIGRv
        ZXNuJ3QgcmVwbGFjZSB5b3VyIGxpbmVhciBhbGdvcml0aG0gd2l0aCBhbiBl
        eHBvbmVudGlhbAogICAgb25lIQoKICAgIG1pbml0ZXN0L21vY2sgYnkgU3Rl
        dmVuIEJha2VyLCBpcyBhIGJlYXV0aWZ1bGx5IHRpbnkgbW9jayBvYmplY3QK
        ICAgIGZyYW1ld29yay4KCiAgICBtaW5pdGVzdC9wcmlkZSBzaG93cyBwcmlk
        ZSBpbiB0ZXN0aW5nIGFuZCBhZGRzIGNvbG9yaW5nIHRvIHlvdXIgdGVzdAog
        ICAgb3V0cHV0LiBJIGd1ZXNzIGl0IGlzIGFuIGV4YW1wbGUgb2YgaG93IHRv
        IHdyaXRlIElPIHBpcGVzIHRvby4gOlAKCiAgICBtaW5pdGVzdC91bml0IGlz
        IG1lYW50IHRvIGhhdmUgYSBjbGVhbiBpbXBsZW1lbnRhdGlvbiBmb3IgbGFu
        Z3VhZ2UKICAgIGltcGxlbWVudG9ycyB0aGF0IG5lZWQgYSBtaW5pbWFsIHNl
        dCBvZiBtZXRob2RzIHRvIGJvb3RzdHJhcCBhIHdvcmtpbmcKICAgIHRlc3Qg
        c3VpdGUuIEZvciBleGFtcGxlLCB0aGVyZSBpcyBubyBtYWdpYyBpbnZvbHZl
        ZCBmb3IgdGVzdC1jYXNlCiAgICBkaXNjb3ZlcnkuCgogICAgICAgICJBZ2Fp
        biwgSSBjYW4ndCBwcmFpc2UgZW5vdWdoIHRoZSBpZGVhIG9mIGEgdGVzdGlu
        Zy9zcGVjaW5nCiAgICAgICAgIGZyYW1ld29yayB0aGF0IEkgY2FuIGFjdHVh
        bGx5IHJlYWQgaW4gZnVsbCBpbiBvbmUgc2l0dGluZyEiCgogICAgICAgIC0t
        IFBpb3RyIFN6b3Rrb3dza2kKICBkb3dubG9hZHNfY291bnQ6IDExMTM0NQog
        IG1ldGFkYXRhOiB7fQogIG51bWJlcjogMi4xMi4xCiAgc3VtbWFyeTogbWlu
        aXRlc3QgcHJvdmlkZXMgYSBjb21wbGV0ZSBzdWl0ZSBvZiB0ZXN0aW5nIGZh
        Y2lsaXRpZXMgc3VwcG9ydGluZyBUREQsCiAgICBCREQsIG1vY2tpbmcsIGFu
        ZCBiZW5jaG1hcmtpbmcKICBwbGF0Zm9ybTogcnVieQogIHJ1YnlnZW1zX3Zl
        cnNpb246ICI+PSAwIgogIHJ1YnlfdmVyc2lvbjogCiAgcHJlcmVsZWFzZTog
        ZmFsc2UKICBsaWNlbnNlczogCiAgcmVxdWlyZW1lbnRzOiAKICBzaGE6IGUz
        NzA2OTFkZTYwMjZjZDdjMGY3YTExZDA5NDJlZTI5NTAyY2JlZDQzMTY5ODNk
        NTI4MTk0ODRlMmFiYzRlOWMKLSBhdXRob3JzOiBSeWFuIERhdmlzCiAgYnVp
        bHRfYXQ6ICcyMDEyLTA0LTA0VDAwOjAwOjAwLjAwMFonCiAgY3JlYXRlZF9h
        dDogJzIwMTItMDQtMDRUMDM6MDA6MTEuNTUwWicKICBkZXNjcmlwdGlvbjog
        fC0KICAgIG1pbml0ZXN0IHByb3ZpZGVzIGEgY29tcGxldGUgc3VpdGUgb2Yg
        dGVzdGluZyBmYWNpbGl0aWVzIHN1cHBvcnRpbmcKICAgIFRERCwgQkRELCBt
        b2NraW5nLCBhbmQgYmVuY2htYXJraW5nLgoKICAgICAgICAiSSBoYWQgYSBj
        bGFzcyB3aXRoIEppbSBXZWlyaWNoIG9uIHRlc3RpbmcgbGFzdCB3ZWVrIGFu
        ZCB3ZSB3ZXJlCiAgICAgICAgIGFsbG93ZWQgdG8gY2hvb3NlIG91ciB0ZXN0
        aW5nIGZyYW1ld29ya3MuIEtpcmsgSGFpbmVzIGFuZCBJIHdlcmUKICAgICAg
        ICAgcGFpcmVkIHVwIGFuZCB3ZSBjcmFja2VkIG9wZW4gdGhlIGNvZGUgZm9y
        IGEgZmV3IHRlc3QKICAgICAgICAgZnJhbWV3b3Jrcy4uLgoKICAgICAgICAg
        SSBNVVNUIHNheSB0aGF0IG1pbml0ZXN0IGlzICp2ZXJ5KiByZWFkYWJsZSAv
        IHVuZGVyc3RhbmRhYmxlCiAgICAgICAgIGNvbXBhcmVkIHRvIHRoZSAnb3Ro
        ZXIgdHdvJyBvcHRpb25zIHdlIGxvb2tlZCBhdC4gTmljZWx5IGRvbmUgYW5k
        CiAgICAgICAgIHRoYW5rIHlvdSBmb3IgaGVscGluZyB1cyBrZWVwIG91ciBt
        ZW50YWwgc2FuaXR5LiIKCiAgICAgICAgLS0gV2F5bmUgRS4gU2VndWluCgog
        ICAgbWluaXRlc3QvdW5pdCBpcyBhIHNtYWxsIGFuZCBpbmNyZWRpYmx5IGZh
        c3QgdW5pdCB0ZXN0aW5nIGZyYW1ld29yay4KICAgIEl0IHByb3ZpZGVzIGEg
        cmljaCBzZXQgb2YgYXNzZXJ0aW9ucyB0byBtYWtlIHlvdXIgdGVzdHMgY2xl
        YW4gYW5kCiAgICByZWFkYWJsZS4KCiAgICBtaW5pdGVzdC9zcGVjIGlzIGEg
        ZnVuY3Rpb25hbGx5IGNvbXBsZXRlIHNwZWMgZW5naW5lLiBJdCBob29rcyBv
        bnRvCiAgICBtaW5pdGVzdC91bml0IGFuZCBzZWFtbGVzc2x5IGJyaWRnZXMg
        dGVzdCBhc3NlcnRpb25zIG92ZXIgdG8gc3BlYwogICAgZXhwZWN0YXRpb25z
        LgoKICAgIG1pbml0ZXN0L2JlbmNobWFyayBpcyBhbiBhd2Vzb21lIHdheSB0
        byBhc3NlcnQgdGhlIHBlcmZvcm1hbmNlIG9mIHlvdXIKICAgIGFsZ29yaXRo
        bXMgaW4gYSByZXBlYXRhYmxlIG1hbm5lci4gTm93IHlvdSBjYW4gYXNzZXJ0
        IHRoYXQgeW91ciBuZXdiCiAgICBjby13b3JrZXIgZG9lc24ndCByZXBsYWNl
        IHlvdXIgbGluZWFyIGFsZ29yaXRobSB3aXRoIGFuIGV4cG9uZW50aWFsCiAg
        ICBvbmUhCgogICAgbWluaXRlc3QvbW9jayBieSBTdGV2ZW4gQmFrZXIsIGlz
        IGEgYmVhdXRpZnVsbHkgdGlueSBtb2NrIG9iamVjdAogICAgZnJhbWV3b3Jr
        LgoKICAgIG1pbml0ZXN0L3ByaWRlIHNob3dzIHByaWRlIGluIHRlc3Rpbmcg
        YW5kIGFkZHMgY29sb3JpbmcgdG8geW91ciB0ZXN0CiAgICBvdXRwdXQuIEkg
        Z3Vlc3MgaXQgaXMgYW4gZXhhbXBsZSBvZiBob3cgdG8gd3JpdGUgSU8gcGlw
        ZXMgdG9vLiA6UAoKICAgIG1pbml0ZXN0L3VuaXQgaXMgbWVhbnQgdG8gaGF2
        ZSBhIGNsZWFuIGltcGxlbWVudGF0aW9uIGZvciBsYW5ndWFnZQogICAgaW1w
        bGVtZW50b3JzIHRoYXQgbmVlZCBhIG1pbmltYWwgc2V0IG9mIG1ldGhvZHMg
        dG8gYm9vdHN0cmFwIGEgd29ya2luZwogICAgdGVzdCBzdWl0ZS4gRm9yIGV4
        YW1wbGUsIHRoZXJlIGlzIG5vIG1hZ2ljIGludm9sdmVkIGZvciB0ZXN0LWNh
        c2UKICAgIGRpc2NvdmVyeS4KCiAgICAgICAgIkFnYWluLCBJIGNhbid0IHBy
        YWlzZSBlbm91Z2ggdGhlIGlkZWEgb2YgYSB0ZXN0aW5nL3NwZWNpbmcKICAg
        ICAgICAgZnJhbWV3b3JrIHRoYXQgSSBjYW4gYWN0dWFsbHkgcmVhZCBpbiBm
        dWxsIGluIG9uZSBzaXR0aW5nISIKCiAgICAgICAgLS0gUGlvdHIgU3pvdGtv
        d3NraQogIGRvd25sb2Fkc19jb3VudDogMTAxMDcKICBtZXRhZGF0YToge30K
        ICBudW1iZXI6IDIuMTIuMAogIHN1bW1hcnk6IG1pbml0ZXN0IHByb3ZpZGVz
        IGEgY29tcGxldGUgc3VpdGUgb2YgdGVzdGluZyBmYWNpbGl0aWVzIHN1cHBv
        cnRpbmcgVERELAogICAgQkRELCBtb2NraW5nLCBhbmQgYmVuY2htYXJraW5n
        CiAgcGxhdGZvcm06IHJ1YnkKICBydWJ5Z2Vtc192ZXJzaW9uOiAiPj0gMCIK
        ICBydWJ5X3ZlcnNpb246IAogIHByZXJlbGVhc2U6IGZhbHNlCiAgbGljZW5z
        ZXM6IAogIHJlcXVpcmVtZW50czogCiAgc2hhOiAyMzc0MTA0ZWVlYWEwYmJl
        ZTI3OTNiYTEzOGRmYWMzY2FjMTI3MDhlNTBkMGRiNDAzZDlkOTQwZmNhYzQ4
        ZjI5Ci0gYXV0aG9yczogUnlhbiBEYXZpcwogIGJ1aWx0X2F0OiAnMjAxMi0w
        My0yMVQwMDowMDowMC4wMDBaJwogIGNyZWF0ZWRfYXQ6ICcyMDEyLTAzLTIx
        VDAwOjIzOjU5LjM0MlonCiAgZGVzY3JpcHRpb246IHwtCiAgICBtaW5pdGVz
        dCBwcm92aWRlcyBhIGNvbXBsZXRlIHN1aXRlIG9mIHRlc3RpbmcgZmFjaWxp
        dGllcyBzdXBwb3J0aW5nCiAgICBUREQsIEJERCwgbW9ja2luZywgYW5kIGJl
        bmNobWFya2luZy4KCiAgICAgICAgIkkgaGFkIGEgY2xhc3Mgd2l0aCBKaW0g
        V2VpcmljaCBvbiB0ZXN0aW5nIGxhc3Qgd2VlayBhbmQgd2Ugd2VyZQogICAg
        ICAgICBhbGxvd2VkIHRvIGNob29zZSBvdXIgdGVzdGluZyBmcmFtZXdvcmtz
        LiBLaXJrIEhhaW5lcyBhbmQgSSB3ZXJlCiAgICAgICAgIHBhaXJlZCB1cCBh
        bmQgd2UgY3JhY2tlZCBvcGVuIHRoZSBjb2RlIGZvciBhIGZldyB0ZXN0CiAg
        ICAgICAgIGZyYW1ld29ya3MuLi4KCiAgICAgICAgIEkgTVVTVCBzYXkgdGhh
        dCBtaW5pdGVzdCBpcyAqdmVyeSogcmVhZGFibGUgLyB1bmRlcnN0YW5kYWJs
        ZQogICAgICAgICBjb21wYXJlZCB0byB0aGUgJ290aGVyIHR3bycgb3B0aW9u
        cyB3ZSBsb29rZWQgYXQuIE5pY2VseSBkb25lIGFuZAogICAgICAgICB0aGFu
        ayB5b3UgZm9yIGhlbHBpbmcgdXMga2VlcCBvdXIgbWVudGFsIHNhbml0eS4i
        CgogICAgICAgIC0tIFdheW5lIEUuIFNlZ3VpbgoKICAgIG1pbml0ZXN0L3Vu
        aXQgaXMgYSBzbWFsbCBhbmQgaW5jcmVkaWJseSBmYXN0IHVuaXQgdGVzdGlu
        ZyBmcmFtZXdvcmsuCiAgICBJdCBwcm92aWRlcyBhIHJpY2ggc2V0IG9mIGFz
        c2VydGlvbnMgdG8gbWFrZSB5b3VyIHRlc3RzIGNsZWFuIGFuZAogICAgcmVh
        ZGFibGUuCgogICAgbWluaXRlc3Qvc3BlYyBpcyBhIGZ1bmN0aW9uYWxseSBj
        b21wbGV0ZSBzcGVjIGVuZ2luZS4gSXQgaG9va3Mgb250bwogICAgbWluaXRl
        c3QvdW5pdCBhbmQgc2VhbWxlc3NseSBicmlkZ2VzIHRlc3QgYXNzZXJ0aW9u
        cyBvdmVyIHRvIHNwZWMKICAgIGV4cGVjdGF0aW9ucy4KCiAgICBtaW5pdGVz
        dC9iZW5jaG1hcmsgaXMgYW4gYXdlc29tZSB3YXkgdG8gYXNzZXJ0IHRoZSBw
        ZXJmb3JtYW5jZSBvZiB5b3VyCiAgICBhbGdvcml0aG1zIGluIGEgcmVwZWF0
        YWJsZSBtYW5uZXIuIE5vdyB5b3UgY2FuIGFzc2VydCB0aGF0IHlvdXIgbmV3
        YgogICAgY28td29ya2VyIGRvZXNuJ3QgcmVwbGFjZSB5b3VyIGxpbmVhciBh
        bGdvcml0aG0gd2l0aCBhbiBleHBvbmVudGlhbAogICAgb25lIQoKICAgIG1p
        bml0ZXN0L21vY2sgYnkgU3RldmVuIEJha2VyLCBpcyBhIGJlYXV0aWZ1bGx5
        IHRpbnkgbW9jayBvYmplY3QKICAgIGZyYW1ld29yay4KCiAgICBtaW5pdGVz
        dC9wcmlkZSBzaG93cyBwcmlkZSBpbiB0ZXN0aW5nIGFuZCBhZGRzIGNvbG9y
        aW5nIHRvIHlvdXIgdGVzdAogICAgb3V0cHV0LiBJIGd1ZXNzIGl0IGlzIGFu
        IGV4YW1wbGUgb2YgaG93IHRvIHdyaXRlIElPIHBpcGVzIHRvby4gOlAKCiAg
        ICBtaW5pdGVzdC91bml0IGlzIG1lYW50IHRvIGhhdmUgYSBjbGVhbiBpbXBs
        ZW1lbnRhdGlvbiBmb3IgbGFuZ3VhZ2UKICAgIGltcGxlbWVudG9ycyB0aGF0
        IG5lZWQgYSBtaW5pbWFsIHNldCBvZiBtZXRob2RzIHRvIGJvb3RzdHJhcCBh
        IHdvcmtpbmcKICAgIHRlc3Qgc3VpdGUuIEZvciBleGFtcGxlLCB0aGVyZSBp
        cyBubyBtYWdpYyBpbnZvbHZlZCBmb3IgdGVzdC1jYXNlCiAgICBkaXNjb3Zl
        cnkuCgogICAgICAgICJBZ2FpbiwgSSBjYW4ndCBwcmFpc2UgZW5vdWdoIHRo
        ZSBpZGVhIG9mIGEgdGVzdGluZy9zcGVjaW5nCiAgICAgICAgIGZyYW1ld29y
        ayB0aGF0IEkgY2FuIGFjdHVhbGx5IHJlYWQgaW4gZnVsbCBpbiBvbmUgc2l0
        dGluZyEiCgogICAgICAgIC0tIFBpb3RyIFN6b3Rrb3dza2kKICBkb3dubG9h
        ZHNfY291bnQ6IDIwNjM1MwogIG1ldGFkYXRhOiB7fQogIG51bWJlcjogMi4x
        MS40CiAgc3VtbWFyeTogbWluaXRlc3QgcHJvdmlkZXMgYSBjb21wbGV0ZSBz
        dWl0ZSBvZiB0ZXN0aW5nIGZhY2lsaXRpZXMgc3VwcG9ydGluZyBUREQsCiAg
        ICBCREQsIG1vY2tpbmcsIGFuZCBiZW5jaG1hcmtpbmcKICBwbGF0Zm9ybTog
        cnVieQogIHJ1YnlnZW1zX3ZlcnNpb246ICI+PSAwIgogIHJ1YnlfdmVyc2lv
        bjogCiAgcHJlcmVsZWFzZTogZmFsc2UKICBsaWNlbnNlczogCiAgcmVxdWly
        ZW1lbnRzOiAKICBzaGE6IDU2Njk0NWViYzNiNTQxZDQyNDI5NDIzMzFjZWYy
        Y2QzZTlkMzNiNDA4ZGNmMzIxMjZmZmQyMDQyNTJlNjVmZmMKLSBhdXRob3Jz
        OiBSeWFuIERhdmlzCiAgYnVpbHRfYXQ6ICcyMDEyLTAzLTAxVDAwOjAwOjAw
        LjAwMFonCiAgY3JlYXRlZF9hdDogJzIwMTItMDMtMDFUMDU6MTQ6MjkuMzgy
        WicKICBkZXNjcmlwdGlvbjogfC0KICAgIG1pbml0ZXN0IHByb3ZpZGVzIGEg
        Y29tcGxldGUgc3VpdGUgb2YgdGVzdGluZyBmYWNpbGl0aWVzIHN1cHBvcnRp
        bmcKICAgIFRERCwgQkRELCBtb2NraW5nLCBhbmQgYmVuY2htYXJraW5nLgoK
        ICAgICAgICAiSSBoYWQgYSBjbGFzcyB3aXRoIEppbSBXZWlyaWNoIG9uIHRl
        c3RpbmcgbGFzdCB3ZWVrIGFuZCB3ZSB3ZXJlCiAgICAgICAgIGFsbG93ZWQg
        dG8gY2hvb3NlIG91ciB0ZXN0aW5nIGZyYW1ld29ya3MuIEtpcmsgSGFpbmVz
        IGFuZCBJIHdlcmUKICAgICAgICAgcGFpcmVkIHVwIGFuZCB3ZSBjcmFja2Vk
        IG9wZW4gdGhlIGNvZGUgZm9yIGEgZmV3IHRlc3QKICAgICAgICAgZnJhbWV3
        b3Jrcy4uLgoKICAgICAgICAgSSBNVVNUIHNheSB0aGF0IG1pbml0ZXN0IGlz
        ICp2ZXJ5KiByZWFkYWJsZSAvIHVuZGVyc3RhbmRhYmxlCiAgICAgICAgIGNv
        bXBhcmVkIHRvIHRoZSAnb3RoZXIgdHdvJyBvcHRpb25zIHdlIGxvb2tlZCBh
        dC4gTmljZWx5IGRvbmUgYW5kCiAgICAgICAgIHRoYW5rIHlvdSBmb3IgaGVs
        cGluZyB1cyBrZWVwIG91ciBtZW50YWwgc2FuaXR5LiIKCiAgICAgICAgLS0g
        V2F5bmUgRS4gU2VndWluCgogICAgbWluaXRlc3QvdW5pdCBpcyBhIHNtYWxs
        IGFuZCBpbmNyZWRpYmx5IGZhc3QgdW5pdCB0ZXN0aW5nIGZyYW1ld29yay4K
        ICAgIEl0IHByb3ZpZGVzIGEgcmljaCBzZXQgb2YgYXNzZXJ0aW9ucyB0byBt
        YWtlIHlvdXIgdGVzdHMgY2xlYW4gYW5kCiAgICByZWFkYWJsZS4KCiAgICBt
        aW5pdGVzdC9zcGVjIGlzIGEgZnVuY3Rpb25hbGx5IGNvbXBsZXRlIHNwZWMg
        ZW5naW5lLiBJdCBob29rcyBvbnRvCiAgICBtaW5pdGVzdC91bml0IGFuZCBz
        ZWFtbGVzc2x5IGJyaWRnZXMgdGVzdCBhc3NlcnRpb25zIG92ZXIgdG8gc3Bl
        YwogICAgZXhwZWN0YXRpb25zLgoKICAgIG1pbml0ZXN0L2JlbmNobWFyayBp
        cyBhbiBhd2Vzb21lIHdheSB0byBhc3NlcnQgdGhlIHBlcmZvcm1hbmNlIG9m
        IHlvdXIKICAgIGFsZ29yaXRobXMgaW4gYSByZXBlYXRhYmxlIG1hbm5lci4g
        Tm93IHlvdSBjYW4gYXNzZXJ0IHRoYXQgeW91ciBuZXdiCiAgICBjby13b3Jr
        ZXIgZG9lc24ndCByZXBsYWNlIHlvdXIgbGluZWFyIGFsZ29yaXRobSB3aXRo
        IGFuIGV4cG9uZW50aWFsCiAgICBvbmUhCgogICAgbWluaXRlc3QvbW9jayBi
        eSBTdGV2ZW4gQmFrZXIsIGlzIGEgYmVhdXRpZnVsbHkgdGlueSBtb2NrIG9i
        amVjdAogICAgZnJhbWV3b3JrLgoKICAgIG1pbml0ZXN0L3ByaWRlIHNob3dz
        IHByaWRlIGluIHRlc3RpbmcgYW5kIGFkZHMgY29sb3JpbmcgdG8geW91ciB0
        ZXN0CiAgICBvdXRwdXQuIEkgZ3Vlc3MgaXQgaXMgYW4gZXhhbXBsZSBvZiBo
        b3cgdG8gd3JpdGUgSU8gcGlwZXMgdG9vLiA6UAoKICAgIG1pbml0ZXN0L3Vu
        aXQgaXMgbWVhbnQgdG8gaGF2ZSBhIGNsZWFuIGltcGxlbWVudGF0aW9uIGZv
        ciBsYW5ndWFnZQogICAgaW1wbGVtZW50b3JzIHRoYXQgbmVlZCBhIG1pbmlt
        YWwgc2V0IG9mIG1ldGhvZHMgdG8gYm9vdHN0cmFwIGEgd29ya2luZwogICAg
        dGVzdCBzdWl0ZS4gRm9yIGV4YW1wbGUsIHRoZXJlIGlzIG5vIG1hZ2ljIGlu
        dm9sdmVkIGZvciB0ZXN0LWNhc2UKICAgIGRpc2NvdmVyeS4KCiAgICAgICAg
        IkFnYWluLCBJIGNhbid0IHByYWlzZSBlbm91Z2ggdGhlIGlkZWEgb2YgYSB0
        ZXN0aW5nL3NwZWNpbmcKICAgICAgICAgZnJhbWV3b3JrIHRoYXQgSSBjYW4g
        YWN0dWFsbHkgcmVhZCBpbiBmdWxsIGluIG9uZSBzaXR0aW5nISIKCiAgICAg
        ICAgLS0gUGlvdHIgU3pvdGtvd3NraQogIGRvd25sb2Fkc19jb3VudDogMjc2
        OTgKICBtZXRhZGF0YToge30KICBudW1iZXI6IDIuMTEuMwogIHN1bW1hcnk6
        IG1pbml0ZXN0IHByb3ZpZGVzIGEgY29tcGxldGUgc3VpdGUgb2YgdGVzdGlu
        ZyBmYWNpbGl0aWVzIHN1cHBvcnRpbmcgVERELAogICAgQkRELCBtb2NraW5n
        LCBhbmQgYmVuY2htYXJraW5nCiAgcGxhdGZvcm06IHJ1YnkKICBydWJ5Z2Vt
        c192ZXJzaW9uOiAiPj0gMCIKICBydWJ5X3ZlcnNpb246IAogIHByZXJlbGVh
        c2U6IGZhbHNlCiAgbGljZW5zZXM6IAogIHJlcXVpcmVtZW50czogCiAgc2hh
        OiBiODI2OTAyMDJlZmFhNWMzYTZhMjRlNmM3ZTM4NDI0NzRkMjA4NmQ5MDQx
        NmMwNmU4N2RjN2JiMjRiMGQxYTc3Ci0gYXV0aG9yczogUnlhbiBEYXZpcwog
        IGJ1aWx0X2F0OiAnMjAxMi0wMi0xNVQwMDowMDowMC4wMDBaJwogIGNyZWF0
        ZWRfYXQ6ICcyMDEyLTAyLTE1VDAxOjExOjA2LjgyOVonCiAgZGVzY3JpcHRp
        b246IHwtCiAgICBtaW5pdGVzdCBwcm92aWRlcyBhIGNvbXBsZXRlIHN1aXRl
        IG9mIHRlc3RpbmcgZmFjaWxpdGllcyBzdXBwb3J0aW5nCiAgICBUREQsIEJE
        RCwgbW9ja2luZywgYW5kIGJlbmNobWFya2luZy4KCiAgICAgICAgIkkgaGFk
        IGEgY2xhc3Mgd2l0aCBKaW0gV2VpcmljaCBvbiB0ZXN0aW5nIGxhc3Qgd2Vl
        ayBhbmQgd2Ugd2VyZQogICAgICAgICBhbGxvd2VkIHRvIGNob29zZSBvdXIg
        dGVzdGluZyBmcmFtZXdvcmtzLiBLaXJrIEhhaW5lcyBhbmQgSSB3ZXJlCiAg
        ICAgICAgIHBhaXJlZCB1cCBhbmQgd2UgY3JhY2tlZCBvcGVuIHRoZSBjb2Rl
        IGZvciBhIGZldyB0ZXN0CiAgICAgICAgIGZyYW1ld29ya3MuLi4KCiAgICAg
        ICAgIEkgTVVTVCBzYXkgdGhhdCBtaW50aWVzdCBpcyAqdmVyeSogcmVhZGFi
        bGUgLyB1bmRlcnN0YW5kYWJsZQogICAgICAgICBjb21wYXJlZCB0byB0aGUg
        J290aGVyIHR3bycgb3B0aW9ucyB3ZSBsb29rZWQgYXQuIE5pY2VseSBkb25l
        IGFuZAogICAgICAgICB0aGFuayB5b3UgZm9yIGhlbHBpbmcgdXMga2VlcCBv
        dXIgbWVudGFsIHNhbml0eS4iCgogICAgICAgIC0tIFdheW5lIEUuIFNlZ3Vp
        bgoKICAgIG1pbml0ZXN0L3VuaXQgaXMgYSBzbWFsbCBhbmQgaW5jcmVkaWJs
        eSBmYXN0IHVuaXQgdGVzdGluZyBmcmFtZXdvcmsuCiAgICBJdCBwcm92aWRl
        cyBhIHJpY2ggc2V0IG9mIGFzc2VydGlvbnMgdG8gbWFrZSB5b3VyIHRlc3Rz
        IGNsZWFuIGFuZAogICAgcmVhZGFibGUuCgogICAgbWluaXRlc3Qvc3BlYyBp
        cyBhIGZ1bmN0aW9uYWxseSBjb21wbGV0ZSBzcGVjIGVuZ2luZS4gSXQgaG9v
        a3Mgb250bwogICAgbWluaXRlc3QvdW5pdCBhbmQgc2VhbWxlc3NseSBicmlk
        Z2VzIHRlc3QgYXNzZXJ0aW9ucyBvdmVyIHRvIHNwZWMKICAgIGV4cGVjdGF0
        aW9ucy4KCiAgICBtaW5pdGVzdC9iZW5jaG1hcmsgaXMgYW4gYXdlc29tZSB3
        YXkgdG8gYXNzZXJ0IHRoZSBwZXJmb3JtYW5jZSBvZiB5b3VyCiAgICBhbGdv
        cml0aG1zIGluIGEgcmVwZWF0YWJsZSBtYW5uZXIuIE5vdyB5b3UgY2FuIGFz
        c2VydCB0aGF0IHlvdXIgbmV3YgogICAgY28td29ya2VyIGRvZXNuJ3QgcmVw
        bGFjZSB5b3VyIGxpbmVhciBhbGdvcml0aG0gd2l0aCBhbiBleHBvbmVudGlh
        bAogICAgb25lIQoKICAgIG1pbml0ZXN0L21vY2sgYnkgU3RldmVuIEJha2Vy
        LCBpcyBhIGJlYXV0aWZ1bGx5IHRpbnkgbW9jayBvYmplY3QKICAgIGZyYW1l
        d29yay4KCiAgICBtaW5pdGVzdC9wcmlkZSBzaG93cyBwcmlkZSBpbiB0ZXN0
        aW5nIGFuZCBhZGRzIGNvbG9yaW5nIHRvIHlvdXIgdGVzdAogICAgb3V0cHV0
        LiBJIGd1ZXNzIGl0IGlzIGFuIGV4YW1wbGUgb2YgaG93IHRvIHdyaXRlIElP
        IHBpcGVzIHRvby4gOlAKCiAgICBtaW5pdGVzdC91bml0IGlzIG1lYW50IHRv
        IGhhdmUgYSBjbGVhbiBpbXBsZW1lbnRhdGlvbiBmb3IgbGFuZ3VhZ2UKICAg
        IGltcGxlbWVudG9ycyB0aGF0IG5lZWQgYSBtaW5pbWFsIHNldCBvZiBtZXRo
        b2RzIHRvIGJvb3RzdHJhcCBhIHdvcmtpbmcKICAgIHRlc3Qgc3VpdGUuIEZv
        ciBleGFtcGxlLCB0aGVyZSBpcyBubyBtYWdpYyBpbnZvbHZlZCBmb3IgdGVz
        dC1jYXNlCiAgICBkaXNjb3ZlcnkuCgogICAgICAgICJBZ2FpbiwgSSBjYW4n
        dCBwcmFpc2UgZW5vdWdoIHRoZSBpZGVhIG9mIGEgdGVzdGluZy9zcGVjaW5n
        CiAgICAgICAgIGZyYW1ld29yayB0aGF0IEkgY2FuIGFjdHVhbGx5IHJlYWQg
        aW4gZnVsbCBpbiBvbmUgc2l0dGluZyEiCgogICAgICAgIC0tIFBpb3RyIFN6
        b3Rrb3dza2kKICBkb3dubG9hZHNfY291bnQ6IDI1NDIyCiAgbWV0YWRhdGE6
        IHt9CiAgbnVtYmVyOiAyLjExLjIKICBzdW1tYXJ5OiBtaW5pdGVzdCBwcm92
        aWRlcyBhIGNvbXBsZXRlIHN1aXRlIG9mIHRlc3RpbmcgZmFjaWxpdGllcyBz
        dXBwb3J0aW5nIFRERCwKICAgIEJERCwgbW9ja2luZywgYW5kIGJlbmNobWFy
        a2luZwogIHBsYXRmb3JtOiBydWJ5CiAgcnVieWdlbXNfdmVyc2lvbjogIj49
        IDAiCiAgcnVieV92ZXJzaW9uOiAKICBwcmVyZWxlYXNlOiBmYWxzZQogIGxp
        Y2Vuc2VzOiAKICByZXF1aXJlbWVudHM6IAogIHNoYTogMzc5MTgwOTRkOWNl
        ZTkxZmE0YTk1ZjNlNDI5Y2EyYzljNTQ5NjUwMWM1YjYzNzNkN2UzMzE4Mzgx
        Nzg4OWY2MwotIGF1dGhvcnM6IFJ5YW4gRGF2aXMKICBidWlsdF9hdDogJzIw
        MTItMDItMDFUMDA6MDA6MDAuMDAwWicKICBjcmVhdGVkX2F0OiAnMjAxMi0w
        Mi0wMVQyMjoyMzoxNC4wODJaJwogIGRlc2NyaXB0aW9uOiB8LQogICAgbWlu
        aXRlc3QgcHJvdmlkZXMgYSBjb21wbGV0ZSBzdWl0ZSBvZiB0ZXN0aW5nIGZh
        Y2lsaXRpZXMgc3VwcG9ydGluZwogICAgVERELCBCREQsIG1vY2tpbmcsIGFu
        ZCBiZW5jaG1hcmtpbmcuCgogICAgICAgICJJIGhhZCBhIGNsYXNzIHdpdGgg
        SmltIFdlaXJpY2ggb24gdGVzdGluZyBsYXN0IHdlZWsgYW5kIHdlIHdlcmUK
        ICAgICAgICAgYWxsb3dlZCB0byBjaG9vc2Ugb3VyIHRlc3RpbmcgZnJhbWV3
        b3Jrcy4gS2lyayBIYWluZXMgYW5kIEkgd2VyZQogICAgICAgICBwYWlyZWQg
        dXAgYW5kIHdlIGNyYWNrZWQgb3BlbiB0aGUgY29kZSBmb3IgYSBmZXcgdGVz
        dAogICAgICAgICBmcmFtZXdvcmtzLi4uCgogICAgICAgICBJIE1VU1Qgc2F5
        IHRoYXQgbWludGllc3QgaXMgKnZlcnkqIHJlYWRhYmxlIC8gdW5kZXJzdGFu
        ZGFibGUKICAgICAgICAgY29tcGFyZWQgdG8gdGhlICdvdGhlciB0d28nIG9w
        dGlvbnMgd2UgbG9va2VkIGF0LiBOaWNlbHkgZG9uZSBhbmQKICAgICAgICAg
        dGhhbmsgeW91IGZvciBoZWxwaW5nIHVzIGtlZXAgb3VyIG1lbnRhbCBzYW5p
        dHkuIgoKICAgICAgICAtLSBXYXluZSBFLiBTZWd1aW4KCiAgICBtaW5pdGVz
        dC91bml0IGlzIGEgc21hbGwgYW5kIGluY3JlZGlibHkgZmFzdCB1bml0IHRl
        c3RpbmcgZnJhbWV3b3JrLgogICAgSXQgcHJvdmlkZXMgYSByaWNoIHNldCBv
        ZiBhc3NlcnRpb25zIHRvIG1ha2UgeW91ciB0ZXN0cyBjbGVhbiBhbmQKICAg
        IHJlYWRhYmxlLgoKICAgIG1pbml0ZXN0L3NwZWMgaXMgYSBmdW5jdGlvbmFs
        bHkgY29tcGxldGUgc3BlYyBlbmdpbmUuIEl0IGhvb2tzIG9udG8KICAgIG1p
        bml0ZXN0L3VuaXQgYW5kIHNlYW1sZXNzbHkgYnJpZGdlcyB0ZXN0IGFzc2Vy
        dGlvbnMgb3ZlciB0byBzcGVjCiAgICBleHBlY3RhdGlvbnMuCgogICAgbWlu
        aXRlc3QvYmVuY2htYXJrIGlzIGFuIGF3ZXNvbWUgd2F5IHRvIGFzc2VydCB0
        aGUgcGVyZm9ybWFuY2Ugb2YgeW91cgogICAgYWxnb3JpdGhtcyBpbiBhIHJl
        cGVhdGFibGUgbWFubmVyLiBOb3cgeW91IGNhbiBhc3NlcnQgdGhhdCB5b3Vy
        IG5ld2IKICAgIGNvLXdvcmtlciBkb2Vzbid0IHJlcGxhY2UgeW91ciBsaW5l
        YXIgYWxnb3JpdGhtIHdpdGggYW4gZXhwb25lbnRpYWwKICAgIG9uZSEKCiAg
        ICBtaW5pdGVzdC9tb2NrIGJ5IFN0ZXZlbiBCYWtlciwgaXMgYSBiZWF1dGlm
        dWxseSB0aW55IG1vY2sgb2JqZWN0CiAgICBmcmFtZXdvcmsuCgogICAgbWlu
        aXRlc3QvcHJpZGUgc2hvd3MgcHJpZGUgaW4gdGVzdGluZyBhbmQgYWRkcyBj
        b2xvcmluZyB0byB5b3VyIHRlc3QKICAgIG91dHB1dC4gSSBndWVzcyBpdCBp
        cyBhbiBleGFtcGxlIG9mIGhvdyB0byB3cml0ZSBJTyBwaXBlcyB0b28uIDpQ
        CgogICAgbWluaXRlc3QvdW5pdCBpcyBtZWFudCB0byBoYXZlIGEgY2xlYW4g
        aW1wbGVtZW50YXRpb24gZm9yIGxhbmd1YWdlCiAgICBpbXBsZW1lbnRvcnMg
        dGhhdCBuZWVkIGEgbWluaW1hbCBzZXQgb2YgbWV0aG9kcyB0byBib290c3Ry
        YXAgYSB3b3JraW5nCiAgICB0ZXN0IHN1aXRlLiBGb3IgZXhhbXBsZSwgdGhl
        cmUgaXMgbm8gbWFnaWMgaW52b2x2ZWQgZm9yIHRlc3QtY2FzZQogICAgZGlz
        Y292ZXJ5LgoKICAgICAgICAiQWdhaW4sIEkgY2FuJ3QgcHJhaXNlIGVub3Vn
        aCB0aGUgaWRlYSBvZiBhIHRlc3Rpbmcvc3BlY2luZwogICAgICAgICBmcmFt
        ZXdvcmsgdGhhdCBJIGNhbiBhY3R1YWxseSByZWFkIGluIGZ1bGwgaW4gb25l
        IHNpdHRpbmchIgoKICAgICAgICAtLSBQaW90ciBTem90a293c2tpCiAgZG93
        bmxvYWRzX2NvdW50OiAyNzc0NgogIG1ldGFkYXRhOiB7fQogIG51bWJlcjog
        Mi4xMS4xCiAgc3VtbWFyeTogbWluaXRlc3QgcHJvdmlkZXMgYSBjb21wbGV0
        ZSBzdWl0ZSBvZiB0ZXN0aW5nIGZhY2lsaXRpZXMgc3VwcG9ydGluZyBUREQs
        CiAgICBCREQsIG1vY2tpbmcsIGFuZCBiZW5jaG1hcmtpbmcKICBwbGF0Zm9y
        bTogcnVieQogIHJ1YnlnZW1zX3ZlcnNpb246ICI+PSAwIgogIHJ1YnlfdmVy
        c2lvbjogCiAgcHJlcmVsZWFzZTogZmFsc2UKICBsaWNlbnNlczogCiAgcmVx
        dWlyZW1lbnRzOiAKICBzaGE6IGNiNTY0NDEzNDU0MmI1YWUyYTdlZGM4NWY3
        OTk3ZDFjZDI0Njc1OWE1NWQ3NWJmYTRmNjk1YjdjNTMzMjViYWIKLSBhdXRo
        b3JzOiBSeWFuIERhdmlzCiAgYnVpbHRfYXQ6ICcyMDEyLTAxLTI1VDAwOjAw
        OjAwLjAwMFonCiAgY3JlYXRlZF9hdDogJzIwMTItMDEtMjVUMDg6MDg6MjMu
        NzE2WicKICBkZXNjcmlwdGlvbjogfC0KICAgIG1pbml0ZXN0IHByb3ZpZGVz
        IGEgY29tcGxldGUgc3VpdGUgb2YgdGVzdGluZyBmYWNpbGl0aWVzIHN1cHBv
        cnRpbmcKICAgIFRERCwgQkRELCBtb2NraW5nLCBhbmQgYmVuY2htYXJraW5n
        LgoKICAgICAgICAiSSBoYWQgYSBjbGFzcyB3aXRoIEppbSBXZWlyaWNoIG9u
        IHRlc3RpbmcgbGFzdCB3ZWVrIGFuZCB3ZSB3ZXJlCiAgICAgICAgIGFsbG93
        ZWQgdG8gY2hvb3NlIG91ciB0ZXN0aW5nIGZyYW1ld29ya3MuIEtpcmsgSGFp
        bmVzIGFuZCBJIHdlcmUKICAgICAgICAgcGFpcmVkIHVwIGFuZCB3ZSBjcmFj
        a2VkIG9wZW4gdGhlIGNvZGUgZm9yIGEgZmV3IHRlc3QKICAgICAgICAgZnJh
        bWV3b3Jrcy4uLgoKICAgICAgICAgSSBNVVNUIHNheSB0aGF0IG1pbnRpZXN0
        IGlzICp2ZXJ5KiByZWFkYWJsZSAvIHVuZGVyc3RhbmRhYmxlCiAgICAgICAg
        IGNvbXBhcmVkIHRvIHRoZSAnb3RoZXIgdHdvJyBvcHRpb25zIHdlIGxvb2tl
        ZCBhdC4gTmljZWx5IGRvbmUgYW5kCiAgICAgICAgIHRoYW5rIHlvdSBmb3Ig
        aGVscGluZyB1cyBrZWVwIG91ciBtZW50YWwgc2FuaXR5LiIKCiAgICAgICAg
        LS0gV2F5bmUgRS4gU2VndWluCgogICAgbWluaXRlc3QvdW5pdCBpcyBhIHNt
        YWxsIGFuZCBpbmNyZWRpYmx5IGZhc3QgdW5pdCB0ZXN0aW5nIGZyYW1ld29y
        ay4KICAgIEl0IHByb3ZpZGVzIGEgcmljaCBzZXQgb2YgYXNzZXJ0aW9ucyB0
        byBtYWtlIHlvdXIgdGVzdHMgY2xlYW4gYW5kCiAgICByZWFkYWJsZS4KCiAg
        ICBtaW5pdGVzdC9zcGVjIGlzIGEgZnVuY3Rpb25hbGx5IGNvbXBsZXRlIHNw
        ZWMgZW5naW5lLiBJdCBob29rcyBvbnRvCiAgICBtaW5pdGVzdC91bml0IGFu
        ZCBzZWFtbGVzc2x5IGJyaWRnZXMgdGVzdCBhc3NlcnRpb25zIG92ZXIgdG8g
        c3BlYwogICAgZXhwZWN0YXRpb25zLgoKICAgIG1pbml0ZXN0L2JlbmNobWFy
        ayBpcyBhbiBhd2Vzb21lIHdheSB0byBhc3NlcnQgdGhlIHBlcmZvcm1hbmNl
        IG9mIHlvdXIKICAgIGFsZ29yaXRobXMgaW4gYSByZXBlYXRhYmxlIG1hbm5l
        ci4gTm93IHlvdSBjYW4gYXNzZXJ0IHRoYXQgeW91ciBuZXdiCiAgICBjby13
        b3JrZXIgZG9lc24ndCByZXBsYWNlIHlvdXIgbGluZWFyIGFsZ29yaXRobSB3
        aXRoIGFuIGV4cG9uZW50aWFsCiAgICBvbmUhCgogICAgbWluaXRlc3QvbW9j
        ayBieSBTdGV2ZW4gQmFrZXIsIGlzIGEgYmVhdXRpZnVsbHkgdGlueSBtb2Nr
        IG9iamVjdAogICAgZnJhbWV3b3JrLgoKICAgIG1pbml0ZXN0L3ByaWRlIHNo
        b3dzIHByaWRlIGluIHRlc3RpbmcgYW5kIGFkZHMgY29sb3JpbmcgdG8geW91
        ciB0ZXN0CiAgICBvdXRwdXQuIEkgZ3Vlc3MgaXQgaXMgYW4gZXhhbXBsZSBv
        ZiBob3cgdG8gd3JpdGUgSU8gcGlwZXMgdG9vLiA6UAoKICAgIG1pbml0ZXN0
        L3VuaXQgaXMgbWVhbnQgdG8gaGF2ZSBhIGNsZWFuIGltcGxlbWVudGF0aW9u
        IGZvciBsYW5ndWFnZQogICAgaW1wbGVtZW50b3JzIHRoYXQgbmVlZCBhIG1p
        bmltYWwgc2V0IG9mIG1ldGhvZHMgdG8gYm9vdHN0cmFwIGEgd29ya2luZwog
        ICAgdGVzdCBzdWl0ZS4gRm9yIGV4YW1wbGUsIHRoZXJlIGlzIG5vIG1hZ2lj
        IGludm9sdmVkIGZvciB0ZXN0LWNhc2UKICAgIGRpc2NvdmVyeS4KCiAgICAg
        ICAgIkFnYWluLCBJIGNhbid0IHByYWlzZSBlbm91Z2ggdGhlIGlkZWEgb2Yg
        YSB0ZXN0aW5nL3NwZWNpbmcKICAgICAgICAgZnJhbWV3b3JrIHRoYXQgSSBj
        YW4gYWN0dWFsbHkgcmVhZCBpbiBmdWxsIGluIG9uZSBzaXR0aW5nISIKCiAg
        ICAgICAgLS0gUGlvdHIgU3pvdGtvd3NraQogIGRvd25sb2Fkc19jb3VudDog
        MTU4MTAKICBtZXRhZGF0YToge30KICBudW1iZXI6IDIuMTEuMAogIHN1bW1h
        cnk6IG1pbml0ZXN0IHByb3ZpZGVzIGEgY29tcGxldGUgc3VpdGUgb2YgdGVz
        dGluZyBmYWNpbGl0aWVzIHN1cHBvcnRpbmcgVERELAogICAgQkRELCBtb2Nr
        aW5nLCBhbmQgYmVuY2htYXJraW5nCiAgcGxhdGZvcm06IHJ1YnkKICBydWJ5
        Z2Vtc192ZXJzaW9uOiAiPj0gMCIKICBydWJ5X3ZlcnNpb246IAogIHByZXJl
        bGVhc2U6IGZhbHNlCiAgbGljZW5zZXM6IAogIHJlcXVpcmVtZW50czogCiAg
        c2hhOiA2OTYxY2E1ZDBkZmY0OWQ0OGFmMDliNDMzMjBjMzJiMzQ3YmM0Yzdm
        MmFhMWVlZGU3MDdlNDhlMTQ1ZDc4ODgwCi0gYXV0aG9yczogUnlhbiBEYXZp
        cwogIGJ1aWx0X2F0OiAnMjAxMi0wMS0xOFQwMDowMDowMC4wMDBaJwogIGNy
        ZWF0ZWRfYXQ6ICcyMDEyLTAxLTE4VDAwOjE3OjQwLjcxMFonCiAgZGVzY3Jp
        cHRpb246IHwtCiAgICBtaW5pdGVzdCBwcm92aWRlcyBhIGNvbXBsZXRlIHN1
        aXRlIG9mIHRlc3RpbmcgZmFjaWxpdGllcyBzdXBwb3J0aW5nCiAgICBUREQs
        IEJERCwgbW9ja2luZywgYW5kIGJlbmNobWFya2luZy4KCiAgICAgICAgIkkg
        aGFkIGEgY2xhc3Mgd2l0aCBKaW0gV2VpcmljaCBvbiB0ZXN0aW5nIGxhc3Qg
        d2VlayBhbmQgd2Ugd2VyZQogICAgICAgICBhbGxvd2VkIHRvIGNob29zZSBv
        dXIgdGVzdGluZyBmcmFtZXdvcmtzLiBLaXJrIEhhaW5lcyBhbmQgSSB3ZXJl
        CiAgICAgICAgIHBhaXJlZCB1cCBhbmQgd2UgY3JhY2tlZCBvcGVuIHRoZSBj
        b2RlIGZvciBhIGZldyB0ZXN0CiAgICAgICAgIGZyYW1ld29ya3MuLi4KCiAg
        ICAgICAgIEkgTVVTVCBzYXkgdGhhdCBtaW50aWVzdCBpcyAqdmVyeSogcmVh
        ZGFibGUgLyB1bmRlcnN0YW5kYWJsZQogICAgICAgICBjb21wYXJlZCB0byB0
        aGUgJ290aGVyIHR3bycgb3B0aW9ucyB3ZSBsb29rZWQgYXQuIE5pY2VseSBk
        b25lIGFuZAogICAgICAgICB0aGFuayB5b3UgZm9yIGhlbHBpbmcgdXMga2Vl
        cCBvdXIgbWVudGFsIHNhbml0eS4iCgogICAgICAgIC0tIFdheW5lIEUuIFNl
        Z3VpbgoKICAgIG1pbml0ZXN0L3VuaXQgaXMgYSBzbWFsbCBhbmQgaW5jcmVk
        aWJseSBmYXN0IHVuaXQgdGVzdGluZyBmcmFtZXdvcmsuCiAgICBJdCBwcm92
        aWRlcyBhIHJpY2ggc2V0IG9mIGFzc2VydGlvbnMgdG8gbWFrZSB5b3VyIHRl
        c3RzIGNsZWFuIGFuZAogICAgcmVhZGFibGUuCgogICAgbWluaXRlc3Qvc3Bl
        YyBpcyBhIGZ1bmN0aW9uYWxseSBjb21wbGV0ZSBzcGVjIGVuZ2luZS4gSXQg
        aG9va3Mgb250bwogICAgbWluaXRlc3QvdW5pdCBhbmQgc2VhbWxlc3NseSBi
        cmlkZ2VzIHRlc3QgYXNzZXJ0aW9ucyBvdmVyIHRvIHNwZWMKICAgIGV4cGVj
        dGF0aW9ucy4KCiAgICBtaW5pdGVzdC9iZW5jaG1hcmsgaXMgYW4gYXdlc29t
        ZSB3YXkgdG8gYXNzZXJ0IHRoZSBwZXJmb3JtYW5jZSBvZiB5b3VyCiAgICBh
        bGdvcml0aG1zIGluIGEgcmVwZWF0YWJsZSBtYW5uZXIuIE5vdyB5b3UgY2Fu
        IGFzc2VydCB0aGF0IHlvdXIgbmV3YgogICAgY28td29ya2VyIGRvZXNuJ3Qg
        cmVwbGFjZSB5b3VyIGxpbmVhciBhbGdvcml0aG0gd2l0aCBhbiBleHBvbmVu
        dGlhbAogICAgb25lIQoKICAgIG1pbml0ZXN0L21vY2sgYnkgU3RldmVuIEJh
        a2VyLCBpcyBhIGJlYXV0aWZ1bGx5IHRpbnkgbW9jayBvYmplY3QKICAgIGZy
        YW1ld29yay4KCiAgICBtaW5pdGVzdC9wcmlkZSBzaG93cyBwcmlkZSBpbiB0
        ZXN0aW5nIGFuZCBhZGRzIGNvbG9yaW5nIHRvIHlvdXIgdGVzdAogICAgb3V0
        cHV0LiBJIGd1ZXNzIGl0IGlzIGFuIGV4YW1wbGUgb2YgaG93IHRvIHdyaXRl
        IElPIHBpcGVzIHRvby4gOlAKCiAgICBtaW5pdGVzdC91bml0IGlzIG1lYW50
        IHRvIGhhdmUgYSBjbGVhbiBpbXBsZW1lbnRhdGlvbiBmb3IgbGFuZ3VhZ2UK
        ICAgIGltcGxlbWVudG9ycyB0aGF0IG5lZWQgYSBtaW5pbWFsIHNldCBvZiBt
        ZXRob2RzIHRvIGJvb3RzdHJhcCBhIHdvcmtpbmcKICAgIHRlc3Qgc3VpdGUu
        IEZvciBleGFtcGxlLCB0aGVyZSBpcyBubyBtYWdpYyBpbnZvbHZlZCBmb3Ig
        dGVzdC1jYXNlCiAgICBkaXNjb3ZlcnkuCgogICAgICAgICJBZ2FpbiwgSSBj
        YW4ndCBwcmFpc2UgZW5vdWdoIHRoZSBpZGVhIG9mIGEgdGVzdGluZy9zcGVj
        aW5nCiAgICAgICAgIGZyYW1ld29yayB0aGF0IEkgY2FuIGFjdHVhbGx5IHJl
        YWQgaW4gZnVsbCBpbiBvbmUgc2l0dGluZyEiCgogICAgICAgIC0tIFBpb3Ry
        IFN6b3Rrb3dza2kKICBkb3dubG9hZHNfY291bnQ6IDE0Njg4CiAgbWV0YWRh
        dGE6IHt9CiAgbnVtYmVyOiAyLjEwLjEKICBzdW1tYXJ5OiBtaW5pdGVzdCBw
        cm92aWRlcyBhIGNvbXBsZXRlIHN1aXRlIG9mIHRlc3RpbmcgZmFjaWxpdGll
        cyBzdXBwb3J0aW5nIFRERCwKICAgIEJERCwgbW9ja2luZywgYW5kIGJlbmNo
        bWFya2luZwogIHBsYXRmb3JtOiBydWJ5CiAgcnVieWdlbXNfdmVyc2lvbjog
        Ij49IDAiCiAgcnVieV92ZXJzaW9uOiAKICBwcmVyZWxlYXNlOiBmYWxzZQog
        IGxpY2Vuc2VzOiAKICByZXF1aXJlbWVudHM6IAogIHNoYTogNjA5ZTA0YWE3
        ZjY0MzZmMWRiNjM5YTA4ZDIxMjc0YjJjZGQ4MWFiZDRjZDllZjJiMDA1MzM5
        MTM5ZjVlOWZiNwotIGF1dGhvcnM6IFJ5YW4gRGF2aXMKICBidWlsdF9hdDog
        JzIwMTEtMTItMjFUMDA6MDA6MDAuMDAwWicKICBjcmVhdGVkX2F0OiAnMjAx
        MS0xMi0yMVQwMDo0ODozMi41NzlaJwogIGRlc2NyaXB0aW9uOiAibWluaXRl
        c3QgcHJvdmlkZXMgYSBjb21wbGV0ZSBzdWl0ZSBvZiB0ZXN0aW5nIGZhY2ls
        aXRpZXMgc3VwcG9ydGluZ1xuVERELAogICAgQkRELCBtb2NraW5nLCBhbmQg
        YmVuY2htYXJraW5nLlxuXG4gICAgXCJJIGhhZCBhIGNsYXNzIHdpdGggSmlt
        IFdlaXJpY2ggb24gdGVzdGluZwogICAgbGFzdCB3ZWVrIGFuZCB3ZSB3ZXJl
        XG4gICAgIGFsbG93ZWQgdG8gY2hvb3NlIG91ciB0ZXN0aW5nIGZyYW1ld29y
        a3MuIEtpcmsgSGFpbmVzCiAgICBhbmQgSSB3ZXJlXG4gICAgIHBhaXJlZCB1
        cCBhbmQgd2UgY3JhY2tlZCBvcGVuIHRoZSBjb2RlIGZvciBhIGZldyB0ZXN0
        XG4gICAgIGZyYW1ld29ya3MuLi5cblxuCiAgICBcICAgIEkgTVVTVCBzYXkg
        dGhhdCBtaW50aWVzdCBpcyAqdmVyeSogcmVhZGFibGUgLyB1bmRlcnN0YW5k
        YWJsZVxuICAgICBjb21wYXJlZAogICAgdG8gdGhlICdvdGhlciB0d28nIG9w
        dGlvbnMgd2UgbG9va2VkIGF0LiBOaWNlbHkgZG9uZSBhbmRcbiAgICAgdGhh
        bmsgeW91IGZvciBoZWxwaW5nCiAgICB1cyBrZWVwIG91ciBtZW50YWwgc2Fu
        aXR5LlwiXG5cbiAgICAtLSBXYXluZSBFLiBTZWd1aW5cblxubWluaXRlc3Qv
        dW5pdCBpcyBhIHNtYWxsCiAgICBhbmQgaW5jcmVkaWJseSBmYXN0IHVuaXQg
        dGVzdGluZyBmcmFtZXdvcmsuXG5JdCBwcm92aWRlcyBhIHJpY2ggc2V0IG9m
        IGFzc2VydGlvbnMKICAgIHRvIG1ha2UgeW91ciB0ZXN0cyBjbGVhbiBhbmRc
        bnJlYWRhYmxlLlxuXG5taW5pdGVzdC9zcGVjIGlzIGEgZnVuY3Rpb25hbGx5
        IGNvbXBsZXRlCiAgICBzcGVjIGVuZ2luZS4gSXQgaG9va3Mgb250b1xubWlu
        aXRlc3QvdW5pdCBhbmQgc2VhbWxlc3NseSBicmlkZ2VzIHRlc3QgYXNzZXJ0
        aW9ucwogICAgb3ZlciB0byBzcGVjXG5leHBlY3RhdGlvbnMuXG5cbm1pbml0
        ZXN0L2JlbmNobWFyayBpcyBhbiBhd2Vzb21lIHdheSB0byBhc3NlcnQKICAg
        IHRoZSBwZXJmb3JtYW5jZSBvZiB5b3VyXG5hbGdvcml0aG1zIGluIGEgcmVw
        ZWF0YWJsZSBtYW5uZXIuIE5vdyB5b3UgY2FuIGFzc2VydAogICAgdGhhdCB5
        b3VyIG5ld2JcbmNvLXdvcmtlciBkb2Vzbid0IHJlcGxhY2UgeW91ciBsaW5l
        YXIgYWxnb3JpdGhtIHdpdGggYW4gZXhwb25lbnRpYWxcbm9uZSFcblxubWlu
        aXRlc3QvbW9jawogICAgYnkgU3RldmVuIEJha2VyLCBpcyBhIGJlYXV0aWZ1
        bGx5IHRpbnkgbW9jayBvYmplY3RcbmZyYW1ld29yay5cblxubWluaXRlc3Qv
        cHJpZGUKICAgIHNob3dzIHByaWRlIGluIHRlc3RpbmcgYW5kIGFkZHMgY29s
        b3JpbmcgdG8geW91ciB0ZXN0XG5vdXRwdXQuIEkgZ3Vlc3MgaXQgaXMgYW4K
        ICAgIGV4YW1wbGUgb2YgaG93IHRvIHdyaXRlIElPIHBpcGVzIHRvby4gOlBc
        blxubWluaXRlc3QvdW5pdCBpcyBtZWFudCB0byBoYXZlIGEgY2xlYW4KICAg
        IGltcGxlbWVudGF0aW9uIGZvciBsYW5ndWFnZVxuaW1wbGVtZW50b3JzIHRo
        YXQgbmVlZCBhIG1pbmltYWwgc2V0IG9mIG1ldGhvZHMgdG8KICAgIGJvb3Rz
        dHJhcCBhIHdvcmtpbmdcbnRlc3Qgc3VpdGUuIEZvciBleGFtcGxlLCB0aGVy
        ZSBpcyBubyBtYWdpYyBpbnZvbHZlZCBmb3IgdGVzdC1jYXNlXG5kaXNjb3Zl
        cnkuXG5cbgogICAgXCAgIFwiQWdhaW4sIEkgY2Fuw6JceDgwXHg5OXQgcHJh
        aXNlIGVub3VnaCB0aGUgaWRlYSBvZiBhIHRlc3Rpbmcvc3BlY2luZ1xuICAg
        ICBmcmFtZXdvcmsKICAgIHRoYXQgSSBjYW4gYWN0dWFsbHkgcmVhZCBpbiBm
        dWxsIGluIG9uZSBzaXR0aW5nIVwiXG5cbiAgICAtLSBQaW90ciBTem90a293
        c2tpIgogIGRvd25sb2Fkc19jb3VudDogMzY3NTcKICBtZXRhZGF0YToge30K
        ICBudW1iZXI6IDIuMTAuMAogIHN1bW1hcnk6IG1pbml0ZXN0IHByb3ZpZGVz
        IGEgY29tcGxldGUgc3VpdGUgb2YgdGVzdGluZyBmYWNpbGl0aWVzIHN1cHBv
        cnRpbmcgVERELAogICAgQkRELCBtb2NraW5nLCBhbmQgYmVuY2htYXJraW5n
        CiAgcGxhdGZvcm06IHJ1YnkKICBydWJ5Z2Vtc192ZXJzaW9uOiAiPj0gMCIK
        ICBydWJ5X3ZlcnNpb246IAogIHByZXJlbGVhc2U6IGZhbHNlCiAgbGljZW5z
        ZXM6IAogIHJlcXVpcmVtZW50czogCiAgc2hhOiBiYzNjZjI5YjMzNTY1NWNl
        MmMxNTBlNWRhYjQ0YTcwMTgyNWE1OWY0ZGNhMGI2YjRkNTUyMjY3M2Y4MWYx
        NGFhCi0gYXV0aG9yczogUnlhbiBEYXZpcwogIGJ1aWx0X2F0OiAnMjAxMS0x
        Mi0xNFQwMDowMDowMC4wMDBaJwogIGNyZWF0ZWRfYXQ6ICcyMDExLTEyLTE0
        VDAxOjI1OjU3LjUwN1onCiAgZGVzY3JpcHRpb246ICJtaW5pdGVzdCBwcm92
        aWRlcyBhIGNvbXBsZXRlIHN1aXRlIG9mIHRlc3RpbmcgZmFjaWxpdGllcyBz
        dXBwb3J0aW5nXG5UREQsCiAgICBCREQsIG1vY2tpbmcsIGFuZCBiZW5jaG1h
        cmtpbmcuXG5cbiAgICBcIkkgaGFkIGEgY2xhc3Mgd2l0aCBKaW0gV2Vpcmlj
        aCBvbiB0ZXN0aW5nCiAgICBsYXN0IHdlZWsgYW5kIHdlIHdlcmVcbiAgICAg
        YWxsb3dlZCB0byBjaG9vc2Ugb3VyIHRlc3RpbmcgZnJhbWV3b3Jrcy4gS2ly
        ayBIYWluZXMKICAgIGFuZCBJIHdlcmVcbiAgICAgcGFpcmVkIHVwIGFuZCB3
        ZSBjcmFja2VkIG9wZW4gdGhlIGNvZGUgZm9yIGEgZmV3IHRlc3RcbiAgICAg
        ZnJhbWV3b3Jrcy4uLlxuXG4KICAgIFwgICAgSSBNVVNUIHNheSB0aGF0IG1p
        bnRpZXN0IGlzICp2ZXJ5KiByZWFkYWJsZSAvIHVuZGVyc3RhbmRhYmxlXG4g
        ICAgIGNvbXBhcmVkCiAgICB0byB0aGUgJ290aGVyIHR3bycgb3B0aW9ucyB3
        ZSBsb29rZWQgYXQuIE5pY2VseSBkb25lIGFuZFxuICAgICB0aGFuayB5b3Ug
        Zm9yIGhlbHBpbmcKICAgIHVzIGtlZXAgb3VyIG1lbnRhbCBzYW5pdHkuXCJc
        blxuICAgIC0tIFdheW5lIEUuIFNlZ3VpblxuXG5taW5pdGVzdC91bml0IGlz
        IGEgc21hbGwKICAgIGFuZCBpbmNyZWRpYmx5IGZhc3QgdW5pdCB0ZXN0aW5n
        IGZyYW1ld29yay5cbkl0IHByb3ZpZGVzIGEgcmljaCBzZXQgb2YgYXNzZXJ0
        aW9ucwogICAgdG8gbWFrZSB5b3VyIHRlc3RzIGNsZWFuIGFuZFxucmVhZGFi
        bGUuXG5cbm1pbml0ZXN0L3NwZWMgaXMgYSBmdW5jdGlvbmFsbHkgY29tcGxl
        dGUKICAgIHNwZWMgZW5naW5lLiBJdCBob29rcyBvbnRvXG5taW5pdGVzdC91
        bml0IGFuZCBzZWFtbGVzc2x5IGJyaWRnZXMgdGVzdCBhc3NlcnRpb25zCiAg
        ICBvdmVyIHRvIHNwZWNcbmV4cGVjdGF0aW9ucy5cblxubWluaXRlc3QvYmVu
        Y2htYXJrIGlzIGFuIGF3ZXNvbWUgd2F5IHRvIGFzc2VydAogICAgdGhlIHBl
        cmZvcm1hbmNlIG9mIHlvdXJcbmFsZ29yaXRobXMgaW4gYSByZXBlYXRhYmxl
        IG1hbm5lci4gTm93IHlvdSBjYW4gYXNzZXJ0CiAgICB0aGF0IHlvdXIgbmV3
        YlxuY28td29ya2VyIGRvZXNuJ3QgcmVwbGFjZSB5b3VyIGxpbmVhciBhbGdv
        cml0aG0gd2l0aCBhbiBleHBvbmVudGlhbFxub25lIVxuXG5taW5pdGVzdC9t
        b2NrCiAgICBieSBTdGV2ZW4gQmFrZXIsIGlzIGEgYmVhdXRpZnVsbHkgdGlu
        eSBtb2NrIG9iamVjdFxuZnJhbWV3b3JrLlxuXG5taW5pdGVzdC9wcmlkZQog
        ICAgc2hvd3MgcHJpZGUgaW4gdGVzdGluZyBhbmQgYWRkcyBjb2xvcmluZyB0
        byB5b3VyIHRlc3Rcbm91dHB1dC4gSSBndWVzcyBpdCBpcyBhbgogICAgZXhh
        bXBsZSBvZiBob3cgdG8gd3JpdGUgSU8gcGlwZXMgdG9vLiA6UFxuXG5taW5p
        dGVzdC91bml0IGlzIG1lYW50IHRvIGhhdmUgYSBjbGVhbgogICAgaW1wbGVt
        ZW50YXRpb24gZm9yIGxhbmd1YWdlXG5pbXBsZW1lbnRvcnMgdGhhdCBuZWVk
        IGEgbWluaW1hbCBzZXQgb2YgbWV0aG9kcyB0bwogICAgYm9vdHN0cmFwIGEg
        d29ya2luZ1xudGVzdCBzdWl0ZS4gRm9yIGV4YW1wbGUsIHRoZXJlIGlzIG5v
        IG1hZ2ljIGludm9sdmVkIGZvciB0ZXN0LWNhc2VcbmRpc2NvdmVyeS5cblxu
        CiAgICBcICAgXCJBZ2FpbiwgSSBjYW7Dolx4ODBceDk5dCBwcmFpc2UgZW5v
        dWdoIHRoZSBpZGVhIG9mIGEgdGVzdGluZy9zcGVjaW5nXG4gICAgIGZyYW1l
        d29yawogICAgdGhhdCBJIGNhbiBhY3R1YWxseSByZWFkIGluIGZ1bGwgaW4g
        b25lIHNpdHRpbmchXCJcblxuICAgIC0tIFBpb3RyIFN6b3Rrb3dza2kiCiAg
        ZG93bmxvYWRzX2NvdW50OiA4ODEwCiAgbWV0YWRhdGE6IHt9CiAgbnVtYmVy
        OiAyLjkuMQogIHN1bW1hcnk6IG1pbml0ZXN0IHByb3ZpZGVzIGEgY29tcGxl
        dGUgc3VpdGUgb2YgdGVzdGluZyBmYWNpbGl0aWVzIHN1cHBvcnRpbmcgVERE
        LAogICAgQkRELCBtb2NraW5nLCBhbmQgYmVuY2htYXJraW5nCiAgcGxhdGZv
        cm06IHJ1YnkKICBydWJ5Z2Vtc192ZXJzaW9uOiAiPj0gMCIKICBydWJ5X3Zl
        cnNpb246IAogIHByZXJlbGVhc2U6IGZhbHNlCiAgbGljZW5zZXM6IAogIHJl
        cXVpcmVtZW50czogCiAgc2hhOiBjZDhmMjcxZGY2ZTlmMDA3MGEyMGY0NGY3
        NzE0MzllNjkyMDNmZjMzNTI2MWVkMzdiOTliNDU1MDQxZDFmZWFjCi0gYXV0
        aG9yczogUnlhbiBEYXZpcwogIGJ1aWx0X2F0OiAnMjAxMS0xMi0wOFQwMDow
        MDowMC4wMDBaJwogIGNyZWF0ZWRfYXQ6ICcyMDExLTEyLTA4VDAxOjQ3OjE0
        LjE0MVonCiAgZGVzY3JpcHRpb246ICJtaW5pdGVzdCBwcm92aWRlcyBhIGNv
        bXBsZXRlIHN1aXRlIG9mIHRlc3RpbmcgZmFjaWxpdGllcyBzdXBwb3J0aW5n
        XG5UREQsCiAgICBCREQsIG1vY2tpbmcsIGFuZCBiZW5jaG1hcmtpbmcuXG5c
        biAgICBcIkkgaGFkIGEgY2xhc3Mgd2l0aCBKaW0gV2VpcmljaCBvbiB0ZXN0
        aW5nCiAgICBsYXN0IHdlZWsgYW5kIHdlIHdlcmVcbiAgICAgYWxsb3dlZCB0
        byBjaG9vc2Ugb3VyIHRlc3RpbmcgZnJhbWV3b3Jrcy4gS2lyayBIYWluZXMK
        ICAgIGFuZCBJIHdlcmVcbiAgICAgcGFpcmVkIHVwIGFuZCB3ZSBjcmFja2Vk
        IG9wZW4gdGhlIGNvZGUgZm9yIGEgZmV3IHRlc3RcbiAgICAgZnJhbWV3b3Jr
        cy4uLlxuXG4KICAgIFwgICAgSSBNVVNUIHNheSB0aGF0IG1pbnRpZXN0IGlz
        ICp2ZXJ5KiByZWFkYWJsZSAvIHVuZGVyc3RhbmRhYmxlXG4gICAgIGNvbXBh
        cmVkCiAgICB0byB0aGUgJ290aGVyIHR3bycgb3B0aW9ucyB3ZSBsb29rZWQg
        YXQuIE5pY2VseSBkb25lIGFuZFxuICAgICB0aGFuayB5b3UgZm9yIGhlbHBp
        bmcKICAgIHVzIGtlZXAgb3VyIG1lbnRhbCBzYW5pdHkuXCJcblxuICAgIC0t
        IFdheW5lIEUuIFNlZ3VpblxuXG5taW5pdGVzdC91bml0IGlzIGEgc21hbGwK
        ICAgIGFuZCBpbmNyZWRpYmx5IGZhc3QgdW5pdCB0ZXN0aW5nIGZyYW1ld29y
        ay5cbkl0IHByb3ZpZGVzIGEgcmljaCBzZXQgb2YgYXNzZXJ0aW9ucwogICAg
        dG8gbWFrZSB5b3VyIHRlc3RzIGNsZWFuIGFuZFxucmVhZGFibGUuXG5cbm1p
        bml0ZXN0L3NwZWMgaXMgYSBmdW5jdGlvbmFsbHkgY29tcGxldGUKICAgIHNw
        ZWMgZW5naW5lLiBJdCBob29rcyBvbnRvXG5taW5pdGVzdC91bml0IGFuZCBz
        ZWFtbGVzc2x5IGJyaWRnZXMgdGVzdCBhc3NlcnRpb25zCiAgICBvdmVyIHRv
        IHNwZWNcbmV4cGVjdGF0aW9ucy5cblxubWluaXRlc3QvYmVuY2htYXJrIGlz
        IGFuIGF3ZXNvbWUgd2F5IHRvIGFzc2VydAogICAgdGhlIHBlcmZvcm1hbmNl
        IG9mIHlvdXJcbmFsZ29yaXRobXMgaW4gYSByZXBlYXRhYmxlIG1hbm5lci4g
        Tm93IHlvdSBjYW4gYXNzZXJ0CiAgICB0aGF0IHlvdXIgbmV3YlxuY28td29y
        a2VyIGRvZXNuJ3QgcmVwbGFjZSB5b3VyIGxpbmVhciBhbGdvcml0aG0gd2l0
        aCBhbiBleHBvbmVudGlhbFxub25lIVxuXG5taW5pdGVzdC9tb2NrCiAgICBi
        eSBTdGV2ZW4gQmFrZXIsIGlzIGEgYmVhdXRpZnVsbHkgdGlueSBtb2NrIG9i
        amVjdFxuZnJhbWV3b3JrLlxuXG5taW5pdGVzdC9wcmlkZQogICAgc2hvd3Mg
        cHJpZGUgaW4gdGVzdGluZyBhbmQgYWRkcyBjb2xvcmluZyB0byB5b3VyIHRl
        c3Rcbm91dHB1dC4gSSBndWVzcyBpdCBpcyBhbgogICAgZXhhbXBsZSBvZiBo
        b3cgdG8gd3JpdGUgSU8gcGlwZXMgdG9vLiA6UFxuXG5taW5pdGVzdC91bml0
        IGlzIG1lYW50IHRvIGhhdmUgYSBjbGVhbgogICAgaW1wbGVtZW50YXRpb24g
        Zm9yIGxhbmd1YWdlXG5pbXBsZW1lbnRvcnMgdGhhdCBuZWVkIGEgbWluaW1h
        bCBzZXQgb2YgbWV0aG9kcyB0bwogICAgYm9vdHN0cmFwIGEgd29ya2luZ1xu
        dGVzdCBzdWl0ZS4gRm9yIGV4YW1wbGUsIHRoZXJlIGlzIG5vIG1hZ2ljIGlu
        dm9sdmVkIGZvciB0ZXN0LWNhc2VcbmRpc2NvdmVyeS5cblxuCiAgICBcICAg
        XCJBZ2FpbiwgSSBjYW7Dolx4ODBceDk5dCBwcmFpc2UgZW5vdWdoIHRoZSBp
        ZGVhIG9mIGEgdGVzdGluZy9zcGVjaW5nXG4gICAgIGZyYW1ld29yawogICAg
        dGhhdCBJIGNhbiBhY3R1YWxseSByZWFkIGluIGZ1bGwgaW4gb25lIHNpdHRp
        bmchXCJcblxuICAgIC0tIFBpb3RyIFN6b3Rrb3dza2kiCiAgZG93bmxvYWRz
        X2NvdW50OiA4MDQ1CiAgbWV0YWRhdGE6IHt9CiAgbnVtYmVyOiAyLjkuMAog
        IHN1bW1hcnk6IG1pbml0ZXN0IHByb3ZpZGVzIGEgY29tcGxldGUgc3VpdGUg
        b2YgdGVzdGluZyBmYWNpbGl0aWVzIHN1cHBvcnRpbmcgVERELAogICAgQkRE
        LCBtb2NraW5nLCBhbmQgYmVuY2htYXJraW5nCiAgcGxhdGZvcm06IHJ1YnkK
        ICBydWJ5Z2Vtc192ZXJzaW9uOiAiPj0gMCIKICBydWJ5X3ZlcnNpb246IAog
        IHByZXJlbGVhc2U6IGZhbHNlCiAgbGljZW5zZXM6IAogIHJlcXVpcmVtZW50
        czogCiAgc2hhOiAxNDYwMTE0NDg3YmFjYmQ2NGVmOGQzMzdhNmY5MTExYzg4
        YTZiMmZiNjE0YzMyNjA3NDQwMTNmMDI1MDBjM2JkCi0gYXV0aG9yczogUnlh
        biBEYXZpcwogIGJ1aWx0X2F0OiAnMjAxMS0xMS0xN1QwMDowMDowMC4wMDBa
        JwogIGNyZWF0ZWRfYXQ6ICcyMDExLTExLTE3VDIzOjQ5OjM3LjUzOFonCiAg
        ZGVzY3JpcHRpb246IHwtCiAgICBtaW5pdGVzdCBwcm92aWRlcyBhIGNvbXBs
        ZXRlIHN1aXRlIG9mIHRlc3RpbmcgZmFjaWxpdGllcyBzdXBwb3J0aW5nCiAg
        ICBUREQsIEJERCwgbW9ja2luZywgYW5kIGJlbmNobWFya2luZy4KCiAgICAg
        ICAgIkkgaGFkIGEgY2xhc3Mgd2l0aCBKaW0gV2VpcmljaCBvbiB0ZXN0aW5n
        IGxhc3Qgd2VlayBhbmQgd2Ugd2VyZQogICAgICAgICBhbGxvd2VkIHRvIGNo
        b29zZSBvdXIgdGVzdGluZyBmcmFtZXdvcmtzLiBLaXJrIEhhaW5lcyBhbmQg
        SSB3ZXJlCiAgICAgICAgIHBhaXJlZCB1cCBhbmQgd2UgY3JhY2tlZCBvcGVu
        IHRoZSBjb2RlIGZvciBhIGZldyB0ZXN0CiAgICAgICAgIGZyYW1ld29ya3Mu
        Li4KCiAgICAgICAgIEkgTVVTVCBzYXkgdGhhdCBtaW50aWVzdCBpcyAqdmVy
        eSogcmVhZGFibGUgLyB1bmRlcnN0YW5kYWJsZQogICAgICAgICBjb21wYXJl
        ZCB0byB0aGUgJ290aGVyIHR3bycgb3B0aW9ucyB3ZSBsb29rZWQgYXQuIE5p
        Y2VseSBkb25lIGFuZAogICAgICAgICB0aGFuayB5b3UgZm9yIGhlbHBpbmcg
        dXMga2VlcCBvdXIgbWVudGFsIHNhbml0eS4iCgogICAgICAgIC0tIFdheW5l
        IEUuIFNlZ3VpbgoKICAgIG1pbml0ZXN0L3VuaXQgaXMgYSBzbWFsbCBhbmQg
        aW5jcmVkaWJseSBmYXN0IHVuaXQgdGVzdGluZyBmcmFtZXdvcmsuCiAgICBJ
        dCBwcm92aWRlcyBhIHJpY2ggc2V0IG9mIGFzc2VydGlvbnMgdG8gbWFrZSB5
        b3VyIHRlc3RzIGNsZWFuIGFuZAogICAgcmVhZGFibGUuCgogICAgbWluaXRl
        c3Qvc3BlYyBpcyBhIGZ1bmN0aW9uYWxseSBjb21wbGV0ZSBzcGVjIGVuZ2lu
        ZS4gSXQgaG9va3Mgb250bwogICAgbWluaXRlc3QvdW5pdCBhbmQgc2VhbWxl
        c3NseSBicmlkZ2VzIHRlc3QgYXNzZXJ0aW9ucyBvdmVyIHRvIHNwZWMKICAg
        IGV4cGVjdGF0aW9ucy4KCiAgICBtaW5pdGVzdC9iZW5jaG1hcmsgaXMgYW4g
        YXdlc29tZSB3YXkgdG8gYXNzZXJ0IHRoZSBwZXJmb3JtYW5jZSBvZiB5b3Vy
        CiAgICBhbGdvcml0aG1zIGluIGEgcmVwZWF0YWJsZSBtYW5uZXIuIE5vdyB5
        b3UgY2FuIGFzc2VydCB0aGF0IHlvdXIgbmV3YgogICAgY28td29ya2VyIGRv
        ZXNuJ3QgcmVwbGFjZSB5b3VyIGxpbmVhciBhbGdvcml0aG0gd2l0aCBhbiBl
        eHBvbmVudGlhbAogICAgb25lIQoKICAgIG1pbml0ZXN0L21vY2sgYnkgU3Rl
        dmVuIEJha2VyLCBpcyBhIGJlYXV0aWZ1bGx5IHRpbnkgbW9jayBvYmplY3QK
        ICAgIGZyYW1ld29yay4KCiAgICBtaW5pdGVzdC9wcmlkZSBzaG93cyBwcmlk
        ZSBpbiB0ZXN0aW5nIGFuZCBhZGRzIGNvbG9yaW5nIHRvIHlvdXIgdGVzdAog
        ICAgb3V0cHV0LiBJIGd1ZXNzIGl0IGlzIGFuIGV4YW1wbGUgb2YgaG93IHRv
        IHdyaXRlIElPIHBpcGVzIHRvby4gOlAKCiAgICBtaW5pdGVzdC91bml0IGlz
        IG1lYW50IHRvIGhhdmUgYSBjbGVhbiBpbXBsZW1lbnRhdGlvbiBmb3IgbGFu
        Z3VhZ2UKICAgIGltcGxlbWVudG9ycyB0aGF0IG5lZWQgYSBtaW5pbWFsIHNl
        dCBvZiBtZXRob2RzIHRvIGJvb3RzdHJhcCBhIHdvcmtpbmcKICAgIHRlc3Qg
        c3VpdGUuIEZvciBleGFtcGxlLCB0aGVyZSBpcyBubyBtYWdpYyBpbnZvbHZl
        ZCBmb3IgdGVzdC1jYXNlCiAgICBkaXNjb3ZlcnkuCgogICAgICAgICJBZ2Fp
        biwgSSBjYW7igJl0IHByYWlzZSBlbm91Z2ggdGhlIGlkZWEgb2YgYSB0ZXN0
        aW5nL3NwZWNpbmcKICAgICAgICAgZnJhbWV3b3JrIHRoYXQgSSBjYW4gYWN0
        dWFsbHkgcmVhZCBpbiBmdWxsIGluIG9uZSBzaXR0aW5nISIKCiAgICAgICAg
        LS0gUGlvdHIgU3pvdGtvd3NraQogIGRvd25sb2Fkc19jb3VudDogMjc4MTYK
        ICBtZXRhZGF0YToge30KICBudW1iZXI6IDIuOC4xCiAgc3VtbWFyeTogbWlu
        aXRlc3QgcHJvdmlkZXMgYSBjb21wbGV0ZSBzdWl0ZSBvZiB0ZXN0aW5nIGZh
        Y2lsaXRpZXMgc3VwcG9ydGluZyBUREQsCiAgICBCREQsIG1vY2tpbmcsIGFu
        ZCBiZW5jaG1hcmtpbmcKICBwbGF0Zm9ybTogcnVieQogIHJ1YnlnZW1zX3Zl
        cnNpb246ICI+PSAwIgogIHJ1YnlfdmVyc2lvbjogCiAgcHJlcmVsZWFzZTog
        ZmFsc2UKICBsaWNlbnNlczogCiAgcmVxdWlyZW1lbnRzOiAKICBzaGE6IDFj
        MjY1NzMwMjI4ZjYzMDMwYzEzNjA1OGQ2ZWIxNWIwYmQwNWVkZDFlMmYwZGFh
        ZjQwZGJlYmM0ZDE4N2RlMDIKLSBhdXRob3JzOiBSeWFuIERhdmlzCiAgYnVp
        bHRfYXQ6ICcyMDExLTExLTA5VDAwOjAwOjAwLjAwMFonCiAgY3JlYXRlZF9h
        dDogJzIwMTEtMTEtMDlUMDA6Mjc6NDkuMzcwWicKICBkZXNjcmlwdGlvbjog
        fC0KICAgIG1pbml0ZXN0IHByb3ZpZGVzIGEgY29tcGxldGUgc3VpdGUgb2Yg
        dGVzdGluZyBmYWNpbGl0aWVzIHN1cHBvcnRpbmcKICAgIFRERCwgQkRELCBt
        b2NraW5nLCBhbmQgYmVuY2htYXJraW5nLgoKICAgICAgICAiSSBoYWQgYSBj
        bGFzcyB3aXRoIEppbSBXZWlyaWNoIG9uIHRlc3RpbmcgbGFzdCB3ZWVrIGFu
        ZCB3ZSB3ZXJlCiAgICAgICAgIGFsbG93ZWQgdG8gY2hvb3NlIG91ciB0ZXN0
        aW5nIGZyYW1ld29ya3MuIEtpcmsgSGFpbmVzIGFuZCBJIHdlcmUKICAgICAg
        ICAgcGFpcmVkIHVwIGFuZCB3ZSBjcmFja2VkIG9wZW4gdGhlIGNvZGUgZm9y
        IGEgZmV3IHRlc3QKICAgICAgICAgZnJhbWV3b3Jrcy4uLgoKICAgICAgICAg
        SSBNVVNUIHNheSB0aGF0IG1pbnRpZXN0IGlzICp2ZXJ5KiByZWFkYWJsZSAv
        IHVuZGVyc3RhbmRhYmxlCiAgICAgICAgIGNvbXBhcmVkIHRvIHRoZSAnb3Ro
        ZXIgdHdvJyBvcHRpb25zIHdlIGxvb2tlZCBhdC4gTmljZWx5IGRvbmUgYW5k
        CiAgICAgICAgIHRoYW5rIHlvdSBmb3IgaGVscGluZyB1cyBrZWVwIG91ciBt
        ZW50YWwgc2FuaXR5LiIKCiAgICAgICAgLS0gV2F5bmUgRS4gU2VndWluCgog
        ICAgbWluaXRlc3QvdW5pdCBpcyBhIHNtYWxsIGFuZCBpbmNyZWRpYmx5IGZh
        c3QgdW5pdCB0ZXN0aW5nIGZyYW1ld29yay4KICAgIEl0IHByb3ZpZGVzIGEg
        cmljaCBzZXQgb2YgYXNzZXJ0aW9ucyB0byBtYWtlIHlvdXIgdGVzdHMgY2xl
        YW4gYW5kCiAgICByZWFkYWJsZS4KCiAgICBtaW5pdGVzdC9zcGVjIGlzIGEg
        ZnVuY3Rpb25hbGx5IGNvbXBsZXRlIHNwZWMgZW5naW5lLiBJdCBob29rcyBv
        bnRvCiAgICBtaW5pdGVzdC91bml0IGFuZCBzZWFtbGVzc2x5IGJyaWRnZXMg
        dGVzdCBhc3NlcnRpb25zIG92ZXIgdG8gc3BlYwogICAgZXhwZWN0YXRpb25z
        LgoKICAgIG1pbml0ZXN0L2JlbmNobWFyayBpcyBhbiBhd2Vzb21lIHdheSB0
        byBhc3NlcnQgdGhlIHBlcmZvcm1hbmNlIG9mIHlvdXIKICAgIGFsZ29yaXRo
        bXMgaW4gYSByZXBlYXRhYmxlIG1hbm5lci4gTm93IHlvdSBjYW4gYXNzZXJ0
        IHRoYXQgeW91ciBuZXdiCiAgICBjby13b3JrZXIgZG9lc24ndCByZXBsYWNl
        IHlvdXIgbGluZWFyIGFsZ29yaXRobSB3aXRoIGFuIGV4cG9uZW50aWFsCiAg
        ICBvbmUhCgogICAgbWluaXRlc3QvbW9jayBieSBTdGV2ZW4gQmFrZXIsIGlz
        IGEgYmVhdXRpZnVsbHkgdGlueSBtb2NrIG9iamVjdAogICAgZnJhbWV3b3Jr
        LgoKICAgIG1pbml0ZXN0L3ByaWRlIHNob3dzIHByaWRlIGluIHRlc3Rpbmcg
        YW5kIGFkZHMgY29sb3JpbmcgdG8geW91ciB0ZXN0CiAgICBvdXRwdXQuIEkg
        Z3Vlc3MgaXQgaXMgYW4gZXhhbXBsZSBvZiBob3cgdG8gd3JpdGUgSU8gcGlw
        ZXMgdG9vLiA6UAoKICAgIG1pbml0ZXN0L3VuaXQgaXMgbWVhbnQgdG8gaGF2
        ZSBhIGNsZWFuIGltcGxlbWVudGF0aW9uIGZvciBsYW5ndWFnZQogICAgaW1w
        bGVtZW50b3JzIHRoYXQgbmVlZCBhIG1pbmltYWwgc2V0IG9mIG1ldGhvZHMg
        dG8gYm9vdHN0cmFwIGEgd29ya2luZwogICAgdGVzdCBzdWl0ZS4gRm9yIGV4
        YW1wbGUsIHRoZXJlIGlzIG5vIG1hZ2ljIGludm9sdmVkIGZvciB0ZXN0LWNh
        c2UKICAgIGRpc2NvdmVyeS4KCiAgICAgICAgIkFnYWluLCBJIGNhbuKAmXQg
        cHJhaXNlIGVub3VnaCB0aGUgaWRlYSBvZiBhIHRlc3Rpbmcvc3BlY2luZwog
        ICAgICAgICBmcmFtZXdvcmsgdGhhdCBJIGNhbiBhY3R1YWxseSByZWFkIGlu
        IGZ1bGwgaW4gb25lIHNpdHRpbmchIgoKICAgICAgICAtLSBQaW90ciBTem90
        a293c2tpCiAgZG93bmxvYWRzX2NvdW50OiAxMDc3NQogIG1ldGFkYXRhOiB7
        fQogIG51bWJlcjogMi44LjAKICBzdW1tYXJ5OiBtaW5pdGVzdCBwcm92aWRl
        cyBhIGNvbXBsZXRlIHN1aXRlIG9mIHRlc3RpbmcgZmFjaWxpdGllcyBzdXBw
        b3J0aW5nIFRERCwKICAgIEJERCwgbW9ja2luZywgYW5kIGJlbmNobWFya2lu
        ZwogIHBsYXRmb3JtOiBydWJ5CiAgcnVieWdlbXNfdmVyc2lvbjogIj49IDAi
        CiAgcnVieV92ZXJzaW9uOiAKICBwcmVyZWxlYXNlOiBmYWxzZQogIGxpY2Vu
        c2VzOiAKICByZXF1aXJlbWVudHM6IAogIHNoYTogMmEzYTc0NDc0MTk5NWU5
        MDYzMzczY2IyYWU4YzBmZDI4OGZhODE2YmFmZmFiMzQ2NjJmY2ExODQ1MGZk
        MjZhNgotIGF1dGhvcnM6IFJ5YW4gRGF2aXMKICBidWlsdF9hdDogJzIwMTEt
        MTAtMjZUMDA6MDA6MDAuMDAwWicKICBjcmVhdGVkX2F0OiAnMjAxMS0xMC0y
        NlQwMjoxNTowMS4yMTVaJwogIGRlc2NyaXB0aW9uOiB8LQogICAgbWluaXRl
        c3QgcHJvdmlkZXMgYSBjb21wbGV0ZSBzdWl0ZSBvZiB0ZXN0aW5nIGZhY2ls
        aXRpZXMgc3VwcG9ydGluZwogICAgVERELCBCREQsIG1vY2tpbmcsIGFuZCBi
        ZW5jaG1hcmtpbmcuCgogICAgICAgICJJIGhhZCBhIGNsYXNzIHdpdGggSmlt
        IFdlaXJpY2ggb24gdGVzdGluZyBsYXN0IHdlZWsgYW5kIHdlIHdlcmUKICAg
        ICAgICAgYWxsb3dlZCB0byBjaG9vc2Ugb3VyIHRlc3RpbmcgZnJhbWV3b3Jr
        cy4gS2lyayBIYWluZXMgYW5kIEkgd2VyZQogICAgICAgICBwYWlyZWQgdXAg
        YW5kIHdlIGNyYWNrZWQgb3BlbiB0aGUgY29kZSBmb3IgYSBmZXcgdGVzdAog
        ICAgICAgICBmcmFtZXdvcmtzLi4uCgogICAgICAgICBJIE1VU1Qgc2F5IHRo
        YXQgbWludGllc3QgaXMgKnZlcnkqIHJlYWRhYmxlIC8gdW5kZXJzdGFuZGFi
        bGUKICAgICAgICAgY29tcGFyZWQgdG8gdGhlICdvdGhlciB0d28nIG9wdGlv
        bnMgd2UgbG9va2VkIGF0LiBOaWNlbHkgZG9uZSBhbmQKICAgICAgICAgdGhh
        bmsgeW91IGZvciBoZWxwaW5nIHVzIGtlZXAgb3VyIG1lbnRhbCBzYW5pdHku
        IgoKICAgICAgICAtLSBXYXluZSBFLiBTZWd1aW4KCiAgICBtaW5pdGVzdC91
        bml0IGlzIGEgc21hbGwgYW5kIGluY3JlZGlibHkgZmFzdCB1bml0IHRlc3Rp
        bmcgZnJhbWV3b3JrLgogICAgSXQgcHJvdmlkZXMgYSByaWNoIHNldCBvZiBh
        c3NlcnRpb25zIHRvIG1ha2UgeW91ciB0ZXN0cyBjbGVhbiBhbmQKICAgIHJl
        YWRhYmxlLgoKICAgIG1pbml0ZXN0L3NwZWMgaXMgYSBmdW5jdGlvbmFsbHkg
        Y29tcGxldGUgc3BlYyBlbmdpbmUuIEl0IGhvb2tzIG9udG8KICAgIG1pbml0
        ZXN0L3VuaXQgYW5kIHNlYW1sZXNzbHkgYnJpZGdlcyB0ZXN0IGFzc2VydGlv
        bnMgb3ZlciB0byBzcGVjCiAgICBleHBlY3RhdGlvbnMuCgogICAgbWluaXRl
        c3QvYmVuY2htYXJrIGlzIGFuIGF3ZXNvbWUgd2F5IHRvIGFzc2VydCB0aGUg
        cGVyZm9ybWFuY2Ugb2YgeW91cgogICAgYWxnb3JpdGhtcyBpbiBhIHJlcGVh
        dGFibGUgbWFubmVyLiBOb3cgeW91IGNhbiBhc3NlcnQgdGhhdCB5b3VyIG5l
        d2IKICAgIGNvLXdvcmtlciBkb2Vzbid0IHJlcGxhY2UgeW91ciBsaW5lYXIg
        YWxnb3JpdGhtIHdpdGggYW4gZXhwb25lbnRpYWwKICAgIG9uZSEKCiAgICBt
        aW5pdGVzdC9tb2NrIGJ5IFN0ZXZlbiBCYWtlciwgaXMgYSBiZWF1dGlmdWxs
        eSB0aW55IG1vY2sgb2JqZWN0CiAgICBmcmFtZXdvcmsuCgogICAgbWluaXRl
        c3QvcHJpZGUgc2hvd3MgcHJpZGUgaW4gdGVzdGluZyBhbmQgYWRkcyBjb2xv
        cmluZyB0byB5b3VyIHRlc3QKICAgIG91dHB1dC4gSSBndWVzcyBpdCBpcyBh
        biBleGFtcGxlIG9mIGhvdyB0byB3cml0ZSBJTyBwaXBlcyB0b28uIDpQCgog
        ICAgbWluaXRlc3QvdW5pdCBpcyBtZWFudCB0byBoYXZlIGEgY2xlYW4gaW1w
        bGVtZW50YXRpb24gZm9yIGxhbmd1YWdlCiAgICBpbXBsZW1lbnRvcnMgdGhh
        dCBuZWVkIGEgbWluaW1hbCBzZXQgb2YgbWV0aG9kcyB0byBib290c3RyYXAg
        YSB3b3JraW5nCiAgICB0ZXN0IHN1aXRlLiBGb3IgZXhhbXBsZSwgdGhlcmUg
        aXMgbm8gbWFnaWMgaW52b2x2ZWQgZm9yIHRlc3QtY2FzZQogICAgZGlzY292
        ZXJ5LgoKICAgICAgICAiQWdhaW4sIEkgY2Fu4oCZdCBwcmFpc2UgZW5vdWdo
        IHRoZSBpZGVhIG9mIGEgdGVzdGluZy9zcGVjaW5nCiAgICAgICAgIGZyYW1l
        d29yayB0aGF0IEkgY2FuIGFjdHVhbGx5IHJlYWQgaW4gZnVsbCBpbiBvbmUg
        c2l0dGluZyEiCgogICAgICAgIC0tIFBpb3RyIFN6b3Rrb3dza2kKICBkb3du
        bG9hZHNfY291bnQ6IDMzODQzCiAgbWV0YWRhdGE6IHt9CiAgbnVtYmVyOiAy
        LjcuMAogIHN1bW1hcnk6IG1pbml0ZXN0IHByb3ZpZGVzIGEgY29tcGxldGUg
        c3VpdGUgb2YgdGVzdGluZyBmYWNpbGl0aWVzIHN1cHBvcnRpbmcgVERELAog
        ICAgQkRELCBtb2NraW5nLCBhbmQgYmVuY2htYXJraW5nCiAgcGxhdGZvcm06
        IHJ1YnkKICBydWJ5Z2Vtc192ZXJzaW9uOiAiPj0gMCIKICBydWJ5X3ZlcnNp
        b246IAogIHByZXJlbGVhc2U6IGZhbHNlCiAgbGljZW5zZXM6IAogIHJlcXVp
        cmVtZW50czogCiAgc2hhOiAxMjBkNjk1NDY2Yzc4NTQ4NmNmYzZiZjEwZmE1
        YTg0MGFiMjQ3NjUzZGE3MjhmMzUwYWJiYjE1ZGIwYmM1YzQyCi0gYXV0aG9y
        czogUnlhbiBEYXZpcwogIGJ1aWx0X2F0OiAnMjAxMS0xMC0xOVQwMDowMDow
        MC4wMDBaJwogIGNyZWF0ZWRfYXQ6ICcyMDExLTEwLTE5VDIxOjI4OjE0LjI5
        MFonCiAgZGVzY3JpcHRpb246IHwtCiAgICBtaW5pdGVzdCBwcm92aWRlcyBh
        IGNvbXBsZXRlIHN1aXRlIG9mIHRlc3RpbmcgZmFjaWxpdGllcyBzdXBwb3J0
        aW5nCiAgICBUREQsIEJERCwgbW9ja2luZywgYW5kIGJlbmNobWFya2luZy4K
        CiAgICAgICAgIkkgaGFkIGEgY2xhc3Mgd2l0aCBKaW0gV2VpcmljaCBvbiB0
        ZXN0aW5nIGxhc3Qgd2VlayBhbmQgd2Ugd2VyZQogICAgICAgICBhbGxvd2Vk
        IHRvIGNob29zZSBvdXIgdGVzdGluZyBmcmFtZXdvcmtzLiBLaXJrIEhhaW5l
        cyBhbmQgSSB3ZXJlCiAgICAgICAgIHBhaXJlZCB1cCBhbmQgd2UgY3JhY2tl
        ZCBvcGVuIHRoZSBjb2RlIGZvciBhIGZldyB0ZXN0CiAgICAgICAgIGZyYW1l
        d29ya3MuLi4KCiAgICAgICAgIEkgTVVTVCBzYXkgdGhhdCBtaW50aWVzdCBp
        cyAqdmVyeSogcmVhZGFibGUgLyB1bmRlcnN0YW5kYWJsZQogICAgICAgICBj
        b21wYXJlZCB0byB0aGUgJ290aGVyIHR3bycgb3B0aW9ucyB3ZSBsb29rZWQg
        YXQuIE5pY2VseSBkb25lIGFuZAogICAgICAgICB0aGFuayB5b3UgZm9yIGhl
        bHBpbmcgdXMga2VlcCBvdXIgbWVudGFsIHNhbml0eS4iCgogICAgICAgIC0t
        IFdheW5lIEUuIFNlZ3VpbgoKICAgIG1pbml0ZXN0L3VuaXQgaXMgYSBzbWFs
        bCBhbmQgaW5jcmVkaWJseSBmYXN0IHVuaXQgdGVzdGluZyBmcmFtZXdvcmsu
        CiAgICBJdCBwcm92aWRlcyBhIHJpY2ggc2V0IG9mIGFzc2VydGlvbnMgdG8g
        bWFrZSB5b3VyIHRlc3RzIGNsZWFuIGFuZAogICAgcmVhZGFibGUuCgogICAg
        bWluaXRlc3Qvc3BlYyBpcyBhIGZ1bmN0aW9uYWxseSBjb21wbGV0ZSBzcGVj
        IGVuZ2luZS4gSXQgaG9va3Mgb250bwogICAgbWluaXRlc3QvdW5pdCBhbmQg
        c2VhbWxlc3NseSBicmlkZ2VzIHRlc3QgYXNzZXJ0aW9ucyBvdmVyIHRvIHNw
        ZWMKICAgIGV4cGVjdGF0aW9ucy4KCiAgICBtaW5pdGVzdC9iZW5jaG1hcmsg
        aXMgYW4gYXdlc29tZSB3YXkgdG8gYXNzZXJ0IHRoZSBwZXJmb3JtYW5jZSBv
        ZiB5b3VyCiAgICBhbGdvcml0aG1zIGluIGEgcmVwZWF0YWJsZSBtYW5uZXIu
        IE5vdyB5b3UgY2FuIGFzc2VydCB0aGF0IHlvdXIgbmV3YgogICAgY28td29y
        a2VyIGRvZXNuJ3QgcmVwbGFjZSB5b3VyIGxpbmVhciBhbGdvcml0aG0gd2l0
        aCBhbiBleHBvbmVudGlhbAogICAgb25lIQoKICAgIG1pbml0ZXN0L21vY2sg
        YnkgU3RldmVuIEJha2VyLCBpcyBhIGJlYXV0aWZ1bGx5IHRpbnkgbW9jayBv
        YmplY3QKICAgIGZyYW1ld29yay4KCiAgICBtaW5pdGVzdC9wcmlkZSBzaG93
        cyBwcmlkZSBpbiB0ZXN0aW5nIGFuZCBhZGRzIGNvbG9yaW5nIHRvIHlvdXIg
        dGVzdAogICAgb3V0cHV0LiBJIGd1ZXNzIGl0IGlzIGFuIGV4YW1wbGUgb2Yg
        aG93IHRvIHdyaXRlIElPIHBpcGVzIHRvby4gOlAKCiAgICBtaW5pdGVzdC91
        bml0IGlzIG1lYW50IHRvIGhhdmUgYSBjbGVhbiBpbXBsZW1lbnRhdGlvbiBm
        b3IgbGFuZ3VhZ2UKICAgIGltcGxlbWVudG9ycyB0aGF0IG5lZWQgYSBtaW5p
        bWFsIHNldCBvZiBtZXRob2RzIHRvIGJvb3RzdHJhcCBhIHdvcmtpbmcKICAg
        IHRlc3Qgc3VpdGUuIEZvciBleGFtcGxlLCB0aGVyZSBpcyBubyBtYWdpYyBp
        bnZvbHZlZCBmb3IgdGVzdC1jYXNlCiAgICBkaXNjb3ZlcnkuCgogICAgICAg
        ICJBZ2FpbiwgSSBjYW7igJl0IHByYWlzZSBlbm91Z2ggdGhlIGlkZWEgb2Yg
        YSB0ZXN0aW5nL3NwZWNpbmcKICAgICAgICAgZnJhbWV3b3JrIHRoYXQgSSBj
        YW4gYWN0dWFsbHkgcmVhZCBpbiBmdWxsIGluIG9uZSBzaXR0aW5nISIKCiAg
        ICAgICAgLS0gUGlvdHIgU3pvdGtvd3NraQogIGRvd25sb2Fkc19jb3VudDog
        MjU4NjAKICBtZXRhZGF0YToge30KICBudW1iZXI6IDIuNi4yCiAgc3VtbWFy
        eTogbWluaXRlc3QgcHJvdmlkZXMgYSBjb21wbGV0ZSBzdWl0ZSBvZiB0ZXN0
        aW5nIGZhY2lsaXRpZXMgc3VwcG9ydGluZyBUREQsCiAgICBCREQsIG1vY2tp
        bmcsIGFuZCBiZW5jaG1hcmtpbmcKICBwbGF0Zm9ybTogcnVieQogIHJ1Ynln
        ZW1zX3ZlcnNpb246ICI+PSAwIgogIHJ1YnlfdmVyc2lvbjogCiAgcHJlcmVs
        ZWFzZTogZmFsc2UKICBsaWNlbnNlczogCiAgcmVxdWlyZW1lbnRzOiAKICBz
        aGE6IDk2N2NkZTMxNzliMTU4N2JlMjQyZDlkMDJjZTM3Yzg1OThjN2VkMWY0
        ZWQ2OGMwZWY3Y2ZiZWZiY2JiYjVhMDYKLSBhdXRob3JzOiBSeWFuIERhdmlz
        CiAgYnVpbHRfYXQ6ICcyMDExLTA5LTI4VDAwOjAwOjAwLjAwMFonCiAgY3Jl
        YXRlZF9hdDogJzIwMTEtMDktMjhUMDE6MTU6NTkuMjEyWicKICBkZXNjcmlw
        dGlvbjogfC0KICAgIG1pbml0ZXN0IHByb3ZpZGVzIGEgY29tcGxldGUgc3Vp
        dGUgb2YgdGVzdGluZyBmYWNpbGl0aWVzIHN1cHBvcnRpbmcKICAgIFRERCwg
        QkRELCBtb2NraW5nLCBhbmQgYmVuY2htYXJraW5nLgoKICAgICAgICAiSSBo
        YWQgYSBjbGFzcyB3aXRoIEppbSBXZWlyaWNoIG9uIHRlc3RpbmcgbGFzdCB3
        ZWVrIGFuZCB3ZSB3ZXJlCiAgICAgICAgIGFsbG93ZWQgdG8gY2hvb3NlIG91
        ciB0ZXN0aW5nIGZyYW1ld29ya3MuIEtpcmsgSGFpbmVzIGFuZCBJIHdlcmUK
        ICAgICAgICAgcGFpcmVkIHVwIGFuZCB3ZSBjcmFja2VkIG9wZW4gdGhlIGNv
        ZGUgZm9yIGEgZmV3IHRlc3QKICAgICAgICAgZnJhbWV3b3Jrcy4uLgoKICAg
        ICAgICAgSSBNVVNUIHNheSB0aGF0IG1pbnRpZXN0IGlzICp2ZXJ5KiByZWFk
        YWJsZSAvIHVuZGVyc3RhbmRhYmxlCiAgICAgICAgIGNvbXBhcmVkIHRvIHRo
        ZSAnb3RoZXIgdHdvJyBvcHRpb25zIHdlIGxvb2tlZCBhdC4gTmljZWx5IGRv
        bmUgYW5kCiAgICAgICAgIHRoYW5rIHlvdSBmb3IgaGVscGluZyB1cyBrZWVw
        IG91ciBtZW50YWwgc2FuaXR5LiIKCiAgICAgICAgLS0gV2F5bmUgRS4gU2Vn
        dWluCgogICAgbWluaXRlc3QvdW5pdCBpcyBhIHNtYWxsIGFuZCBpbmNyZWRp
        Ymx5IGZhc3QgdW5pdCB0ZXN0aW5nIGZyYW1ld29yay4KICAgIEl0IHByb3Zp
        ZGVzIGEgcmljaCBzZXQgb2YgYXNzZXJ0aW9ucyB0byBtYWtlIHlvdXIgdGVz
        dHMgY2xlYW4gYW5kCiAgICByZWFkYWJsZS4KCiAgICBtaW5pdGVzdC9zcGVj
        IGlzIGEgZnVuY3Rpb25hbGx5IGNvbXBsZXRlIHNwZWMgZW5naW5lLiBJdCBo
        b29rcyBvbnRvCiAgICBtaW5pdGVzdC91bml0IGFuZCBzZWFtbGVzc2x5IGJy
        aWRnZXMgdGVzdCBhc3NlcnRpb25zIG92ZXIgdG8gc3BlYwogICAgZXhwZWN0
        YXRpb25zLgoKICAgIG1pbml0ZXN0L2JlbmNobWFyayBpcyBhbiBhd2Vzb21l
        IHdheSB0byBhc3NlcnQgdGhlIHBlcmZvcm1hbmNlIG9mIHlvdXIKICAgIGFs
        Z29yaXRobXMgaW4gYSByZXBlYXRhYmxlIG1hbm5lci4gTm93IHlvdSBjYW4g
        YXNzZXJ0IHRoYXQgeW91ciBuZXdiCiAgICBjby13b3JrZXIgZG9lc24ndCBy
        ZXBsYWNlIHlvdXIgbGluZWFyIGFsZ29yaXRobSB3aXRoIGFuIGV4cG9uZW50
        aWFsCiAgICBvbmUhCgogICAgbWluaXRlc3QvbW9jayBieSBTdGV2ZW4gQmFr
        ZXIsIGlzIGEgYmVhdXRpZnVsbHkgdGlueSBtb2NrIG9iamVjdAogICAgZnJh
        bWV3b3JrLgoKICAgIG1pbml0ZXN0L3ByaWRlIHNob3dzIHByaWRlIGluIHRl
        c3RpbmcgYW5kIGFkZHMgY29sb3JpbmcgdG8geW91ciB0ZXN0CiAgICBvdXRw
        dXQuIEkgZ3Vlc3MgaXQgaXMgYW4gZXhhbXBsZSBvZiBob3cgdG8gd3JpdGUg
        SU8gcGlwZXMgdG9vLiA6UAoKICAgIG1pbml0ZXN0L3VuaXQgaXMgbWVhbnQg
        dG8gaGF2ZSBhIGNsZWFuIGltcGxlbWVudGF0aW9uIGZvciBsYW5ndWFnZQog
        ICAgaW1wbGVtZW50b3JzIHRoYXQgbmVlZCBhIG1pbmltYWwgc2V0IG9mIG1l
        dGhvZHMgdG8gYm9vdHN0cmFwIGEgd29ya2luZwogICAgdGVzdCBzdWl0ZS4g
        Rm9yIGV4YW1wbGUsIHRoZXJlIGlzIG5vIG1hZ2ljIGludm9sdmVkIGZvciB0
        ZXN0LWNhc2UKICAgIGRpc2NvdmVyeS4KCiAgICAgICAgIkFnYWluLCBJIGNh
        buKAmXQgcHJhaXNlIGVub3VnaCB0aGUgaWRlYSBvZiBhIHRlc3Rpbmcvc3Bl
        Y2luZwogICAgICAgICBmcmFtZXdvcmsgdGhhdCBJIGNhbiBhY3R1YWxseSBy
        ZWFkIGluIGZ1bGwgaW4gb25lIHNpdHRpbmchIgoKICAgICAgICAtLSBQaW90
        ciBTem90a293c2tpCiAgZG93bmxvYWRzX2NvdW50OiA2ODE1OQogIG1ldGFk
        YXRhOiB7fQogIG51bWJlcjogMi42LjEKICBzdW1tYXJ5OiBtaW5pdGVzdCBw
        cm92aWRlcyBhIGNvbXBsZXRlIHN1aXRlIG9mIHRlc3RpbmcgZmFjaWxpdGll
        cyBzdXBwb3J0aW5nIFRERCwKICAgIEJERCwgbW9ja2luZywgYW5kIGJlbmNo
        bWFya2luZwogIHBsYXRmb3JtOiBydWJ5CiAgcnVieWdlbXNfdmVyc2lvbjog
        Ij49IDAiCiAgcnVieV92ZXJzaW9uOiAKICBwcmVyZWxlYXNlOiBmYWxzZQog
        IGxpY2Vuc2VzOiAKICByZXF1aXJlbWVudHM6IAogIHNoYTogNDliZTg0N2Iz
        YmNkYTBhOTViMmVhOWU2N2FlMjg5NmEzYmVmMDI3YWUyMjI2NTZkM2M2YWI3
        MmZkNzhhZDEwOQotIGF1dGhvcnM6IFJ5YW4gRGF2aXMKICBidWlsdF9hdDog
        JzIwMTEtMDktMTNUMDA6MDA6MDAuMDAwWicKICBjcmVhdGVkX2F0OiAnMjAx
        MS0wOS0xM1QyMzoyMjowOS4zMzRaJwogIGRlc2NyaXB0aW9uOiB8LQogICAg
        bWluaXRlc3QgcHJvdmlkZXMgYSBjb21wbGV0ZSBzdWl0ZSBvZiB0ZXN0aW5n
        IGZhY2lsaXRpZXMgc3VwcG9ydGluZwogICAgVERELCBCREQsIG1vY2tpbmcs
        IGFuZCBiZW5jaG1hcmtpbmcuCgogICAgICAgICJJIGhhZCBhIGNsYXNzIHdp
        dGggSmltIFdlaXJpY2ggb24gdGVzdGluZyBsYXN0IHdlZWsgYW5kIHdlIHdl
        cmUKICAgICAgICAgYWxsb3dlZCB0byBjaG9vc2Ugb3VyIHRlc3RpbmcgZnJh
        bWV3b3Jrcy4gS2lyayBIYWluZXMgYW5kIEkgd2VyZQogICAgICAgICBwYWly
        ZWQgdXAgYW5kIHdlIGNyYWNrZWQgb3BlbiB0aGUgY29kZSBmb3IgYSBmZXcg
        dGVzdAogICAgICAgICBmcmFtZXdvcmtzLi4uCgogICAgICAgICBJIE1VU1Qg
        c2F5IHRoYXQgbWludGllc3QgaXMgKnZlcnkqIHJlYWRhYmxlIC8gdW5kZXJz
        dGFuZGFibGUKICAgICAgICAgY29tcGFyZWQgdG8gdGhlICdvdGhlciB0d28n
        IG9wdGlvbnMgd2UgbG9va2VkIGF0LiBOaWNlbHkgZG9uZSBhbmQKICAgICAg
        ICAgdGhhbmsgeW91IGZvciBoZWxwaW5nIHVzIGtlZXAgb3VyIG1lbnRhbCBz
        YW5pdHkuIgoKICAgICAgICAtLSBXYXluZSBFLiBTZWd1aW4KCiAgICBtaW5p
        dGVzdC91bml0IGlzIGEgc21hbGwgYW5kIGluY3JlZGlibHkgZmFzdCB1bml0
        IHRlc3RpbmcgZnJhbWV3b3JrLgogICAgSXQgcHJvdmlkZXMgYSByaWNoIHNl
        dCBvZiBhc3NlcnRpb25zIHRvIG1ha2UgeW91ciB0ZXN0cyBjbGVhbiBhbmQK
        ICAgIHJlYWRhYmxlLgoKICAgIG1pbml0ZXN0L3NwZWMgaXMgYSBmdW5jdGlv
        bmFsbHkgY29tcGxldGUgc3BlYyBlbmdpbmUuIEl0IGhvb2tzIG9udG8KICAg
        IG1pbml0ZXN0L3VuaXQgYW5kIHNlYW1sZXNzbHkgYnJpZGdlcyB0ZXN0IGFz
        c2VydGlvbnMgb3ZlciB0byBzcGVjCiAgICBleHBlY3RhdGlvbnMuCgogICAg
        bWluaXRlc3QvYmVuY2htYXJrIGlzIGFuIGF3ZXNvbWUgd2F5IHRvIGFzc2Vy
        dCB0aGUgcGVyZm9ybWFuY2Ugb2YgeW91cgogICAgYWxnb3JpdGhtcyBpbiBh
        IHJlcGVhdGFibGUgbWFubmVyLiBOb3cgeW91IGNhbiBhc3NlcnQgdGhhdCB5
        b3VyIG5ld2IKICAgIGNvLXdvcmtlciBkb2Vzbid0IHJlcGxhY2UgeW91ciBs
        aW5lYXIgYWxnb3JpdGhtIHdpdGggYW4gZXhwb25lbnRpYWwKICAgIG9uZSEK
        CiAgICBtaW5pdGVzdC9tb2NrIGJ5IFN0ZXZlbiBCYWtlciwgaXMgYSBiZWF1
        dGlmdWxseSB0aW55IG1vY2sgb2JqZWN0CiAgICBmcmFtZXdvcmsuCgogICAg
        bWluaXRlc3QvcHJpZGUgc2hvd3MgcHJpZGUgaW4gdGVzdGluZyBhbmQgYWRk
        cyBjb2xvcmluZyB0byB5b3VyIHRlc3QKICAgIG91dHB1dC4gSSBndWVzcyBp
        dCBpcyBhbiBleGFtcGxlIG9mIGhvdyB0byB3cml0ZSBJTyBwaXBlcyB0b28u
        IDpQCgogICAgbWluaXRlc3QvdW5pdCBpcyBtZWFudCB0byBoYXZlIGEgY2xl
        YW4gaW1wbGVtZW50YXRpb24gZm9yIGxhbmd1YWdlCiAgICBpbXBsZW1lbnRv
        cnMgdGhhdCBuZWVkIGEgbWluaW1hbCBzZXQgb2YgbWV0aG9kcyB0byBib290
        c3RyYXAgYSB3b3JraW5nCiAgICB0ZXN0IHN1aXRlLiBGb3IgZXhhbXBsZSwg
        dGhlcmUgaXMgbm8gbWFnaWMgaW52b2x2ZWQgZm9yIHRlc3QtY2FzZQogICAg
        ZGlzY292ZXJ5LgoKICAgICAgICAiQWdhaW4sIEkgY2Fu4oCZdCBwcmFpc2Ug
        ZW5vdWdoIHRoZSBpZGVhIG9mIGEgdGVzdGluZy9zcGVjaW5nCiAgICAgICAg
        IGZyYW1ld29yayB0aGF0IEkgY2FuIGFjdHVhbGx5IHJlYWQgaW4gZnVsbCBp
        biBvbmUgc2l0dGluZyEiCgogICAgICAgIC0tIFBpb3RyIFN6b3Rrb3dza2kK
        ICBkb3dubG9hZHNfY291bnQ6IDEwMjY3CiAgbWV0YWRhdGE6IHt9CiAgbnVt
        YmVyOiAyLjYuMAogIHN1bW1hcnk6IG1pbml0ZXN0IHByb3ZpZGVzIGEgY29t
        cGxldGUgc3VpdGUgb2YgdGVzdGluZyBmYWNpbGl0aWVzIHN1cHBvcnRpbmcg
        VERELAogICAgQkRELCBtb2NraW5nLCBhbmQgYmVuY2htYXJraW5nCiAgcGxh
        dGZvcm06IHJ1YnkKICBydWJ5Z2Vtc192ZXJzaW9uOiAiPj0gMCIKICBydWJ5
        X3ZlcnNpb246IAogIHByZXJlbGVhc2U6IGZhbHNlCiAgbGljZW5zZXM6IAog
        IHJlcXVpcmVtZW50czogCiAgc2hhOiAxYjQ4NmRjMGQ2YzQ3ZTM1Y2YxNTEy
        NDI3MTY1ZTM2NmI2YjA0ZjAxYTc2YWJkZDZkN2JjMzhjZGQ0Y2U4OGU0Ci0g
        YXV0aG9yczogUnlhbiBEYXZpcwogIGJ1aWx0X2F0OiAnMjAxMS0wOC0yN1Qw
        MDowMDowMC4wMDBaJwogIGNyZWF0ZWRfYXQ6ICcyMDExLTA4LTI3VDIwOjI1
        OjAzLjY2MlonCiAgZGVzY3JpcHRpb246IHwtCiAgICBtaW5pdGVzdCBwcm92
        aWRlcyBhIGNvbXBsZXRlIHN1aXRlIG9mIHRlc3RpbmcgZmFjaWxpdGllcyBz
        dXBwb3J0aW5nCiAgICBUREQsIEJERCwgbW9ja2luZywgYW5kIGJlbmNobWFy
        a2luZy4KCiAgICBtaW5pdGVzdC91bml0IGlzIGEgc21hbGwgYW5kIGluY3Jl
        ZGlibHkgZmFzdCB1bml0IHRlc3RpbmcgZnJhbWV3b3JrLgogICAgSXQgcHJv
        dmlkZXMgYSByaWNoIHNldCBvZiBhc3NlcnRpb25zIHRvIG1ha2UgeW91ciB0
        ZXN0cyBjbGVhbiBhbmQKICAgIHJlYWRhYmxlLgoKICAgIG1pbml0ZXN0L3Nw
        ZWMgaXMgYSBmdW5jdGlvbmFsbHkgY29tcGxldGUgc3BlYyBlbmdpbmUuIEl0
        IGhvb2tzIG9udG8KICAgIG1pbml0ZXN0L3VuaXQgYW5kIHNlYW1sZXNzbHkg
        YnJpZGdlcyB0ZXN0IGFzc2VydGlvbnMgb3ZlciB0byBzcGVjCiAgICBleHBl
        Y3RhdGlvbnMuCgogICAgbWluaXRlc3QvYmVuY2htYXJrIGlzIGFuIGF3ZXNv
        bWUgd2F5IHRvIGFzc2VydCB0aGUgcGVyZm9ybWFuY2Ugb2YgeW91cgogICAg
        YWxnb3JpdGhtcyBpbiBhIHJlcGVhdGFibGUgbWFubmVyLiBOb3cgeW91IGNh
        biBhc3NlcnQgdGhhdCB5b3VyIG5ld2IKICAgIGNvLXdvcmtlciBkb2Vzbid0
        IHJlcGxhY2UgeW91ciBsaW5lYXIgYWxnb3JpdGhtIHdpdGggYW4gZXhwb25l
        bnRpYWwKICAgIG9uZSEKCiAgICBtaW5pdGVzdC9tb2NrIGJ5IFN0ZXZlbiBC
        YWtlciwgaXMgYSBiZWF1dGlmdWxseSB0aW55IG1vY2sgb2JqZWN0CiAgICBm
        cmFtZXdvcmsuCgogICAgbWluaXRlc3QvcHJpZGUgc2hvd3MgcHJpZGUgaW4g
        dGVzdGluZyBhbmQgYWRkcyBjb2xvcmluZyB0byB5b3VyIHRlc3QKICAgIG91
        dHB1dC4gSSBndWVzcyBpdCBpcyBhbiBleGFtcGxlIG9mIGhvdyB0byB3cml0
        ZSBJTyBwaXBlcyB0b28uIDpQCgogICAgbWluaXRlc3QvdW5pdCBpcyBtZWFu
        dCB0byBoYXZlIGEgY2xlYW4gaW1wbGVtZW50YXRpb24gZm9yIGxhbmd1YWdl
        CiAgICBpbXBsZW1lbnRvcnMgdGhhdCBuZWVkIGEgbWluaW1hbCBzZXQgb2Yg
        bWV0aG9kcyB0byBib290c3RyYXAgYSB3b3JraW5nCiAgICB0ZXN0IHN1aXRl
        LiBGb3IgZXhhbXBsZSwgdGhlcmUgaXMgbm8gbWFnaWMgaW52b2x2ZWQgZm9y
        IHRlc3QtY2FzZQogICAgZGlzY292ZXJ5LgogIGRvd25sb2Fkc19jb3VudDog
        MTMwNTMzCiAgbWV0YWRhdGE6IHt9CiAgbnVtYmVyOiAyLjUuMQogIHN1bW1h
        cnk6IG1pbml0ZXN0IHByb3ZpZGVzIGEgY29tcGxldGUgc3VpdGUgb2YgdGVz
        dGluZyBmYWNpbGl0aWVzIHN1cHBvcnRpbmcgVERELAogICAgQkRELCBtb2Nr
        aW5nLCBhbmQgYmVuY2htYXJraW5nCiAgcGxhdGZvcm06IHJ1YnkKICBydWJ5
        Z2Vtc192ZXJzaW9uOiAiPj0gMCIKICBydWJ5X3ZlcnNpb246IAogIHByZXJl
        bGVhc2U6IGZhbHNlCiAgbGljZW5zZXM6IAogIHJlcXVpcmVtZW50czogCiAg
        c2hhOiBhNDI0NjFjODA2MzQ0NGVmZGIyMzRiMjkxNDQyMjAwMWNjZjQwZjlk
        MTVmYzJhMjQ3OTIyYmRmZTBkMzYwODg2Ci0gYXV0aG9yczogUnlhbiBEYXZp
        cwogIGJ1aWx0X2F0OiAnMjAxMS0wOC0xOVQwMDowMDowMC4wMDBaJwogIGNy
        ZWF0ZWRfYXQ6ICcyMDExLTA4LTE5VDAxOjQzOjQ2LjIyM1onCiAgZGVzY3Jp
        cHRpb246IHwtCiAgICBtaW5pdGVzdCBwcm92aWRlcyBhIGNvbXBsZXRlIHN1
        aXRlIG9mIHRlc3RpbmcgZmFjaWxpdGllcyBzdXBwb3J0aW5nCiAgICBUREQs
        IEJERCwgbW9ja2luZywgYW5kIGJlbmNobWFya2luZy4KCiAgICBtaW5pdGVz
        dC91bml0IGlzIGEgc21hbGwgYW5kIGluY3JlZGlibHkgZmFzdCB1bml0IHRl
        c3RpbmcgZnJhbWV3b3JrLgogICAgSXQgcHJvdmlkZXMgYSByaWNoIHNldCBv
        ZiBhc3NlcnRpb25zIHRvIG1ha2UgeW91ciB0ZXN0cyBjbGVhbiBhbmQKICAg
        IHJlYWRhYmxlLgoKICAgIG1pbml0ZXN0L3NwZWMgaXMgYSBmdW5jdGlvbmFs
        bHkgY29tcGxldGUgc3BlYyBlbmdpbmUuIEl0IGhvb2tzIG9udG8KICAgIG1p
        bml0ZXN0L3VuaXQgYW5kIHNlYW1sZXNzbHkgYnJpZGdlcyB0ZXN0IGFzc2Vy
        dGlvbnMgb3ZlciB0byBzcGVjCiAgICBleHBlY3RhdGlvbnMuCgogICAgbWlu
        aXRlc3QvYmVuY2htYXJrIGlzIGFuIGF3ZXNvbWUgd2F5IHRvIGFzc2VydCB0
        aGUgcGVyZm9ybWFuY2Ugb2YgeW91cgogICAgYWxnb3JpdGhtcyBpbiBhIHJl
        cGVhdGFibGUgbWFubmVyLiBOb3cgeW91IGNhbiBhc3NlcnQgdGhhdCB5b3Vy
        IG5ld2IKICAgIGNvLXdvcmtlciBkb2Vzbid0IHJlcGxhY2UgeW91ciBsaW5l
        YXIgYWxnb3JpdGhtIHdpdGggYW4gZXhwb25lbnRpYWwKICAgIG9uZSEKCiAg
        ICBtaW5pdGVzdC9tb2NrIGJ5IFN0ZXZlbiBCYWtlciwgaXMgYSBiZWF1dGlm
        dWxseSB0aW55IG1vY2sgb2JqZWN0CiAgICBmcmFtZXdvcmsuCgogICAgbWlu
        aXRlc3QvcHJpZGUgc2hvd3MgcHJpZGUgaW4gdGVzdGluZyBhbmQgYWRkcyBj
        b2xvcmluZyB0byB5b3VyIHRlc3QKICAgIG91dHB1dC4gSSBndWVzcyBpdCBp
        cyBhbiBleGFtcGxlIG9mIGhvdyB0byB3cml0ZSBJTyBwaXBlcyB0b28uIDpQ
        CgogICAgbWluaXRlc3QvdW5pdCBpcyBtZWFudCB0byBoYXZlIGEgY2xlYW4g
        aW1wbGVtZW50YXRpb24gZm9yIGxhbmd1YWdlCiAgICBpbXBsZW1lbnRvcnMg
        dGhhdCBuZWVkIGEgbWluaW1hbCBzZXQgb2YgbWV0aG9kcyB0byBib290c3Ry
        YXAgYSB3b3JraW5nCiAgICB0ZXN0IHN1aXRlLiBGb3IgZXhhbXBsZSwgdGhl
        cmUgaXMgbm8gbWFnaWMgaW52b2x2ZWQgZm9yIHRlc3QtY2FzZQogICAgZGlz
        Y292ZXJ5LgogIGRvd25sb2Fkc19jb3VudDogNjgxNwogIG1ldGFkYXRhOiB7
        fQogIG51bWJlcjogMi41LjAKICBzdW1tYXJ5OiBtaW5pdGVzdCBwcm92aWRl
        cyBhIGNvbXBsZXRlIHN1aXRlIG9mIHRlc3RpbmcgZmFjaWxpdGllcyBzdXBw
        b3J0aW5nIFRERCwKICAgIEJERCwgbW9ja2luZywgYW5kIGJlbmNobWFya2lu
        ZwogIHBsYXRmb3JtOiBydWJ5CiAgcnVieWdlbXNfdmVyc2lvbjogIj49IDAi
        CiAgcnVieV92ZXJzaW9uOiAKICBwcmVyZWxlYXNlOiBmYWxzZQogIGxpY2Vu
        c2VzOiAKICByZXF1aXJlbWVudHM6IAogIHNoYTogZmM3ODJiZTBmODFmM2E3
        NjM5OGRmNWEwZGQyZGM3MWY2YjYxMWY4MjQwNjJhNGM1NTU1MjZiOGJmNTkz
        MTBkMgotIGF1dGhvcnM6IFJ5YW4gRGF2aXMKICBidWlsdF9hdDogJzIwMTEt
        MDgtMTBUMDA6MDA6MDAuMDAwWicKICBjcmVhdGVkX2F0OiAnMjAxMS0wOC0x
        MFQwMDowNzo0MS45MzlaJwogIGRlc2NyaXB0aW9uOiB8LQogICAgbWluaXRl
        c3QgcHJvdmlkZXMgYSBjb21wbGV0ZSBzdWl0ZSBvZiB0ZXN0aW5nIGZhY2ls
        aXRpZXMgc3VwcG9ydGluZwogICAgVERELCBCREQsIG1vY2tpbmcsIGFuZCBi
        ZW5jaG1hcmtpbmcuCgogICAgbWluaXRlc3QvdW5pdCBpcyBhIHNtYWxsIGFu
        ZCBpbmNyZWRpYmx5IGZhc3QgdW5pdCB0ZXN0aW5nIGZyYW1ld29yay4KICAg
        IEl0IHByb3ZpZGVzIGEgcmljaCBzZXQgb2YgYXNzZXJ0aW9ucyB0byBtYWtl
        IHlvdXIgdGVzdHMgY2xlYW4gYW5kCiAgICByZWFkYWJsZS4KCiAgICBtaW5p
        dGVzdC9zcGVjIGlzIGEgZnVuY3Rpb25hbGx5IGNvbXBsZXRlIHNwZWMgZW5n
        aW5lLiBJdCBob29rcyBvbnRvCiAgICBtaW5pdGVzdC91bml0IGFuZCBzZWFt
        bGVzc2x5IGJyaWRnZXMgdGVzdCBhc3NlcnRpb25zIG92ZXIgdG8gc3BlYwog
        ICAgZXhwZWN0YXRpb25zLgoKICAgIG1pbml0ZXN0L2JlbmNobWFyayBpcyBh
        biBhd2Vzb21lIHdheSB0byBhc3NlcnQgdGhlIHBlcmZvcm1hbmNlIG9mIHlv
        dXIKICAgIGFsZ29yaXRobXMgaW4gYSByZXBlYXRhYmxlIG1hbm5lci4gTm93
        IHlvdSBjYW4gYXNzZXJ0IHRoYXQgeW91ciBuZXdiCiAgICBjby13b3JrZXIg
        ZG9lc24ndCByZXBsYWNlIHlvdXIgbGluZWFyIGFsZ29yaXRobSB3aXRoIGFu
        IGV4cG9uZW50aWFsCiAgICBvbmUhCgogICAgbWluaXRlc3QvbW9jayBieSBT
        dGV2ZW4gQmFrZXIsIGlzIGEgYmVhdXRpZnVsbHkgdGlueSBtb2NrIG9iamVj
        dAogICAgZnJhbWV3b3JrLgoKICAgIG1pbml0ZXN0L3ByaWRlIHNob3dzIHBy
        aWRlIGluIHRlc3RpbmcgYW5kIGFkZHMgY29sb3JpbmcgdG8geW91ciB0ZXN0
        CiAgICBvdXRwdXQuIEkgZ3Vlc3MgaXQgaXMgYW4gZXhhbXBsZSBvZiBob3cg
        dG8gd3JpdGUgSU8gcGlwZXMgdG9vLiA6UAoKICAgIG1pbml0ZXN0L3VuaXQg
        aXMgbWVhbnQgdG8gaGF2ZSBhIGNsZWFuIGltcGxlbWVudGF0aW9uIGZvciBs
        YW5ndWFnZQogICAgaW1wbGVtZW50b3JzIHRoYXQgbmVlZCBhIG1pbmltYWwg
        c2V0IG9mIG1ldGhvZHMgdG8gYm9vdHN0cmFwIGEgd29ya2luZwogICAgdGVz
        dCBzdWl0ZS4gRm9yIGV4YW1wbGUsIHRoZXJlIGlzIG5vIG1hZ2ljIGludm9s
        dmVkIGZvciB0ZXN0LWNhc2UKICAgIGRpc2NvdmVyeS4KICBkb3dubG9hZHNf
        Y291bnQ6IDEyNzcyCiAgbWV0YWRhdGE6IHt9CiAgbnVtYmVyOiAyLjQuMAog
        IHN1bW1hcnk6IG1pbml0ZXN0IHByb3ZpZGVzIGEgY29tcGxldGUgc3VpdGUg
        b2YgdGVzdGluZyBmYWNpbGl0aWVzIHN1cHBvcnRpbmcgVERELAogICAgQkRE
        LCBtb2NraW5nLCBhbmQgYmVuY2htYXJraW5nCiAgcGxhdGZvcm06IHJ1YnkK
        ICBydWJ5Z2Vtc192ZXJzaW9uOiAiPj0gMCIKICBydWJ5X3ZlcnNpb246IAog
        IHByZXJlbGVhc2U6IGZhbHNlCiAgbGljZW5zZXM6IAogIHJlcXVpcmVtZW50
        czogCiAgc2hhOiA5YWZlMjdiZjI1YmFkM2U3ODJhMWQ2ZDdkZWNkNGU4MmNi
        MmYyMDNjOWRkMTIzY2IxYTU3ZWIxODVkMDk3NDNmCi0gYXV0aG9yczogUnlh
        biBEYXZpcwogIGJ1aWx0X2F0OiAnMjAxMS0wNi0yM1QwMDowMDowMC4wMDBa
        JwogIGNyZWF0ZWRfYXQ6ICcyMDExLTA2LTIzVDA0OjAyOjE1Ljg3NVonCiAg
        ZGVzY3JpcHRpb246IHwtCiAgICBtaW5pdGVzdCBwcm92aWRlcyBhIGNvbXBs
        ZXRlIHN1aXRlIG9mIHRlc3RpbmcgZmFjaWxpdGllcyBzdXBwb3J0aW5nCiAg
        ICBUREQsIEJERCwgbW9ja2luZywgYW5kIGJlbmNobWFya2luZy4KCiAgICBt
        aW5pdGVzdC91bml0IGlzIGEgc21hbGwgYW5kIGluY3JlZGlibHkgZmFzdCB1
        bml0IHRlc3RpbmcgZnJhbWV3b3JrLgogICAgSXQgcHJvdmlkZXMgYSByaWNo
        IHNldCBvZiBhc3NlcnRpb25zIHRvIG1ha2UgeW91ciB0ZXN0cyBjbGVhbiBh
        bmQKICAgIHJlYWRhYmxlLgoKICAgIG1pbml0ZXN0L3NwZWMgaXMgYSBmdW5j
        dGlvbmFsbHkgY29tcGxldGUgc3BlYyBlbmdpbmUuIEl0IGhvb2tzIG9udG8K
        ICAgIG1pbml0ZXN0L3VuaXQgYW5kIHNlYW1sZXNzbHkgYnJpZGdlcyB0ZXN0
        IGFzc2VydGlvbnMgb3ZlciB0byBzcGVjCiAgICBleHBlY3RhdGlvbnMuCgog
        ICAgbWluaXRlc3QvYmVuY2htYXJrIGlzIGFuIGF3ZXNvbWUgd2F5IHRvIGFz
        c2VydCB0aGUgcGVyZm9ybWFuY2Ugb2YgeW91cgogICAgYWxnb3JpdGhtcyBp
        biBhIHJlcGVhdGFibGUgbWFubmVyLiBOb3cgeW91IGNhbiBhc3NlcnQgdGhh
        dCB5b3VyIG5ld2IKICAgIGNvLXdvcmtlciBkb2Vzbid0IHJlcGxhY2UgeW91
        ciBsaW5lYXIgYWxnb3JpdGhtIHdpdGggYW4gZXhwb25lbnRpYWwKICAgIG9u
        ZSEKCiAgICBtaW5pdGVzdC9tb2NrIGJ5IFN0ZXZlbiBCYWtlciwgaXMgYSBi
        ZWF1dGlmdWxseSB0aW55IG1vY2sgb2JqZWN0CiAgICBmcmFtZXdvcmsuCgog
        ICAgbWluaXRlc3QvcHJpZGUgc2hvd3MgcHJpZGUgaW4gdGVzdGluZyBhbmQg
        YWRkcyBjb2xvcmluZyB0byB5b3VyIHRlc3QKICAgIG91dHB1dC4KCiAgICBt
        aW5pdGVzdC91bml0IGlzIG1lYW50IHRvIGhhdmUgYSBjbGVhbiBpbXBsZW1l
        bnRhdGlvbiBmb3IgbGFuZ3VhZ2UKICAgIGltcGxlbWVudG9ycyB0aGF0IG5l
        ZWQgYSBtaW5pbWFsIHNldCBvZiBtZXRob2RzIHRvIGJvb3RzdHJhcCBhIHdv
        cmtpbmcKICAgIHRlc3Qgc3VpdGUuIEZvciBleGFtcGxlLCB0aGVyZSBpcyBu
        byBtYWdpYyBpbnZvbHZlZCBmb3IgdGVzdC1jYXNlCiAgICBkaXNjb3Zlcnku
        CiAgZG93bmxvYWRzX2NvdW50OiAyMzE1NQogIG1ldGFkYXRhOiB7fQogIG51
        bWJlcjogMi4zLjEKICBzdW1tYXJ5OiBtaW5pdGVzdCBwcm92aWRlcyBhIGNv
        bXBsZXRlIHN1aXRlIG9mIHRlc3RpbmcgZmFjaWxpdGllcyBzdXBwb3J0aW5n
        IFRERCwKICAgIEJERCwgbW9ja2luZywgYW5kIGJlbmNobWFya2luZwogIHBs
        YXRmb3JtOiBydWJ5CiAgcnVieWdlbXNfdmVyc2lvbjogIj49IDAiCiAgcnVi
        eV92ZXJzaW9uOiAKICBwcmVyZWxlYXNlOiBmYWxzZQogIGxpY2Vuc2VzOiAK
        ICByZXF1aXJlbWVudHM6IAogIHNoYTogY2M2MzgzZTQ3M2U3MTM1NTA4ZDVj
        MmIxM2FlNmFmNTY0YzUyMGYwZTFhYzk0ZTQyZjIzYzNkNTRjNzc0NjYxOAot
        IGF1dGhvcnM6IFJ5YW4gRGF2aXMKICBidWlsdF9hdDogJzIwMTEtMDYtMThU
        MDA6MDA6MDAuMDAwWicKICBjcmVhdGVkX2F0OiAnMjAxMS0wNi0xOFQwMDo0
        Nzo0NS42NzNaJwogIGRlc2NyaXB0aW9uOiB8LQogICAgbWluaXRlc3QgcHJv
        dmlkZXMgYSBjb21wbGV0ZSBzdWl0ZSBvZiB0ZXN0aW5nIGZhY2lsaXRpZXMg
        c3VwcG9ydGluZwogICAgVERELCBCREQsIG1vY2tpbmcsIGFuZCBiZW5jaG1h
        cmtpbmcuCgogICAgbWluaXRlc3QvdW5pdCBpcyBhIHNtYWxsIGFuZCBpbmNy
        ZWRpYmx5IGZhc3QgdW5pdCB0ZXN0aW5nIGZyYW1ld29yay4KICAgIEl0IHBy
        b3ZpZGVzIGEgcmljaCBzZXQgb2YgYXNzZXJ0aW9ucyB0byBtYWtlIHlvdXIg
        dGVzdHMgY2xlYW4gYW5kCiAgICByZWFkYWJsZS4KCiAgICBtaW5pdGVzdC9z
        cGVjIGlzIGEgZnVuY3Rpb25hbGx5IGNvbXBsZXRlIHNwZWMgZW5naW5lLiBJ
        dCBob29rcyBvbnRvCiAgICBtaW5pdGVzdC91bml0IGFuZCBzZWFtbGVzc2x5
        IGJyaWRnZXMgdGVzdCBhc3NlcnRpb25zIG92ZXIgdG8gc3BlYwogICAgZXhw
        ZWN0YXRpb25zLgoKICAgIG1pbml0ZXN0L2JlbmNobWFyayBpcyBhbiBhd2Vz
        b21lIHdheSB0byBhc3NlcnQgdGhlIHBlcmZvcm1hbmNlIG9mIHlvdXIKICAg
        IGFsZ29yaXRobXMgaW4gYSByZXBlYXRhYmxlIG1hbm5lci4gTm93IHlvdSBj
        YW4gYXNzZXJ0IHRoYXQgeW91ciBuZXdiCiAgICBjby13b3JrZXIgZG9lc24n
        dCByZXBsYWNlIHlvdXIgbGluZWFyIGFsZ29yaXRobSB3aXRoIGFuIGV4cG9u
        ZW50aWFsCiAgICBvbmUhCgogICAgbWluaXRlc3QvbW9jayBieSBTdGV2ZW4g
        QmFrZXIsIGlzIGEgYmVhdXRpZnVsbHkgdGlueSBtb2NrIG9iamVjdAogICAg
        ZnJhbWV3b3JrLgoKICAgIG1pbml0ZXN0L3ByaWRlIHNob3dzIHByaWRlIGlu
        IHRlc3RpbmcgYW5kIGFkZHMgY29sb3JpbmcgdG8geW91ciB0ZXN0CiAgICBv
        dXRwdXQuCgogICAgbWluaXRlc3QvdW5pdCBpcyBtZWFudCB0byBoYXZlIGEg
        Y2xlYW4gaW1wbGVtZW50YXRpb24gZm9yIGxhbmd1YWdlCiAgICBpbXBsZW1l
        bnRvcnMgdGhhdCBuZWVkIGEgbWluaW1hbCBzZXQgb2YgbWV0aG9kcyB0byBi
        b290c3RyYXAgYSB3b3JraW5nCiAgICB0ZXN0IHN1aXRlLiBGb3IgZXhhbXBs
        ZSwgdGhlcmUgaXMgbm8gbWFnaWMgaW52b2x2ZWQgZm9yIHRlc3QtY2FzZQog
        ICAgZGlzY292ZXJ5LgogIGRvd25sb2Fkc19jb3VudDogNTk0MwogIG1ldGFk
        YXRhOiB7fQogIG51bWJlcjogMi4zLjAKICBzdW1tYXJ5OiBtaW5pdGVzdCBw
        cm92aWRlcyBhIGNvbXBsZXRlIHN1aXRlIG9mIHRlc3RpbmcgZmFjaWxpdGll
        cyBzdXBwb3J0aW5nIFRERCwKICAgIEJERCwgbW9ja2luZywgYW5kIGJlbmNo
        bWFya2luZwogIHBsYXRmb3JtOiBydWJ5CiAgcnVieWdlbXNfdmVyc2lvbjog
        Ij49IDAiCiAgcnVieV92ZXJzaW9uOiAKICBwcmVyZWxlYXNlOiBmYWxzZQog
        IGxpY2Vuc2VzOiAKICByZXF1aXJlbWVudHM6IAogIHNoYTogZjQ3MTdkZDAx
        MWVlYmU5YTE2NGI2YTU1YWY2MTQwOTdkY2VjYWZkNTNhZGY5ZmQ2NDA1OWVh
        NGNiYTBiYTg2NAotIGF1dGhvcnM6IFJ5YW4gRGF2aXMKICBidWlsdF9hdDog
        JzIwMTEtMDYtMDFUMDA6MDA6MDAuMDAwWicKICBjcmVhdGVkX2F0OiAnMjAx
        MS0wNi0wMVQyMjo1Nzo0My43NzJaJwogIGRlc2NyaXB0aW9uOiB8LQogICAg
        bWluaXRlc3QgcHJvdmlkZXMgYSBjb21wbGV0ZSBzdWl0ZSBvZiB0ZXN0aW5n
        IGZhY2lsaXRpZXMgc3VwcG9ydGluZwogICAgVERELCBCREQsIG1vY2tpbmcs
        IGFuZCBiZW5jaG1hcmtpbmcuCgogICAgbWluaXRlc3QvdW5pdCBpcyBhIHNt
        YWxsIGFuZCBpbmNyZWRpYmx5IGZhc3QgdW5pdCB0ZXN0aW5nIGZyYW1ld29y
        ay4KICAgIEl0IHByb3ZpZGVzIGEgcmljaCBzZXQgb2YgYXNzZXJ0aW9ucyB0
        byBtYWtlIHlvdXIgdGVzdHMgY2xlYW4gYW5kCiAgICByZWFkYWJsZS4KCiAg
        ICBtaW5pdGVzdC9zcGVjIGlzIGEgZnVuY3Rpb25hbGx5IGNvbXBsZXRlIHNw
        ZWMgZW5naW5lLiBJdCBob29rcyBvbnRvCiAgICBtaW5pdGVzdC91bml0IGFu
        ZCBzZWFtbGVzc2x5IGJyaWRnZXMgdGVzdCBhc3NlcnRpb25zIG92ZXIgdG8g
        c3BlYwogICAgZXhwZWN0YXRpb25zLgoKICAgIG1pbml0ZXN0L2JlbmNobWFy
        ayBpcyBhbiBhd2Vzb21lIHdheSB0byBhc3NlcnQgdGhlIHBlcmZvcm1hbmNl
        IG9mIHlvdXIKICAgIGFsZ29yaXRobXMgaW4gYSByZXBlYXRhYmxlIG1hbm5l
        ci4gTm93IHlvdSBjYW4gYXNzZXJ0IHRoYXQgeW91ciBuZXdiCiAgICBjby13
        b3JrZXIgZG9lc24ndCByZXBsYWNlIHlvdXIgbGluZWFyIGFsZ29yaXRobSB3
        aXRoIGFuIGV4cG9uZW50aWFsCiAgICBvbmUhCgogICAgbWluaXRlc3QvbW9j
        ayBieSBTdGV2ZW4gQmFrZXIsIGlzIGEgYmVhdXRpZnVsbHkgdGlueSBtb2Nr
        IG9iamVjdAogICAgZnJhbWV3b3JrLgoKICAgIG1pbml0ZXN0L3ByaWRlIHNo
        b3dzIHByaWRlIGluIHRlc3RpbmcgYW5kIGFkZHMgY29sb3JpbmcgdG8geW91
        ciB0ZXN0CiAgICBvdXRwdXQuCgogICAgbWluaXRlc3QvdW5pdCBpcyBtZWFu
        dCB0byBoYXZlIGEgY2xlYW4gaW1wbGVtZW50YXRpb24gZm9yIGxhbmd1YWdl
        CiAgICBpbXBsZW1lbnRvcnMgdGhhdCBuZWVkIGEgbWluaW1hbCBzZXQgb2Yg
        bWV0aG9kcyB0byBib290c3RyYXAgYSB3b3JraW5nCiAgICB0ZXN0IHN1aXRl
        LiBGb3IgZXhhbXBsZSwgdGhlcmUgaXMgbm8gbWFnaWMgaW52b2x2ZWQgZm9y
        IHRlc3QtY2FzZQogICAgZGlzY292ZXJ5LgogIGRvd25sb2Fkc19jb3VudDog
        MzQ2ODUKICBtZXRhZGF0YToge30KICBudW1iZXI6IDIuMi4yCiAgc3VtbWFy
        eTogbWluaXRlc3QgcHJvdmlkZXMgYSBjb21wbGV0ZSBzdWl0ZSBvZiB0ZXN0
        aW5nIGZhY2lsaXRpZXMgc3VwcG9ydGluZyBUREQsCiAgICBCREQsIG1vY2tp
        bmcsIGFuZCBiZW5jaG1hcmtpbmcKICBwbGF0Zm9ybTogcnVieQogIHJ1Ynln
        ZW1zX3ZlcnNpb246ICI+PSAwIgogIHJ1YnlfdmVyc2lvbjogCiAgcHJlcmVs
        ZWFzZTogZmFsc2UKICBsaWNlbnNlczogCiAgcmVxdWlyZW1lbnRzOiAKICBz
        aGE6IDUzYjQzNWYzZWEwOTc1N2YxMjIxYmMwNzYzYzM1ZWQzZDRmNWYxMzhk
        OGI4MWQyOTQ3YTdhM2NkMDUwYTcyNTIKLSBhdXRob3JzOiBSeWFuIERhdmlz
        CiAgYnVpbHRfYXQ6ICcyMDExLTA2LTAxVDAwOjAwOjAwLjAwMFonCiAgY3Jl
        YXRlZF9hdDogJzIwMTEtMDYtMDFUMDM6MTE6MDQuNDMwWicKICBkZXNjcmlw
        dGlvbjogfC0KICAgIG1pbml0ZXN0IHByb3ZpZGVzIGEgY29tcGxldGUgc3Vp
        dGUgb2YgdGVzdGluZyBmYWNpbGl0aWVzIHN1cHBvcnRpbmcKICAgIFRERCwg
        QkRELCBtb2NraW5nLCBhbmQgYmVuY2htYXJraW5nLgoKICAgIG1pbml0ZXN0
        L3VuaXQgaXMgYSBzbWFsbCBhbmQgaW5jcmVkaWJseSBmYXN0IHVuaXQgdGVz
        dGluZyBmcmFtZXdvcmsuCiAgICBJdCBwcm92aWRlcyBhIHJpY2ggc2V0IG9m
        IGFzc2VydGlvbnMgdG8gbWFrZSB5b3VyIHRlc3RzIGNsZWFuIGFuZAogICAg
        cmVhZGFibGUuCgogICAgbWluaXRlc3Qvc3BlYyBpcyBhIGZ1bmN0aW9uYWxs
        eSBjb21wbGV0ZSBzcGVjIGVuZ2luZS4gSXQgaG9va3Mgb250bwogICAgbWlu
        aXRlc3QvdW5pdCBhbmQgc2VhbWxlc3NseSBicmlkZ2VzIHRlc3QgYXNzZXJ0
        aW9ucyBvdmVyIHRvIHNwZWMKICAgIGV4cGVjdGF0aW9ucy4KCiAgICBtaW5p
        dGVzdC9iZW5jaG1hcmsgaXMgYW4gYXdlc29tZSB3YXkgdG8gYXNzZXJ0IHRo
        ZSBwZXJmb3JtYW5jZSBvZiB5b3VyCiAgICBhbGdvcml0aG1zIGluIGEgcmVw
        ZWF0YWJsZSBtYW5uZXIuIE5vdyB5b3UgY2FuIGFzc2VydCB0aGF0IHlvdXIg
        bmV3YgogICAgY28td29ya2VyIGRvZXNuJ3QgcmVwbGFjZSB5b3VyIGxpbmVh
        ciBhbGdvcml0aG0gd2l0aCBhbiBleHBvbmVudGlhbAogICAgb25lIQoKICAg
        IG1pbml0ZXN0L21vY2sgYnkgU3RldmVuIEJha2VyLCBpcyBhIGJlYXV0aWZ1
        bGx5IHRpbnkgbW9jayBvYmplY3QKICAgIGZyYW1ld29yay4KCiAgICBtaW5p
        dGVzdC9wcmlkZSBzaG93cyBwcmlkZSBpbiB0ZXN0aW5nIGFuZCBhZGRzIGNv
        bG9yaW5nIHRvIHlvdXIgdGVzdAogICAgb3V0cHV0LgoKICAgIG1pbml0ZXN0
        L3VuaXQgaXMgbWVhbnQgdG8gaGF2ZSBhIGNsZWFuIGltcGxlbWVudGF0aW9u
        IGZvciBsYW5ndWFnZQogICAgaW1wbGVtZW50b3JzIHRoYXQgbmVlZCBhIG1p
        bmltYWwgc2V0IG9mIG1ldGhvZHMgdG8gYm9vdHN0cmFwIGEgd29ya2luZwog
        ICAgdGVzdCBzdWl0ZS4gRm9yIGV4YW1wbGUsIHRoZXJlIGlzIG5vIG1hZ2lj
        IGludm9sdmVkIGZvciB0ZXN0LWNhc2UKICAgIGRpc2NvdmVyeS4KICBkb3du
        bG9hZHNfY291bnQ6IDI1NDgKICBtZXRhZGF0YToge30KICBudW1iZXI6IDIu
        Mi4xCiAgc3VtbWFyeTogbWluaXRlc3QgcHJvdmlkZXMgYSBjb21wbGV0ZSBz
        dWl0ZSBvZiB0ZXN0aW5nIGZhY2lsaXRpZXMgc3VwcG9ydGluZyBUREQsCiAg
        ICBCREQsIG1vY2tpbmcsIGFuZCBiZW5jaG1hcmtpbmcKICBwbGF0Zm9ybTog
        cnVieQogIHJ1YnlnZW1zX3ZlcnNpb246ICI+PSAwIgogIHJ1YnlfdmVyc2lv
        bjogCiAgcHJlcmVsZWFzZTogZmFsc2UKICBsaWNlbnNlczogCiAgcmVxdWly
        ZW1lbnRzOiAKICBzaGE6IGZkYzIxYzM4MTFjYjA3YTFjOWEyMmI4ZGNmMDY1
        OTMzNjc3YWIyNWJlNmE0MjIyZTEyODM0Mjg4ZTY0NjBjYTUKLSBhdXRob3Jz
        OiBSeWFuIERhdmlzCiAgYnVpbHRfYXQ6ICcyMDExLTA2LTAxVDAwOjAwOjAw
        LjAwMFonCiAgY3JlYXRlZF9hdDogJzIwMTEtMDYtMDFUMDA6NDI6MTQuMTEz
        WicKICBkZXNjcmlwdGlvbjogfC0KICAgIG1pbml0ZXN0IHByb3ZpZGVzIGEg
        Y29tcGxldGUgc3VpdGUgb2YgdGVzdGluZyBmYWNpbGl0aWVzIHN1cHBvcnRp
        bmcKICAgIFRERCwgQkRELCBtb2NraW5nLCBhbmQgYmVuY2htYXJraW5nLgoK
        ICAgIG1pbml0ZXN0L3VuaXQgaXMgYSBzbWFsbCBhbmQgaW5jcmVkaWJseSBm
        YXN0IHVuaXQgdGVzdGluZyBmcmFtZXdvcmsuCiAgICBJdCBwcm92aWRlcyBh
        IHJpY2ggc2V0IG9mIGFzc2VydGlvbnMgdG8gbWFrZSB5b3VyIHRlc3RzIGNs
        ZWFuIGFuZAogICAgcmVhZGFibGUuCgogICAgbWluaXRlc3Qvc3BlYyBpcyBh
        IGZ1bmN0aW9uYWxseSBjb21wbGV0ZSBzcGVjIGVuZ2luZS4gSXQgaG9va3Mg
        b250bwogICAgbWluaXRlc3QvdW5pdCBhbmQgc2VhbWxlc3NseSBicmlkZ2Vz
        IHRlc3QgYXNzZXJ0aW9ucyBvdmVyIHRvIHNwZWMKICAgIGV4cGVjdGF0aW9u
        cy4KCiAgICBtaW5pdGVzdC9iZW5jaG1hcmsgaXMgYW4gYXdlc29tZSB3YXkg
        dG8gYXNzZXJ0IHRoZSBwZXJmb3JtYW5jZSBvZiB5b3VyCiAgICBhbGdvcml0
        aG1zIGluIGEgcmVwZWF0YWJsZSBtYW5uZXIuIE5vdyB5b3UgY2FuIGFzc2Vy
        dCB0aGF0IHlvdXIgbmV3YgogICAgY28td29ya2VyIGRvZXNuJ3QgcmVwbGFj
        ZSB5b3VyIGxpbmVhciBhbGdvcml0aG0gd2l0aCBhbiBleHBvbmVudGlhbAog
        ICAgb25lIQoKICAgIG1pbml0ZXN0L21vY2sgYnkgU3RldmVuIEJha2VyLCBp
        cyBhIGJlYXV0aWZ1bGx5IHRpbnkgbW9jayBvYmplY3QKICAgIGZyYW1ld29y
        ay4KCiAgICBtaW5pdGVzdC9wcmlkZSBzaG93cyBwcmlkZSBpbiB0ZXN0aW5n
        IGFuZCBhZGRzIGNvbG9yaW5nIHRvIHlvdXIgdGVzdAogICAgb3V0cHV0LgoK
        ICAgIG1pbml0ZXN0L3VuaXQgaXMgbWVhbnQgdG8gaGF2ZSBhIGNsZWFuIGlt
        cGxlbWVudGF0aW9uIGZvciBsYW5ndWFnZQogICAgaW1wbGVtZW50b3JzIHRo
        YXQgbmVlZCBhIG1pbmltYWwgc2V0IG9mIG1ldGhvZHMgdG8gYm9vdHN0cmFw
        IGEgd29ya2luZwogICAgdGVzdCBzdWl0ZS4gRm9yIGV4YW1wbGUsIHRoZXJl
        IGlzIG5vIG1hZ2ljIGludm9sdmVkIGZvciB0ZXN0LWNhc2UKICAgIGRpc2Nv
        dmVyeS4KICBkb3dubG9hZHNfY291bnQ6IDM1ODIKICBtZXRhZGF0YToge30K
        ICBudW1iZXI6IDIuMi4wCiAgc3VtbWFyeTogbWluaXRlc3QgcHJvdmlkZXMg
        YSBjb21wbGV0ZSBzdWl0ZSBvZiB0ZXN0aW5nIGZhY2lsaXRpZXMgc3VwcG9y
        dGluZyBUREQsCiAgICBCREQsIG1vY2tpbmcsIGFuZCBiZW5jaG1hcmtpbmcK
        ICBwbGF0Zm9ybTogcnVieQogIHJ1YnlnZW1zX3ZlcnNpb246ICI+PSAwIgog
        IHJ1YnlfdmVyc2lvbjogCiAgcHJlcmVsZWFzZTogZmFsc2UKICBsaWNlbnNl
        czogCiAgcmVxdWlyZW1lbnRzOiAKICBzaGE6IGQ2NDczNDQ0NDliOWNiYzE3
        ODI1MmQ3NzQ2NDhlMWE1YmVmMjlkMTk5M2RmMjFlODdiNmY2NjU0NTkzOWM5
        MGMKLSBhdXRob3JzOiBSeWFuIERhdmlzCiAgYnVpbHRfYXQ6ICcyMDExLTA0
        LTExVDA3OjAwOjAwLjAwMFonCiAgY3JlYXRlZF9hdDogJzIwMTEtMDQtMTFU
        MjE6MTM6MjcuNzgwWicKICBkZXNjcmlwdGlvbjogfC0KICAgIG1pbml0ZXN0
        IHByb3ZpZGVzIGEgY29tcGxldGUgc3VpdGUgb2YgdGVzdGluZyBmYWNpbGl0
        aWVzIHN1cHBvcnRpbmcKICAgIFRERCwgQkRELCBtb2NraW5nLCBhbmQgYmVu
        Y2htYXJraW5nLgoKICAgIG1pbml0ZXN0L3VuaXQgaXMgYSBzbWFsbCBhbmQg
        aW5jcmVkaWJseSBmYXN0IHVuaXQgdGVzdGluZyBmcmFtZXdvcmsuCiAgICBJ
        dCBwcm92aWRlcyBhIHJpY2ggc2V0IG9mIGFzc2VydGlvbnMgdG8gbWFrZSB5
        b3VyIHRlc3RzIGNsZWFuIGFuZAogICAgcmVhZGFibGUuCgogICAgbWluaXRl
        c3Qvc3BlYyBpcyBhIGZ1bmN0aW9uYWxseSBjb21wbGV0ZSBzcGVjIGVuZ2lu
        ZS4gSXQgaG9va3Mgb250bwogICAgbWluaXRlc3QvdW5pdCBhbmQgc2VhbWxl
        c3NseSBicmlkZ2VzIHRlc3QgYXNzZXJ0aW9ucyBvdmVyIHRvIHNwZWMKICAg
        IGV4cGVjdGF0aW9ucy4KCiAgICBtaW5pdGVzdC9iZW5jaG1hcmsgaXMgYW4g
        YXdlc29tZSB3YXkgdG8gYXNzZXJ0IHRoZSBwZXJmb3JtYW5jZSBvZiB5b3Vy
        CiAgICBhbGdvcml0aG1zIGluIGEgcmVwZWF0YWJsZSBtYW5uZXIuIE5vdyB5
        b3UgY2FuIGFzc2VydCB0aGF0IHlvdXIgbmV3YgogICAgY28td29ya2VyIGRv
        ZXNuJ3QgcmVwbGFjZSB5b3VyIGxpbmVhciBhbGdvcml0aG0gd2l0aCBhbiBl
        eHBvbmVudGlhbAogICAgb25lIQoKICAgIG1pbml0ZXN0L21vY2sgYnkgU3Rl
        dmVuIEJha2VyLCBpcyBhIGJlYXV0aWZ1bGx5IHRpbnkgbW9jayBvYmplY3QK
        ICAgIGZyYW1ld29yay4KCiAgICBtaW5pdGVzdC9wcmlkZSBzaG93cyBwcmlk
        ZSBpbiB0ZXN0aW5nIGFuZCBhZGRzIGNvbG9yaW5nIHRvIHlvdXIgdGVzdAog
        ICAgb3V0cHV0LgoKICAgIG1pbml0ZXN0L3VuaXQgaXMgbWVhbnQgdG8gaGF2
        ZSBhIGNsZWFuIGltcGxlbWVudGF0aW9uIGZvciBsYW5ndWFnZQogICAgaW1w
        bGVtZW50b3JzIHRoYXQgbmVlZCBhIG1pbmltYWwgc2V0IG9mIG1ldGhvZHMg
        dG8gYm9vdHN0cmFwIGEgd29ya2luZwogICAgdGVzdCBzdWl0ZS4gRm9yIGV4
        YW1wbGUsIHRoZXJlIGlzIG5vIG1hZ2ljIGludm9sdmVkIGZvciB0ZXN0LWNh
        c2UKICAgIGRpc2NvdmVyeS4KICBkb3dubG9hZHNfY291bnQ6IDIwMDkxCiAg
        bWV0YWRhdGE6IHt9CiAgbnVtYmVyOiAyLjEuMAogIHN1bW1hcnk6IG1pbml0
        ZXN0IHByb3ZpZGVzIGEgY29tcGxldGUgc3VpdGUgb2YgdGVzdGluZyBmYWNp
        bGl0aWVzIHN1cHBvcnRpbmcgVERELAogICAgQkRELCBtb2NraW5nLCBhbmQg
        YmVuY2htYXJraW5nCiAgcGxhdGZvcm06IHJ1YnkKICBydWJ5Z2Vtc192ZXJz
        aW9uOiAiPj0gMCIKICBydWJ5X3ZlcnNpb246IAogIHByZXJlbGVhc2U6IGZh
        bHNlCiAgbGljZW5zZXM6IAogIHJlcXVpcmVtZW50czogCiAgc2hhOiAxZDMw
        ZjMyN2UwZmU3YzgzZGQ4YTNlZmViZDc4ZDkyY2Q4YTU3MGJhNzk0MWU5NzA1
        YWI5MzgyNjBjYTQ4ZWRmCi0gYXV0aG9yczogUnlhbiBEYXZpcwogIGJ1aWx0
        X2F0OiAnMjAxMC0xMi0yNFQwODowMDowMC4wMDBaJwogIGNyZWF0ZWRfYXQ6
        ICcyMDEwLTEyLTI1VDAzOjAyOjE0LjU4M1onCiAgZGVzY3JpcHRpb246IHwt
        CiAgICBtaW5pdGVzdCBwcm92aWRlcyBhIGNvbXBsZXRlIHN1aXRlIG9mIHRl
        c3RpbmcgZmFjaWxpdGllcyBzdXBwb3J0aW5nCiAgICBUREQsIEJERCwgbW9j
        a2luZywgYW5kIGJlbmNobWFya2luZy4KCiAgICBtaW5pdGVzdC91bml0IGlz
        IGEgc21hbGwgYW5kIGluY3JlZGlibHkgZmFzdCB1bml0IHRlc3RpbmcgZnJh
        bWV3b3JrLgogICAgSXQgcHJvdmlkZXMgYSByaWNoIHNldCBvZiBhc3NlcnRp
        b25zIHRvIG1ha2UgeW91ciB0ZXN0cyBjbGVhbiBhbmQKICAgIHJlYWRhYmxl
        LgoKICAgIG1pbml0ZXN0L3NwZWMgaXMgYSBmdW5jdGlvbmFsbHkgY29tcGxl
        dGUgc3BlYyBlbmdpbmUuIEl0IGhvb2tzIG9udG8KICAgIG1pbml0ZXN0L3Vu
        aXQgYW5kIHNlYW1sZXNzbHkgYnJpZGdlcyB0ZXN0IGFzc2VydGlvbnMgb3Zl
        ciB0byBzcGVjCiAgICBleHBlY3RhdGlvbnMuCgogICAgbWluaXRlc3QvYmVu
        Y2htYXJrIGlzIGFuIGF3ZXNvbWUgd2F5IHRvIGFzc2VydCB0aGUgcGVyZm9y
        bWFuY2Ugb2YgeW91cgogICAgYWxnb3JpdGhtcyBpbiBhIHJlcGVhdGFibGUg
        bWFubmVyLiBOb3cgeW91IGNhbiBhc3NlcnQgdGhhdCB5b3VyIG5ld2IKICAg
        IGNvLXdvcmtlciBkb2Vzbid0IHJlcGxhY2UgeW91ciBsaW5lYXIgYWxnb3Jp
        dGhtIHdpdGggYW4gZXhwb25lbnRpYWwKICAgIG9uZSEKCiAgICBtaW5pdGVz
        dC9tb2NrIGJ5IFN0ZXZlbiBCYWtlciwgaXMgYSBiZWF1dGlmdWxseSB0aW55
        IG1vY2sgb2JqZWN0CiAgICBmcmFtZXdvcmsuCgogICAgbWluaXRlc3QvcHJp
        ZGUgc2hvd3MgcHJpZGUgaW4gdGVzdGluZyBhbmQgYWRkcyBjb2xvcmluZyB0
        byB5b3VyIHRlc3QKICAgIG91dHB1dC4KCiAgICBtaW5pdGVzdC91bml0IGlz
        IG1lYW50IHRvIGhhdmUgYSBjbGVhbiBpbXBsZW1lbnRhdGlvbiBmb3IgbGFu
        Z3VhZ2UKICAgIGltcGxlbWVudG9ycyB0aGF0IG5lZWQgYSBtaW5pbWFsIHNl
        dCBvZiBtZXRob2RzIHRvIGJvb3RzdHJhcCBhIHdvcmtpbmcKICAgIHRlc3Qg
        c3VpdGUuIEZvciBleGFtcGxlLCB0aGVyZSBpcyBubyBtYWdpYyBpbnZvbHZl
        ZCBmb3IgdGVzdC1jYXNlCiAgICBkaXNjb3ZlcnkuCiAgZG93bmxvYWRzX2Nv
        dW50OiAzNTUyMAogIG1ldGFkYXRhOiB7fQogIG51bWJlcjogMi4wLjIKICBz
        dW1tYXJ5OiBtaW5pdGVzdCBwcm92aWRlcyBhIGNvbXBsZXRlIHN1aXRlIG9m
        IHRlc3RpbmcgZmFjaWxpdGllcyBzdXBwb3J0aW5nIFRERCwKICAgIEJERCwg
        bW9ja2luZywgYW5kIGJlbmNobWFya2luZwogIHBsYXRmb3JtOiBydWJ5CiAg
        cnVieWdlbXNfdmVyc2lvbjogIj49IDAiCiAgcnVieV92ZXJzaW9uOiAKICBw
        cmVyZWxlYXNlOiBmYWxzZQogIGxpY2Vuc2VzOiAKICByZXF1aXJlbWVudHM6
        IAogIHNoYTogYzBhYjJiYjQzNTgyMjlmODE3NDA3OWZhNzQxYjk2MzY4ZjQ2
        MDJiZWE4MTBmNDI2Y2ZlMDNmMzVlNjc0ZTlmMAotIGF1dGhvcnM6IFJ5YW4g
        RGF2aXMKICBidWlsdF9hdDogJzIwMTAtMTItMTVUMDg6MDA6MDAuMDAwWicK
        ICBjcmVhdGVkX2F0OiAnMjAxMC0xMi0xNVQyMDoxMTo0OS45MjFaJwogIGRl
        c2NyaXB0aW9uOiB8LQogICAgbWluaXRlc3QgcHJvdmlkZXMgYSBjb21wbGV0
        ZSBzdWl0ZSBvZiB0ZXN0aW5nIGZhY2lsaXRpZXMgc3VwcG9ydGluZwogICAg
        VERELCBCREQsIG1vY2tpbmcsIGFuZCBiZW5jaG1hcmtpbmcuCgogICAgbWlu
        aXRlc3QvdW5pdCBpcyBhIHNtYWxsIGFuZCBpbmNyZWRpYmx5IGZhc3QgdW5p
        dCB0ZXN0aW5nIGZyYW1ld29yay4KICAgIEl0IHByb3ZpZGVzIGEgcmljaCBz
        ZXQgb2YgYXNzZXJ0aW9ucyB0byBtYWtlIHlvdXIgdGVzdHMgY2xlYW4gYW5k
        CiAgICByZWFkYWJsZS4KCiAgICBtaW5pdGVzdC9zcGVjIGlzIGEgZnVuY3Rp
        b25hbGx5IGNvbXBsZXRlIHNwZWMgZW5naW5lLiBJdCBob29rcyBvbnRvCiAg
        ICBtaW5pdGVzdC91bml0IGFuZCBzZWFtbGVzc2x5IGJyaWRnZXMgdGVzdCBh
        c3NlcnRpb25zIG92ZXIgdG8gc3BlYwogICAgZXhwZWN0YXRpb25zLgoKICAg
        IG1pbml0ZXN0L2JlbmNobWFyayBpcyBhbiBhd2Vzb21lIHdheSB0byBhc3Nl
        cnQgdGhlIHBlcmZvcm1hbmNlIG9mIHlvdXIKICAgIGFsZ29yaXRobXMgaW4g
        YSByZXBlYXRhYmxlIG1hbm5lci4gTm93IHlvdSBjYW4gYXNzZXJ0IHRoYXQg
        eW91ciBuZXdiCiAgICBjby13b3JrZXIgZG9lc24ndCByZXBsYWNlIHlvdXIg
        bGluZWFyIGFsZ29yaXRobSB3aXRoIGFuIGV4cG9uZW50aWFsCiAgICBvbmUh
        CgogICAgbWluaXRlc3QvbW9jayBieSBTdGV2ZW4gQmFrZXIsIGlzIGEgYmVh
        dXRpZnVsbHkgdGlueSBtb2NrIG9iamVjdAogICAgZnJhbWV3b3JrLgoKICAg
        IG1pbml0ZXN0L3ByaWRlIHNob3dzIHByaWRlIGluIHRlc3RpbmcgYW5kIGFk
        ZHMgY29sb3JpbmcgdG8geW91ciB0ZXN0CiAgICBvdXRwdXQuCgogICAgbWlu
        aXRlc3QvdW5pdCBpcyBtZWFudCB0byBoYXZlIGEgY2xlYW4gaW1wbGVtZW50
        YXRpb24gZm9yIGxhbmd1YWdlCiAgICBpbXBsZW1lbnRvcnMgdGhhdCBuZWVk
        IGEgbWluaW1hbCBzZXQgb2YgbWV0aG9kcyB0byBib290c3RyYXAgYSB3b3Jr
        aW5nCiAgICB0ZXN0IHN1aXRlLiBGb3IgZXhhbXBsZSwgdGhlcmUgaXMgbm8g
        bWFnaWMgaW52b2x2ZWQgZm9yIHRlc3QtY2FzZQogICAgZGlzY292ZXJ5Lgog
        IGRvd25sb2Fkc19jb3VudDogNzcxNgogIG1ldGFkYXRhOiB7fQogIG51bWJl
        cjogMi4wLjEKICBzdW1tYXJ5OiBtaW5pdGVzdCBwcm92aWRlcyBhIGNvbXBs
        ZXRlIHN1aXRlIG9mIHRlc3RpbmcgZmFjaWxpdGllcyBzdXBwb3J0aW5nIFRE
        RCwKICAgIEJERCwgbW9ja2luZywgYW5kIGJlbmNobWFya2luZwogIHBsYXRm
        b3JtOiBydWJ5CiAgcnVieWdlbXNfdmVyc2lvbjogIj49IDAiCiAgcnVieV92
        ZXJzaW9uOiAKICBwcmVyZWxlYXNlOiBmYWxzZQogIGxpY2Vuc2VzOiAKICBy
        ZXF1aXJlbWVudHM6IAogIHNoYTogMDMwM2M0ZjAzMjNkN2VmZGVmMmI2MGQ4
        ZjEyYTRkMTM5NTZjOTk2ZDBiMmUxMTgyODVkYzI4MDg2NGZlOWVlMwotIGF1
        dGhvcnM6IFJ5YW4gRGF2aXMKICBidWlsdF9hdDogJzIwMTAtMTEtMTFUMDg6
        MDA6MDAuMDAwWicKICBjcmVhdGVkX2F0OiAnMjAxMC0xMS0xMVQyMDo0NDox
        NC42MTFaJwogIGRlc2NyaXB0aW9uOiB8LQogICAgbWluaXRlc3QgcHJvdmlk
        ZXMgYSBjb21wbGV0ZSBzdWl0ZSBvZiB0ZXN0aW5nIGZhY2lsaXRpZXMgc3Vw
        cG9ydGluZwogICAgVERELCBCREQsIG1vY2tpbmcsIGFuZCBiZW5jaG1hcmtp
        bmcuCgogICAgbWluaXRlc3QvdW5pdCBpcyBhIHNtYWxsIGFuZCBpbmNyZWRp
        Ymx5IGZhc3QgdW5pdCB0ZXN0aW5nIGZyYW1ld29yay4KICAgIEl0IHByb3Zp
        ZGVzIGEgcmljaCBzZXQgb2YgYXNzZXJ0aW9ucyB0byBtYWtlIHlvdXIgdGVz
        dHMgY2xlYW4gYW5kCiAgICByZWFkYWJsZS4KCiAgICBtaW5pdGVzdC9zcGVj
        IGlzIGEgZnVuY3Rpb25hbGx5IGNvbXBsZXRlIHNwZWMgZW5naW5lLiBJdCBo
        b29rcyBvbnRvCiAgICBtaW5pdGVzdC91bml0IGFuZCBzZWFtbGVzc2x5IGJy
        aWRnZXMgdGVzdCBhc3NlcnRpb25zIG92ZXIgdG8gc3BlYwogICAgZXhwZWN0
        YXRpb25zLgoKICAgIG1pbml0ZXN0L2JlbmNobWFyayBpcyBhbiBhd2Vzb21l
        IHdheSB0byBhc3NlcnQgdGhlIHBlcmZvcm1hbmNlIG9mIHlvdXIKICAgIGFs
        Z29yaXRobXMgaW4gYSByZXBlYXRhYmxlIG1hbm5lci4gTm93IHlvdSBjYW4g
        YXNzZXJ0IHRoYXQgeW91ciBuZXdiCiAgICBjby13b3JrZXIgZG9lc24ndCBy
        ZXBsYWNlIHlvdXIgbGluZWFyIGFsZ29yaXRobSB3aXRoIGFuIGV4cG9uZW50
        aWFsCiAgICBvbmUhCgogICAgbWluaXRlc3QvbW9jayBieSBTdGV2ZW4gQmFr
        ZXIsIGlzIGEgYmVhdXRpZnVsbHkgdGlueSBtb2NrIG9iamVjdAogICAgZnJh
        bWV3b3JrLgoKICAgIG1pbml0ZXN0L3ByaWRlIHNob3dzIHByaWRlIGluIHRl
        c3RpbmcgYW5kIGFkZHMgY29sb3JpbmcgdG8geW91ciB0ZXN0CiAgICBvdXRw
        dXQuCgogICAgbWluaXRlc3QvdW5pdCBpcyBtZWFudCB0byBoYXZlIGEgY2xl
        YW4gaW1wbGVtZW50YXRpb24gZm9yIGxhbmd1YWdlCiAgICBpbXBsZW1lbnRv
        cnMgdGhhdCBuZWVkIGEgbWluaW1hbCBzZXQgb2YgbWV0aG9kcyB0byBib290
        c3RyYXAgYSB3b3JraW5nCiAgICB0ZXN0IHN1aXRlLiBGb3IgZXhhbXBsZSwg
        dGhlcmUgaXMgbm8gbWFnaWMgaW52b2x2ZWQgZm9yIHRlc3QtY2FzZQogICAg
        ZGlzY292ZXJ5LgogIGRvd25sb2Fkc19jb3VudDogMTY3MTIKICBtZXRhZGF0
        YToge30KICBudW1iZXI6IDIuMC4wCiAgc3VtbWFyeTogbWluaXRlc3QgcHJv
        dmlkZXMgYSBjb21wbGV0ZSBzdWl0ZSBvZiB0ZXN0aW5nIGZhY2lsaXRpZXMg
        c3VwcG9ydGluZyBUREQsCiAgICBCREQsIG1vY2tpbmcsIGFuZCBiZW5jaG1h
        cmtpbmcKICBwbGF0Zm9ybTogcnVieQogIHJ1YnlnZW1zX3ZlcnNpb246ICI+
        PSAwIgogIHJ1YnlfdmVyc2lvbjogCiAgcHJlcmVsZWFzZTogZmFsc2UKICBs
        aWNlbnNlczogCiAgcmVxdWlyZW1lbnRzOiAKICBzaGE6IDVjMjQ5ZjZjMzZj
        ODZmZTMzZDdhN2ViNmM2NzAyMWM4ZDYzNjExYWUzNzM3NWFlNjIxN2U5YWU1
        ZjY5MTY2YzIKLSBhdXRob3JzOiBSeWFuIERhdmlzCiAgYnVpbHRfYXQ6ICcy
        MDEwLTA5LTIzVDA3OjAwOjAwLjAwMFonCiAgY3JlYXRlZF9hdDogJzIwMTAt
        MDktMjNUMjE6MjU6MTMuMTcwWicKICBkZXNjcmlwdGlvbjogfC0KICAgIG1p
        bml0ZXN0L3VuaXQgaXMgYSBzbWFsbCBhbmQgZmFzdCByZXBsYWNlbWVudCBm
        b3IgcnVieSdzIGh1Z2UgYW5kIHNsb3cKICAgIHRlc3QvdW5pdC4gVGhpcyBp
        cyBtZWFudCB0byBiZSBjbGVhbiBhbmQgZWFzeSB0byB1c2UgYm90aCBhcyBh
        IHJlZ3VsYXIKICAgIHRlc3Qgd3JpdGVyIGFuZCBmb3IgbGFuZ3VhZ2UgaW1w
        bGVtZW50b3JzIHRoYXQgbmVlZCBhIG1pbmltYWwgc2V0IG9mCiAgICBtZXRo
        b2RzIHRvIGJvb3RzdHJhcCBhIHdvcmtpbmcgdW5pdCB0ZXN0IHN1aXRlLgoK
        ICAgIG1pbmkvc3BlYyBpcyBhIGZ1bmN0aW9uYWxseSBjb21wbGV0ZSBzcGVj
        IGVuZ2luZS4KCiAgICBtaW5pL21vY2ssIGJ5IFN0ZXZlbiBCYWtlciwgaXMg
        YSBiZWF1dGlmdWxseSB0aW55IG1vY2sgb2JqZWN0IGZyYW1ld29yay4KCiAg
        ICAoVGhpcyBwYWNrYWdlIHdhcyBjYWxsZWQgbWluaXVuaXQgb25jZSB1cG9u
        IGEgdGltZSkKICBkb3dubG9hZHNfY291bnQ6IDQ5MTkyCiAgbWV0YWRhdGE6
        IHt9CiAgbnVtYmVyOiAxLjcuMgogIHN1bW1hcnk6IG1pbml0ZXN0L3VuaXQg
        aXMgYSBzbWFsbCBhbmQgZmFzdCByZXBsYWNlbWVudCBmb3IgcnVieSdzIGh1
        Z2UgYW5kIHNsb3cKICAgIHRlc3QvdW5pdAogIHBsYXRmb3JtOiBydWJ5CiAg
        cnVieWdlbXNfdmVyc2lvbjogIj49IDAiCiAgcnVieV92ZXJzaW9uOiAKICBw
        cmVyZWxlYXNlOiBmYWxzZQogIGxpY2Vuc2VzOiAKICByZXF1aXJlbWVudHM6
        IAogIHNoYTogYzJjM2Q4MTMwYTJlZTI1ZmJhNzRhODk3ZDBmOWNiZDhlYmI2
        MDJjMzRhZTlkNjU2YmUxYTg2NDZmZjQwZWZkMAotIGF1dGhvcnM6IFJ5YW4g
        RGF2aXMKICBidWlsdF9hdDogJzIwMTAtMDktMDFUMDc6MDA6MDAuMDAwWicK
        ICBjcmVhdGVkX2F0OiAnMjAxMC0wOS0wMVQwODozMjowNi44MTBaJwogIGRl
        c2NyaXB0aW9uOiB8LQogICAgbWluaXRlc3QvdW5pdCBpcyBhIHNtYWxsIGFu
        ZCBmYXN0IHJlcGxhY2VtZW50IGZvciBydWJ5J3MgaHVnZSBhbmQgc2xvdwog
        ICAgdGVzdC91bml0LiBUaGlzIGlzIG1lYW50IHRvIGJlIGNsZWFuIGFuZCBl
        YXN5IHRvIHVzZSBib3RoIGFzIGEgcmVndWxhcgogICAgdGVzdCB3cml0ZXIg
        YW5kIGZvciBsYW5ndWFnZSBpbXBsZW1lbnRvcnMgdGhhdCBuZWVkIGEgbWlu
        aW1hbCBzZXQgb2YKICAgIG1ldGhvZHMgdG8gYm9vdHN0cmFwIGEgd29ya2lu
        ZyB1bml0IHRlc3Qgc3VpdGUuCgogICAgbWluaS9zcGVjIGlzIGEgZnVuY3Rp
        b25hbGx5IGNvbXBsZXRlIHNwZWMgZW5naW5lLgoKICAgIG1pbmkvbW9jaywg
        YnkgU3RldmVuIEJha2VyLCBpcyBhIGJlYXV0aWZ1bGx5IHRpbnkgbW9jayBv
        YmplY3QgZnJhbWV3b3JrLgoKICAgIChUaGlzIHBhY2thZ2Ugd2FzIGNhbGxl
        ZCBtaW5pdW5pdCBvbmNlIHVwb24gYSB0aW1lKQogIGRvd25sb2Fkc19jb3Vu
        dDogOTk2MgogIG1ldGFkYXRhOiB7fQogIG51bWJlcjogMS43LjEKICBzdW1t
        YXJ5OiBtaW5pdGVzdC91bml0IGlzIGEgc21hbGwgYW5kIGZhc3QgcmVwbGFj
        ZW1lbnQgZm9yIHJ1YnkncyBodWdlIGFuZCBzbG93CiAgICB0ZXN0L3VuaXQK
        ICBwbGF0Zm9ybTogcnVieQogIHJ1YnlnZW1zX3ZlcnNpb246ICI+PSAwIgog
        IHJ1YnlfdmVyc2lvbjogCiAgcHJlcmVsZWFzZTogZmFsc2UKICBsaWNlbnNl
        czogCiAgcmVxdWlyZW1lbnRzOiAKICBzaGE6IDEzYzhiODBlNWJjZTgyOTBm
        YTA5Y2ViNmE2YmNhZDFkNjUyNzAyMDBlMWQzY2FkN2ZiMDMyZjFjOGJiM2Rl
        ZmYKLSBhdXRob3JzOiBSeWFuIERhdmlzCiAgYnVpbHRfYXQ6ICcyMDEwLTA3
        LTE1VDA3OjAwOjAwLjAwMFonCiAgY3JlYXRlZF9hdDogJzIwMTAtMDctMTZU
        MDA6MTM6MTUuNDY1WicKICBkZXNjcmlwdGlvbjogfC0KICAgIG1pbml0ZXN0
        L3VuaXQgaXMgYSBzbWFsbCBhbmQgZmFzdCByZXBsYWNlbWVudCBmb3IgcnVi
        eSdzIGh1Z2UgYW5kIHNsb3cKICAgIHRlc3QvdW5pdC4gVGhpcyBpcyBtZWFu
        dCB0byBiZSBjbGVhbiBhbmQgZWFzeSB0byB1c2UgYm90aCBhcyBhIHJlZ3Vs
        YXIKICAgIHRlc3Qgd3JpdGVyIGFuZCBmb3IgbGFuZ3VhZ2UgaW1wbGVtZW50
        b3JzIHRoYXQgbmVlZCBhIG1pbmltYWwgc2V0IG9mCiAgICBtZXRob2RzIHRv
        IGJvb3RzdHJhcCBhIHdvcmtpbmcgdW5pdCB0ZXN0IHN1aXRlLgoKICAgIG1p
        bmkvc3BlYyBpcyBhIGZ1bmN0aW9uYWxseSBjb21wbGV0ZSBzcGVjIGVuZ2lu
        ZS4KCiAgICBtaW5pL21vY2ssIGJ5IFN0ZXZlbiBCYWtlciwgaXMgYSBiZWF1
        dGlmdWxseSB0aW55IG1vY2sgb2JqZWN0IGZyYW1ld29yay4KCiAgICAoVGhp
        cyBwYWNrYWdlIHdhcyBjYWxsZWQgbWluaXVuaXQgb25jZSB1cG9uIGEgdGlt
        ZSkKICBkb3dubG9hZHNfY291bnQ6IDU3NzAKICBtZXRhZGF0YToge30KICBu
        dW1iZXI6IDEuNy4wCiAgc3VtbWFyeTogbWluaXRlc3QvdW5pdCBpcyBhIHNt
        YWxsIGFuZCBmYXN0IHJlcGxhY2VtZW50IGZvciBydWJ5J3MgaHVnZSBhbmQg
        c2xvdwogICAgdGVzdC91bml0CiAgcGxhdGZvcm06IHJ1YnkKICBydWJ5Z2Vt
        c192ZXJzaW9uOiAiPj0gMCIKICBydWJ5X3ZlcnNpb246IAogIHByZXJlbGVh
        c2U6IGZhbHNlCiAgbGljZW5zZXM6IAogIHJlcXVpcmVtZW50czogCiAgc2hh
        OiBlNjE2Y2E2MTc1N2VmYzdkZjFjMTE3NmE2OWVjMjk5NzdmZWY4ZTNmZjIy
        ZGQ5MWYyNWRmYzkyNWYyNmRmY2Q2Ci0gYXV0aG9yczogUnlhbiBEYXZpcwog
        IGJ1aWx0X2F0OiAnMjAxMC0wMy0yN1QwNzowMDowMC4wMDBaJwogIGNyZWF0
        ZWRfYXQ6ICcyMDEwLTAzLTI4VDAwOjMzOjI4LjAzN1onCiAgZGVzY3JpcHRp
        b246IHwtCiAgICBtaW5pdGVzdC91bml0IGlzIGEgc21hbGwgYW5kIGZhc3Qg
        cmVwbGFjZW1lbnQgZm9yIHJ1YnkncyBodWdlIGFuZCBzbG93CiAgICB0ZXN0
        L3VuaXQuIFRoaXMgaXMgbWVhbnQgdG8gYmUgY2xlYW4gYW5kIGVhc3kgdG8g
        dXNlIGJvdGggYXMgYSByZWd1bGFyCiAgICB0ZXN0IHdyaXRlciBhbmQgZm9y
        IGxhbmd1YWdlIGltcGxlbWVudG9ycyB0aGF0IG5lZWQgYSBtaW5pbWFsIHNl
        dCBvZgogICAgbWV0aG9kcyB0byBib290c3RyYXAgYSB3b3JraW5nIHVuaXQg
        dGVzdCBzdWl0ZS4KCiAgICBtaW5pL3NwZWMgaXMgYSBmdW5jdGlvbmFsbHkg
        Y29tcGxldGUgc3BlYyBlbmdpbmUuCgogICAgbWluaS9tb2NrLCBieSBTdGV2
        ZW4gQmFrZXIsIGlzIGEgYmVhdXRpZnVsbHkgdGlueSBtb2NrIG9iamVjdCBm
        cmFtZXdvcmsuCgogICAgKFRoaXMgcGFja2FnZSB3YXMgY2FsbGVkIG1pbml1
        bml0IG9uY2UgdXBvbiBhIHRpbWUpCiAgZG93bmxvYWRzX2NvdW50OiA4MjY3
        MAogIG1ldGFkYXRhOiB7fQogIG51bWJlcjogMS42LjAKICBzdW1tYXJ5OiBt
        aW5pdGVzdC91bml0IGlzIGEgc21hbGwgYW5kIGZhc3QgcmVwbGFjZW1lbnQg
        Zm9yIHJ1YnkncyBodWdlIGFuZCBzbG93CiAgICB0ZXN0L3VuaXQKICBwbGF0
        Zm9ybTogcnVieQogIHJ1YnlnZW1zX3ZlcnNpb246ICI+PSAwIgogIHJ1Ynlf
        dmVyc2lvbjogCiAgcHJlcmVsZWFzZTogZmFsc2UKICBsaWNlbnNlczogCiAg
        cmVxdWlyZW1lbnRzOiAKICBzaGE6IDMzYTE1MTc4YzU4ZWQ2YWY3YmM4ZWM5
        ZDdmODRiMGIwNzExMjMyN2NlNDk1N2Q1NmVhODQyMGZjOTQ3MzYwNjEKLSBh
        dXRob3JzOiBSeWFuIERhdmlzCiAgYnVpbHRfYXQ6ICcyMDEwLTAxLTA2VDA4
        OjAwOjAwLjAwMFonCiAgY3JlYXRlZF9hdDogJzIwMTAtMDEtMDZUMjI6Mzc6
        MjAuMjAwWicKICBkZXNjcmlwdGlvbjogfC0KICAgIG1pbml0ZXN0L3VuaXQg
        aXMgYSBzbWFsbCBhbmQgZmFzdCByZXBsYWNlbWVudCBmb3IgcnVieSdzIGh1
        Z2UgYW5kIHNsb3cKICAgIHRlc3QvdW5pdC4gVGhpcyBpcyBtZWFudCB0byBi
        ZSBjbGVhbiBhbmQgZWFzeSB0byB1c2UgYm90aCBhcyBhIHJlZ3VsYXIKICAg
        IHRlc3Qgd3JpdGVyIGFuZCBmb3IgbGFuZ3VhZ2UgaW1wbGVtZW50b3JzIHRo
        YXQgbmVlZCBhIG1pbmltYWwgc2V0IG9mCiAgICBtZXRob2RzIHRvIGJvb3Rz
        dHJhcCBhIHdvcmtpbmcgdW5pdCB0ZXN0IHN1aXRlLgoKICAgIG1pbmkvc3Bl
        YyBpcyBhIGZ1bmN0aW9uYWxseSBjb21wbGV0ZSBzcGVjIGVuZ2luZS4KCiAg
        ICBtaW5pL21vY2ssIGJ5IFN0ZXZlbiBCYWtlciwgaXMgYSBiZWF1dGlmdWxs
        eSB0aW55IG1vY2sgb2JqZWN0IGZyYW1ld29yay4KCiAgICAoVGhpcyBwYWNr
        YWdlIHdhcyBjYWxsZWQgbWluaXVuaXQgb25jZSB1cG9uIGEgdGltZSkKICBk
        b3dubG9hZHNfY291bnQ6IDUwMDEKICBtZXRhZGF0YToge30KICBudW1iZXI6
        IDEuNS4wCiAgc3VtbWFyeTogbWluaXRlc3QvdW5pdCBpcyBhIHNtYWxsIGFu
        ZCBmYXN0IHJlcGxhY2VtZW50IGZvciBydWJ5J3MgaHVnZSBhbmQgc2xvdwog
        ICAgdGVzdC91bml0CiAgcGxhdGZvcm06IHJ1YnkKICBydWJ5Z2Vtc192ZXJz
        aW9uOiAiPj0gMCIKICBydWJ5X3ZlcnNpb246IAogIHByZXJlbGVhc2U6IGZh
        bHNlCiAgbGljZW5zZXM6IAogIHJlcXVpcmVtZW50czogCiAgc2hhOiBmMzRk
        ZjU4ZmRhYzBhOWJlODA3MzMxNTFkOTRlZTBlNmQ1NDgzYWIyYTZlZWVjMzkx
        NWJlNWE5YzU0NzI5ZDM0Ci0gYXV0aG9yczogUnlhbiBEYXZpcwogIGJ1aWx0
        X2F0OiAnMjAwOS0wNi0yNVQwNzowMDowMC4wMDBaJwogIGNyZWF0ZWRfYXQ6
        ICcyMDA5LTA4LTA1VDAwOjUwOjA5LjAwMFonCiAgZGVzY3JpcHRpb246IHwt
        CiAgICBtaW5pdGVzdC91bml0IGlzIGEgc21hbGwgYW5kIGZhc3QgcmVwbGFj
        ZW1lbnQgZm9yIHJ1YnkncyBodWdlIGFuZCBzbG93CiAgICB0ZXN0L3VuaXQu
        IFRoaXMgaXMgbWVhbnQgdG8gYmUgY2xlYW4gYW5kIGVhc3kgdG8gdXNlIGJv
        dGggYXMgYSByZWd1bGFyCiAgICB0ZXN0IHdyaXRlciBhbmQgZm9yIGxhbmd1
        YWdlIGltcGxlbWVudG9ycyB0aGF0IG5lZWQgYSBtaW5pbWFsIHNldCBvZgog
        ICAgbWV0aG9kcyB0byBib290c3RyYXAgYSB3b3JraW5nIHVuaXQgdGVzdCBz
        dWl0ZS4KCiAgICBtaW5pL3NwZWMgaXMgYSBmdW5jdGlvbmFsbHkgY29tcGxl
        dGUgc3BlYyBlbmdpbmUuCgogICAgbWluaS9tb2NrLCBieSBTdGV2ZW4gQmFr
        ZXIsIGlzIGEgYmVhdXRpZnVsbHkgdGlueSBtb2NrIG9iamVjdCBmcmFtZXdv
        cmsuCgogICAgKFRoaXMgcGFja2FnZSB3YXMgY2FsbGVkIG1pbml1bml0IG9u
        Y2UgdXBvbiBhIHRpbWUpCiAgZG93bmxvYWRzX2NvdW50OiA0NzQ2CiAgbWV0
        YWRhdGE6IHt9CiAgbnVtYmVyOiAxLjQuMgogIHN1bW1hcnk6IG1pbml0ZXN0
        L3VuaXQgaXMgYSBzbWFsbCBhbmQgZmFzdCByZXBsYWNlbWVudCBmb3IgcnVi
        eSdzIGh1Z2UgYW5kIHNsb3cKICAgIHRlc3QvdW5pdAogIHBsYXRmb3JtOiBy
        dWJ5CiAgcnVieWdlbXNfdmVyc2lvbjogIj49IDAiCiAgcnVieV92ZXJzaW9u
        OiAKICBwcmVyZWxlYXNlOiBmYWxzZQogIGxpY2Vuc2VzOiAKICByZXF1aXJl
        bWVudHM6IAogIHNoYTogZjgwNzMyY2ExYTZmYjU2NDhhYjNjMDQwMTZiMTIz
        MGNjZWI0NjhjZGE1NWFhN2Q0YjNlZWE5YjE0NmEzODVlOAotIGF1dGhvcnM6
        IFJ5YW4gRGF2aXMKICBidWlsdF9hdDogJzIwMDktMDYtMjNUMDc6MDA6MDAu
        MDAwWicKICBjcmVhdGVkX2F0OiAnMjAwOS0wOC0wNVQwMDo1MDoxMy4wMDBa
        JwogIGRlc2NyaXB0aW9uOiB8LQogICAgbWluaXRlc3QvdW5pdCBpcyBhIHNt
        YWxsIGFuZCBmYXN0IHJlcGxhY2VtZW50IGZvciBydWJ5J3MgaHVnZSBhbmQg
        c2xvdwogICAgdGVzdC91bml0LiBUaGlzIGlzIG1lYW50IHRvIGJlIGNsZWFu
        IGFuZCBlYXN5IHRvIHVzZSBib3RoIGFzIGEgcmVndWxhcgogICAgdGVzdCB3
        cml0ZXIgYW5kIGZvciBsYW5ndWFnZSBpbXBsZW1lbnRvcnMgdGhhdCBuZWVk
        IGEgbWluaW1hbCBzZXQgb2YKICAgIG1ldGhvZHMgdG8gYm9vdHN0cmFwIGEg
        d29ya2luZyB1bml0IHRlc3Qgc3VpdGUuCgogICAgbWluaS9zcGVjIGlzIGEg
        ZnVuY3Rpb25hbGx5IGNvbXBsZXRlIHNwZWMgZW5naW5lLgoKICAgIG1pbmkv
        bW9jaywgYnkgU3RldmVuIEJha2VyLCBpcyBhIGJlYXV0aWZ1bGx5IHRpbnkg
        bW9jayBvYmplY3QgZnJhbWV3b3JrLgoKICAgIChUaGlzIHBhY2thZ2Ugd2Fz
        IGNhbGxlZCBtaW5pdW5pdCBvbmNlIHVwb24gYSB0aW1lKQogIGRvd25sb2Fk
        c19jb3VudDogMjM2NwogIG1ldGFkYXRhOiB7fQogIG51bWJlcjogMS40LjEK
        ICBzdW1tYXJ5OiBtaW5pdGVzdC91bml0IGlzIGEgc21hbGwgYW5kIGZhc3Qg
        cmVwbGFjZW1lbnQgZm9yIHJ1YnkncyBodWdlIGFuZCBzbG93CiAgICB0ZXN0
        L3VuaXQKICBwbGF0Zm9ybTogcnVieQogIHJ1YnlnZW1zX3ZlcnNpb246ICI+
        PSAwIgogIHJ1YnlfdmVyc2lvbjogCiAgcHJlcmVsZWFzZTogZmFsc2UKICBs
        aWNlbnNlczogCiAgcmVxdWlyZW1lbnRzOiAKICBzaGE6IDQzOTNmOWIwOWIx
        MzExN2ZkYTg3MmIxMmVjNDVkZGVmZjliZGUwZmFkNjcyOThiMWYwMTY4Yzcx
        YTlkY2E2NDIKLSBhdXRob3JzOiBSeWFuIERhdmlzCiAgYnVpbHRfYXQ6ICcy
        MDA5LTA2LTE4VDA3OjAwOjAwLjAwMFonCiAgY3JlYXRlZF9hdDogJzIwMDkt
        MDgtMDVUMDA6NTA6MTYuMDAwWicKICBkZXNjcmlwdGlvbjogfC0KICAgIG1p
        bml0ZXN0L3VuaXQgaXMgYSBzbWFsbCBhbmQgZmFzdCByZXBsYWNlbWVudCBm
        b3IgcnVieSdzIGh1Z2UgYW5kIHNsb3cKICAgIHRlc3QvdW5pdC4gVGhpcyBp
        cyBtZWFudCB0byBiZSBjbGVhbiBhbmQgZWFzeSB0byB1c2UgYm90aCBhcyBh
        IHJlZ3VsYXIKICAgIHRlc3Qgd3JpdGVyIGFuZCBmb3IgbGFuZ3VhZ2UgaW1w
        bGVtZW50b3JzIHRoYXQgbmVlZCBhIG1pbmltYWwgc2V0IG9mCiAgICBtZXRo
        b2RzIHRvIGJvb3RzdHJhcCBhIHdvcmtpbmcgdW5pdCB0ZXN0IHN1aXRlLgoK
        ICAgIG1pbmkvc3BlYyBpcyBhIGZ1bmN0aW9uYWxseSBjb21wbGV0ZSBzcGVj
        IGVuZ2luZS4KCiAgICBtaW5pL21vY2ssIGJ5IFN0ZXZlbiBCYWtlciwgaXMg
        YSBiZWF1dGlmdWxseSB0aW55IG1vY2sgb2JqZWN0IGZyYW1ld29yay4KCiAg
        ICAoVGhpcyBwYWNrYWdlIHdhcyBjYWxsZWQgbWluaXVuaXQgb25jZSB1cG9u
        IGEgdGltZSkKICBkb3dubG9hZHNfY291bnQ6IDI5NjgKICBtZXRhZGF0YTog
        e30KICBudW1iZXI6IDEuNC4wCiAgc3VtbWFyeTogbWluaXRlc3QvdW5pdCBp
        cyBhIHNtYWxsIGFuZCBmYXN0IHJlcGxhY2VtZW50IGZvciBydWJ5J3MgaHVn
        ZSBhbmQgc2xvdwogICAgdGVzdC91bml0CiAgcGxhdGZvcm06IHJ1YnkKICBy
        dWJ5Z2Vtc192ZXJzaW9uOiAiPj0gMCIKICBydWJ5X3ZlcnNpb246IAogIHBy
        ZXJlbGVhc2U6IGZhbHNlCiAgbGljZW5zZXM6IAogIHJlcXVpcmVtZW50czog
        CiAgc2hhOiAwZTQwM2I5ZGUxY2EzNDIwZTRkNTZiMmYwOTUzMTE0ZDk2MTU2
        YWJjM2I2NTU0MDdhOTIxMzQ0ZDgwYjFmOWJiCi0gYXV0aG9yczogUnlhbiBE
        YXZpcwogIGJ1aWx0X2F0OiAnMjAwOS0wMS0yMFQwODowMDowMC4wMDBaJwog
        IGNyZWF0ZWRfYXQ6ICcyMDA5LTA3LTI1VDE4OjA3OjEyLjAwMFonCiAgZGVz
        Y3JpcHRpb246IG1pbml0ZXN0L3VuaXQgaXMgYSBzbWFsbCBhbmQgZmFzdCBy
        ZXBsYWNlbWVudCBmb3IgcnVieSdzIGh1Z2UgYW5kIHNsb3cKICAgIHRlc3Qv
        dW5pdC4gVGhpcyBpcyBtZWFudCB0byBiZSBjbGVhbiBhbmQgZWFzeSB0byB1
        c2UgYm90aCBhcyBhIHJlZ3VsYXIgdGVzdCB3cml0ZXIKICAgIGFuZCBmb3Ig
        bGFuZ3VhZ2UgaW1wbGVtZW50b3JzIHRoYXQgbmVlZCBhIG1pbmltYWwgc2V0
        IG9mIG1ldGhvZHMgdG8gYm9vdHN0cmFwCiAgICBhIHdvcmtpbmcgdW5pdCB0
        ZXN0IHN1aXRlLiAgbWluaS9zcGVjIGlzIGEgZnVuY3Rpb25hbGx5IGNvbXBs
        ZXRlIHNwZWMgZW5naW5lLiAgbWluaS9tb2NrLAogICAgYnkgU3RldmVuIEJh
        a2VyLCBpcyBhIGJlYXV0aWZ1bGx5IHRpbnkgbW9jayBvYmplY3QgZnJhbWV3
        b3JrLiAgKFRoaXMgcGFja2FnZSB3YXMKICAgIGNhbGxlZCBtaW5pdW5pdCBv
        bmNlIHVwb24gYSB0aW1lKQogIGRvd25sb2Fkc19jb3VudDogMjMyNAogIG1l
        dGFkYXRhOiB7fQogIG51bWJlcjogMS4zLjEKICBzdW1tYXJ5OiBtaW5pdGVz
        dC91bml0IGlzIGEgc21hbGwgYW5kIGZhc3QgcmVwbGFjZW1lbnQgZm9yIHJ1
        YnkncyBodWdlIGFuZCBzbG93CiAgICB0ZXN0L3VuaXQKICBwbGF0Zm9ybTog
        cnVieQogIHJ1YnlnZW1zX3ZlcnNpb246ICI+PSAwIgogIHJ1YnlfdmVyc2lv
        bjogCiAgcHJlcmVsZWFzZTogZmFsc2UKICBsaWNlbnNlczogCiAgcmVxdWly
        ZW1lbnRzOiAKICBzaGE6IDRjN2YzNDgyNzM4ZWUzZDM2MGQ3MDgzNDE3N2Fm
        ZTk2NjNiNGYwN2VkOWVmZTc2ODgyYzE1N2E3M2ZhZGMzNGYKLSBhdXRob3Jz
        OiBSeWFuIERhdmlzCiAgYnVpbHRfYXQ6ICcyMDA4LTEwLTA5VDA3OjAwOjAw
        LjAwMFonCiAgY3JlYXRlZF9hdDogJzIwMDktMDctMjVUMTg6MDc6MTIuMDAw
        WicKICBkZXNjcmlwdGlvbjogbWluaXRlc3QvdW5pdCBpcyBhIHNtYWxsIGFu
        ZCBmYXN0IHJlcGxhY2VtZW50IGZvciBydWJ5J3MgaHVnZSBhbmQgc2xvdwog
        ICAgdGVzdC91bml0LiBUaGlzIGlzIG1lYW50IHRvIGJlIGNsZWFuIGFuZCBl
        YXN5IHRvIHVzZSBib3RoIGFzIGEgcmVndWxhciB0ZXN0IHdyaXRlcgogICAg
        YW5kIGZvciBsYW5ndWFnZSBpbXBsZW1lbnRvcnMgdGhhdCBuZWVkIGEgbWlu
        aW1hbCBzZXQgb2YgbWV0aG9kcyB0byBib290c3RyYXAKICAgIGEgd29ya2lu
        ZyB1bml0IHRlc3Qgc3VpdGUuICBtaW5pL3NwZWMgaXMgYSBmdW5jdGlvbmFs
        bHkgY29tcGxldGUgc3BlYyBlbmdpbmUuICBtaW5pL21vY2ssCiAgICBieSBT
        dGV2ZW4gQmFrZXIsIGlzIGEgYmVhdXRpZnVsbHkgdGlueSBtb2NrIG9iamVj
        dCBmcmFtZXdvcmsuICAoVGhpcyBwYWNrYWdlIHdhcwogICAgY2FsbGVkIG1p
        bml1bml0IG9uY2UgdXBvbiBhIHRpbWUpCiAgZG93bmxvYWRzX2NvdW50OiAz
        MjA3CiAgbWV0YWRhdGE6IHt9CiAgbnVtYmVyOiAxLjMuMAogIHN1bW1hcnk6
        IG1pbml0ZXN0L3VuaXQgaXMgYSBzbWFsbCBhbmQgZmFzdCByZXBsYWNlbWVu
        dCBmb3IgcnVieSdzIGh1Z2UgYW5kIHNsb3cKICAgIHRlc3QvdW5pdAogIHBs
        YXRmb3JtOiBydWJ5CiAgcnVieWdlbXNfdmVyc2lvbjogIj49IDAiCiAgcnVi
        eV92ZXJzaW9uOiAKICBwcmVyZWxlYXNlOiBmYWxzZQogIGxpY2Vuc2VzOiAK
        ICByZXF1aXJlbWVudHM6IAogIHNoYTogZjcxZDBlZjQ3ZDg5YjQxM2E1YWZl
        YjY3MTMwNjdhY2U3YTE3NDBhZTk4NGQ3ZWVlYWZiZTMxM2JlODkyMWMzMQo=
    http_version: 
  recorded_at: Fri, 06 Jan 2017 17:10:01 GMT
- request:
    method: get
    uri: https://rubygems.org/api/v1/gems/minitest/owners.yaml
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Gems 0.8.3
      - Ruby
      Authorization:
      - 1da62a2449ff2bdd425e9e82261f7b72
      Connection:
      - keep-alive
      Keep-Alive:
      - '30'
      Content-Type:
      - application/x-www-form-urlencoded
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - text/yaml
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
      Content-Disposition:
      - attachment
      Content-Transfer-Encoding:
      - binary
      Cache-Control:
      - private
      X-Request-Id:
      - 084c49c8-8edd-4dd5-9f64-b74127fd0d5b
      X-Runtime:
      - '0.007935'
      X-Ua-Compatible:
      - IE=Edge,chrome=1
      X-Backend:
      - F_Rails 54.186.104.15:443
      Transfer-Encoding:
      - chunked
      Accept-Ranges:
      - bytes
      Date:
      - Fri, 06 Jan 2017 17:10:02 GMT
      Via:
      - 1.1 varnish
      Age:
      - '0'
      Connection:
      - keep-alive
      X-Served-By:
      - cache-bma7027-BMA
      X-Cache:
      - MISS
      X-Cache-Hits:
      - '0'
      X-Timer:
      - S1483722602.028267,VS0,VE203
      Vary:
      - Accept-Encoding,Fastly-SSL
      Etag:
      - '"2257b2cc3aa421258de8c310549f0e06"'
      Server:
      - RubyGems.org
    body:
      encoding: ASCII-8BIT
      string: |
        ---
        - id: 2966
          handle: zenspider
          email: ryand-ruby@zenspider.com
    http_version: 
  recorded_at: Fri, 06 Jan 2017 17:10:02 GMT
- request:
    method: get
    uri: https://rubygems.org/api/v1/gems/tzinfo.yaml
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Gems 0.8.3
      - Ruby
      Authorization:
      - 1da62a2449ff2bdd425e9e82261f7b72
      Connection:
      - keep-alive
      Keep-Alive:
      - '30'
      Content-Type:
      - application/x-www-form-urlencoded
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - text/yaml
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
      Content-Disposition:
      - attachment
      Content-Transfer-Encoding:
      - binary
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET
      Access-Control-Max-Age:
      - '1728000'
      Cache-Control:
      - private
      X-Request-Id:
      - c7bcbde9-b8e3-4eb4-8762-c5dc32c0c18c
      X-Runtime:
      - '0.012470'
      X-Ua-Compatible:
      - IE=Edge,chrome=1
      X-Backend:
      - F_Rails 54.186.104.15:443
      Transfer-Encoding:
      - chunked
      Accept-Ranges:
      - bytes
      Date:
      - Fri, 06 Jan 2017 17:10:02 GMT
      Via:
      - 1.1 varnish
      Connection:
      - keep-alive
      X-Served-By:
      - cache-bma7021-BMA
      X-Cache:
      - MISS
      X-Cache-Hits:
      - '0'
      X-Timer:
      - S1483722602.390752,VS0,VE209
      Vary:
      - Accept-Encoding,Fastly-SSL
      Etag:
      - '"f606bebc80760110eedcfb267b45486c"'
      Server:
      - RubyGems.org
    body:
      encoding: ASCII-8BIT
      string: |
        ---
        name: tzinfo
        downloads: 99085899
        version: 1.2.2
        version_downloads: 46588325
        platform: ruby
        authors: Philip Ross
        info: TZInfo provides daylight savings aware transformations between times in different
          time zones.
        licenses:
        - MIT
        metadata: {}
        sha: fdb1d3fdf2776d490c82a0e589a08e7cbde70ac1ae7d2b1f0b7e77f3e6b801b0
        project_uri: https://rubygems.org/gems/tzinfo
        gem_uri: https://rubygems.org/gems/tzinfo-1.2.2.gem
        homepage_uri: http://tzinfo.github.io
        wiki_uri: ''
        documentation_uri: http://www.rubydoc.info/gems/tzinfo/1.2.2
        mailing_list_uri: http://rubyforge.org/mail/?group_id=894
        source_code_uri: https://github.com/tzinfo/tzinfo
        bug_tracker_uri: https://github.com/tzinfo/tzinfo/issues
        dependencies:
          development: []
          runtime:
          - name: thread_safe
            requirements: "~> 0.1"
    http_version: 
  recorded_at: Fri, 06 Jan 2017 17:10:02 GMT
- request:
    method: get
    uri: https://rubygems.org/api/v1/versions/tzinfo.yaml
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Gems 0.8.3
      - Ruby
      Authorization:
      - 1da62a2449ff2bdd425e9e82261f7b72
      Connection:
      - keep-alive
      Keep-Alive:
      - '30'
      Content-Type:
      - application/x-www-form-urlencoded
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - text/yaml
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
      Etag:
      - '"0f43c79ff8803a5a931535807bcb7f8f"'
      Last-Modified:
      - Fri, 28 Oct 2016 18:04:19 GMT
      Content-Disposition:
      - attachment
      Content-Transfer-Encoding:
      - binary
      Cache-Control:
      - max-age=0, public
      X-Request-Id:
      - 309b9918-9eeb-4c5e-bb5f-24f997fbb4da
      X-Runtime:
      - '0.104476'
      X-Ua-Compatible:
      - IE=Edge,chrome=1
      X-Backend:
      - F_Rails 54.186.104.15:443
      Content-Length:
      - '4993'
      Accept-Ranges:
      - bytes
      Date:
      - Fri, 06 Jan 2017 17:10:02 GMT
      Via:
      - 1.1 varnish
      Age:
      - '51'
      Connection:
      - keep-alive
      X-Served-By:
      - cache-bma7026-BMA
      X-Cache:
      - HIT
      X-Cache-Hits:
      - '1'
      X-Timer:
      - S1483722602.791408,VS0,VE0
      Vary:
      - Accept-Encoding,Fastly-SSL
      Server:
      - RubyGems.org
    body:
      encoding: ASCII-8BIT
      string: "---\n- authors: Philip Ross\n  built_at: '2014-08-08T00:00:00.000Z'\n
        \ created_at: '2014-08-08T18:00:21.494Z'\n  description: TZInfo provides daylight
        savings aware transformations between times\n    in different time zones.\n
        \ downloads_count: 46588325\n  metadata: {}\n  number: 1.2.2\n  summary: Daylight
        savings aware timezone library\n  platform: ruby\n  rubygems_version: \">=
        0\"\n  ruby_version: \">= 1.8.7\"\n  prerelease: false\n  licenses:\n  - MIT\n
        \ requirements: []\n  sha: fdb1d3fdf2776d490c82a0e589a08e7cbde70ac1ae7d2b1f0b7e77f3e6b801b0\n-
        authors: Philip Ross\n  built_at: '2014-06-01T00:00:00.000Z'\n  created_at:
        '2014-06-01T14:57:46.796Z'\n  description: TZInfo provides daylight savings
        aware transformations between times\n    in different time zones.\n  downloads_count:
        1706892\n  metadata: {}\n  number: 1.2.1\n  summary: Daylight savings aware
        timezone library\n  platform: ruby\n  rubygems_version: \">= 0\"\n  ruby_version:
        \">= 1.8.7\"\n  prerelease: false\n  licenses:\n  - MIT\n  requirements: []\n
        \ sha: 52787314a74eea6d20b0df2fb0034fdb83b04415ff493cc39b4d4ad0cb80b6a0\n-
        authors: Philip Ross\n  built_at: '2014-05-26T00:00:00.000Z'\n  created_at:
        '2014-05-26T14:10:14.996Z'\n  description: TZInfo provides daylight savings
        aware transformations between times\n    in different time zones.\n  downloads_count:
        148368\n  metadata: {}\n  number: 1.2.0\n  summary: Daylight savings aware
        timezone library\n  platform: ruby\n  rubygems_version: \">= 0\"\n  ruby_version:
        \">= 1.8.7\"\n  prerelease: false\n  licenses:\n  - MIT\n  requirements: []\n
        \ sha: d8c9aae397ecef24e04fb1acbe46c5dc45b1f42049407ade3f521f7e6f58d79d\n-
        authors: Philip Ross\n  built_at: '2013-09-25T00:00:00.000Z'\n  created_at:
        '2013-09-25T22:42:31.423Z'\n  description: TZInfo provides daylight savings
        aware transformations between times\n    in different time zones.\n  downloads_count:
        1432267\n  metadata: {}\n  number: 1.1.0\n  summary: Daylight savings aware
        timezone library\n  platform: ruby\n  rubygems_version: \">= 0\"\n  ruby_version:
        \n  prerelease: false\n  licenses:\n  - MIT\n  requirements: []\n  sha: 715a47c25f8e4c2f106c92d5a97e612f84eb7e85f5822bf3d6cf615b44492abc\n-
        authors: Philip Ross\n  built_at: '2013-06-22T00:00:00.000Z'\n  created_at:
        '2013-06-22T17:30:50.204Z'\n  description: TZInfo provides daylight savings
        aware transformations between times\n    in different time zones.\n  downloads_count:
        155886\n  metadata: {}\n  number: 1.0.1\n  summary: Daylight savings aware
        timezone library\n  platform: ruby\n  rubygems_version: \">= 0\"\n  ruby_version:
        \n  prerelease: false\n  licenses:\n  - MIT\n  requirements: \n  sha: 438297f420d1c48d55fc2a8df08e0b7ba47311f60fe02ad8212256612c505a42\n-
        authors: Philip Ross\n  built_at: '2013-06-02T00:00:00.000Z'\n  created_at:
        '2013-06-02T17:05:45.655Z'\n  description: TZInfo provides daylight savings
        aware transformations between times\n    in different time zones.\n  downloads_count:
        28336\n  metadata: {}\n  number: 1.0.0\n  summary: Daylight savings aware
        timezone library\n  platform: ruby\n  rubygems_version: \">= 0\"\n  ruby_version:
        \n  prerelease: false\n  licenses:\n  - MIT\n  requirements: \n  sha: d43f3ab61e465a958782b4490f9a0b0a73bef8352945ba5eb5c6f12a92bd1c70\n-
        authors: Philip Ross\n  built_at: '2016-10-27T00:00:00.000Z'\n  created_at:
        '2016-10-28T18:04:18.725Z'\n  description: TZInfo is a Ruby library that uses
        the standard tz (Olson) database\n    to provide daylight savings aware transformations
        between times in different time\n    zones.\n  downloads_count: 239581\n  metadata:
        {}\n  number: 0.3.52\n  summary: Daylight-savings aware timezone library\n
        \ platform: ruby\n  rubygems_version: \">= 0\"\n  ruby_version: \">= 0\"\n
        \ prerelease: false\n  licenses:\n  - MIT\n  requirements: []\n  sha: 8354497af5f03549fbca9880074b6fa3f33c842accec0d8e5d5f19c3bae43c17\n-
        authors: Philip Ross\n  built_at: '2016-07-04T00:00:00.000Z'\n  created_at:
        '2016-07-05T21:49:23.523Z'\n  description: TZInfo is a Ruby library that uses
        the standard tz (Olson) database\n    to provide daylight savings aware transformations
        between times in different time\n    zones.\n  downloads_count: 724222\n  metadata:
        {}\n  number: 0.3.51\n  summary: Daylight-savings aware timezone library\n
        \ platform: ruby\n  rubygems_version: \">= 0\"\n  ruby_version: \">= 0\"\n
        \ prerelease: false\n  licenses:\n  - MIT\n  requirements: []\n  sha: 92541efbd7fc48da746e34357adada9fdba9374d85a57441f36a584735b85c5e\n-
        authors: Philip Ross\n  built_at: '2016-06-13T00:00:00.000Z'\n  created_at:
        '2016-06-14T20:28:01.731Z'\n  description: TZInfo is a Ruby library that uses
        the standard tz (Olson) database\n    to provide daylight savings aware transformations
        between times in different time\n    zones.\n  downloads_count: 136985\n  metadata:
        {}\n  number: 0.3.50\n  summary: Daylight-savings aware timezone library\n
        \ platform: ruby\n  rubygems_version: \">= 0\"\n  ruby_version: \">= 0\"\n
        \ prerelease: false\n  licenses:\n  - MIT\n  requirements: []\n  sha: 3e74ebcd0ba9ac2f0c5f0f48fe2dfc205fedbc094a1b2221c599781c59c4fccb\n-
        authors: Philip Ross\n  built_at: '2016-04-17T00:00:00.000Z'\n  created_at:
        '2016-04-18T21:52:37.514Z'\n  description: TZInfo is a Ruby library that uses
        the standard tz (Olson) database\n    to provide daylight savings aware transformations
        between times in different time\n    zones.\n  downloads_count: 394025\n  metadata:
        {}\n  number: 0.3.49\n  summary: Daylight-savings aware timezone library\n
        \ platform: ruby\n  rubygems_version: \">= 0\"\n  ruby_version: \">= 0\"\n
        \ prerelease: false\n  licenses:\n  - MIT\n  requirements: []\n  sha: 1fe60be515209f3cadcb096c1b701fe37980bbb0b7935fb2aa0a3dc4acff0703\n-
        authors: Philip Ross\n  built_at: '2016-03-23T00:00:00.000Z'\n  created_at:
        '2016-03-23T23:58:24.540Z'\n  description: TZInfo is a Ruby library that uses
        the standard tz (Olson) database\n    to provide daylight savings aware transformations
        between times in different time\n    zones.\n  downloads_count: 407792\n  metadata:
        {}\n  number: 0.3.48\n  summary: Daylight-savings aware timezone library\n
        \ platform: ruby\n  rubygems_version: \">= 0\"\n  ruby_version: \">= 0\"\n
        \ prerelease: false\n  licenses:\n  - MIT\n  requirements: []\n  sha: f57acf2e8c433ba5d853d4505a7ef7e5e705ddb5908db5c076e649e4e3f7a537\n-
        authors: Philip Ross\n  built_at: '2016-03-15T00:00:00.000Z'\n  created_at:
        '2016-03-15T23:20:23.256Z'\n  description: TZInfo is a Ruby library that uses
        the standard tz (Olson) database\n    to provide daylight savings aware transformations
        between times in different time\n    zones.\n  downloads_count: 411651\n  metadata:
        {}\n  number: 0.3.47\n  summary: Daylight-savings aware timezone library\n
        \ platform: ruby\n  rubygems_version: \">= 0\"\n  ruby_version: \">= 0\"\n
        \ prerelease: false\n  licenses:\n  - MIT\n  requirements: []\n  sha: 99c573c72a36070217cd88b90aa3333c450ac52207e44c2f231a56802c42e069\n-
        authors: Philip Ross\n  built_at: '2015-12-02T00:00:00.000Z'\n  created_at:
        '2015-12-02T23:40:50.843Z'\n  description: TZInfo is a Ruby library that uses
        the standard tz (Olson) database\n    to provide daylight savings aware transformations
        between times in different time\n    zones.\n  downloads_count: 1144467\n
        \ metadata: {}\n  number: 0.3.46\n  summary: Daylight-savings aware timezone
        library\n  platform: ruby\n  rubygems_version: \">= 0\"\n  ruby_version: \">=
        0\"\n  prerelease: false\n  licenses:\n  - MIT\n  requirements: []\n  sha:
        c5db7ee29ad295e98efc45b77c03912ebb005c851a96cde86794acd07a101789\n- authors:
        Philip Ross\n  built_at: '2015-10-02T00:00:00.000Z'\n  created_at: '2015-10-03T15:07:03.952Z'\n
        \ description: TZInfo is a Ruby library that uses the standard tz (Olson)
        database\n    to provide daylight savings aware transformations between times
        in different time\n    zones.\n  downloads_count: 635514\n  metadata: {}\n
        \ number: 0.3.45\n  summary: Daylight-savings aware timezone library\n  platform:
        ruby\n  rubygems_version: \">= 0\"\n  ruby_version: \">= 0\"\n  prerelease:
        false\n  licenses:\n  - MIT\n  requirements: []\n  sha: 936bc317761a47b7e0858bd7ce875c0e7f19b1eedf024b876a3dd6f799172ce7\n-
        authors: Philip Ross\n  built_at: '2015-04-23T00:00:00.000Z'\n  created_at:
        '2015-04-24T22:19:56.396Z'\n  description: TZInfo is a Ruby library that uses
        the standard tz (Olson) database\n    to provide daylight savings aware transformations
        between times in different time\n    zones.\n  downloads_count: 1867669\n
        \ metadata: {}\n  number: 0.3.44\n  summary: Daylight-savings aware timezone
        library\n  platform: ruby\n  rubygems_version: \">= 0\"\n  ruby_version: \">=
        0\"\n  prerelease: false\n  licenses:\n  - MIT\n  requirements: []\n  sha:
        a717f358872144fabf762da0f8a6ba23ce764550230ff0b831957247c8484ca8\n- authors:
        Philip Ross\n  built_at: '2015-01-31T00:00:00.000Z'\n  created_at: '2015-01-31T20:24:25.433Z'\n
        \ description: TZInfo is a Ruby library that uses the standard tz (Olson)
        database\n    to provide daylight savings aware transformations between times
        in different time\n    zones.\n  downloads_count: 1236836\n  metadata: {}\n
        \ number: 0.3.43\n  summary: Daylight-savings aware timezone library\n  platform:
        ruby\n  rubygems_version: \">= 0\"\n  ruby_version: \">= 0\"\n  prerelease:
        false\n  licenses:\n  - MIT\n  requirements: []\n  sha: 4df52124b359789ac13aa12f46b9665d562b189fc6e60c44b9aa6d997b100a70\n-
        authors: Philip Ross\n  built_at: '2014-10-22T00:00:00.000Z'\n  created_at:
        '2014-10-23T20:12:58.749Z'\n  description: TZInfo is a Ruby library that uses
        the standard tz (Olson) database\n    to provide daylight savings aware transformations
        between times in different time\n    zones.\n  downloads_count: 1705062\n
        \ metadata: {}\n  number: 0.3.42\n  summary: Daylight-savings aware timezone
        library\n  platform: ruby\n  rubygems_version: \">= 0\"\n  ruby_version: \">=
        0\"\n  prerelease: false\n  licenses:\n  - MIT\n  requirements: []\n  sha:
        37452ed65ed2b1ff4bdb6d488313f833da85a00c426e23845ccf62ceaccac168\n- authors:
        Philip Ross\n  built_at: '2014-08-07T00:00:00.000Z'\n  created_at: '2014-08-08T19:13:31.307Z'\n
        \ description: TZInfo is a Ruby library that uses the standard tz (Olson)
        database\n    to provide daylight savings aware transformations between times
        in different time\n    zones.\n  downloads_count: 1462510\n  metadata: {}\n
        \ number: 0.3.41\n  summary: Daylight-savings aware timezone library\n  platform:
        ruby\n  rubygems_version: \">= 0\"\n  ruby_version: \">= 0\"\n  prerelease:
        false\n  licenses:\n  - MIT\n  requirements: []\n  sha: 381b22fd1744a35d0a0239f563f505773681e626e6d900063b14cb9b1b68e98c\n-
        authors: Philip Ross\n  built_at: '2014-07-09T23:00:00.000Z'\n  created_at:
        '2014-07-10T20:57:11.589Z'\n  description: TZInfo is a Ruby library that uses
        the standard tz (Olson) database\n    to provide daylight savings aware transformations
        between times in different time\n    zones.\n  downloads_count: 621069\n  metadata:
        {}\n  number: 0.3.40\n  summary: Daylight-savings aware timezone library\n
        \ platform: ruby\n  rubygems_version: \">= 0\"\n  ruby_version: \">= 0\"\n
        \ prerelease: false\n  licenses:\n  - MIT\n  requirements: []\n  sha: 4010840329184bc05374f108bb09bd99a0278aee9474c0f5c7e7d009ae502640\n-
        authors: Philip Ross\n  built_at: '2014-03-09T00:00:00.000Z'\n  created_at:
        '2014-03-09T20:19:53.295Z'\n  description: TZInfo is a Ruby library that uses
        the standard tz (Olson) database\n    to provide daylight savings aware transformations
        between times in different time\n    zones.\n  downloads_count: 3545119\n
        \ metadata: {}\n  number: 0.3.39\n  summary: Daylight-savings aware timezone
        library\n  platform: ruby\n  rubygems_version: \">= 0\"\n  ruby_version: \n
        \ prerelease: false\n  licenses:\n  - MIT\n  requirements: []\n  sha: f0ad9f7936aa6f8fd2222fbd33adc7e3e3c21800d36d46fd04edde9692e255d2\n-
        authors: Philip Ross\n  built_at: '2013-10-07T23:00:00.000Z'\n  created_at:
        '2013-10-08T22:28:55.762Z'\n  description: TZInfo is a Ruby library that uses
        the standard tz (Olson) database\n    to provide daylight savings aware transformations
        between times in different time\n    zones.\n  downloads_count: 5478728\n
        \ metadata: {}\n  number: 0.3.38\n  summary: Daylight-savings aware timezone
        library\n  platform: ruby\n  rubygems_version: \">= 0\"\n  ruby_version: \n
        \ prerelease: false\n  licenses: []\n  requirements: []\n  sha: c8c8525a056b7e26228cc8fa1cdb969fe980a207346cd84ac519ccb7554e63e8\n-
        authors: Philip Ross\n  built_at: '2013-03-11T00:00:00.000Z'\n  created_at:
        '2013-03-11T22:38:22.171Z'\n  description: TZInfo is a Ruby library that uses
        the standard tz (Olson) database\n    to provide daylight savings aware transformations
        between times in different time\n    zones.\n  downloads_count: 8863690\n
        \ metadata: {}\n  number: 0.3.37\n  summary: Daylight-savings aware timezone
        library\n  platform: ruby\n  rubygems_version: \">= 0\"\n  ruby_version: \n
        \ prerelease: false\n  licenses: []\n  requirements: \n  sha: 6c8e551f2067b64c4edb00da70b1b85ac761e611cd73c7c937709ca797da225e\n-
        authors: Philip Ross\n  built_at: '2013-03-03T00:00:00.000Z'\n  created_at:
        '2013-03-03T16:26:42.312Z'\n  description: TZInfo is a Ruby library that uses
        the standard tz (Olson) database\n    to provide daylight savings aware transformations
        between times in different time\n    zones.\n  downloads_count: 293059\n  metadata:
        {}\n  number: 0.3.36\n  summary: Daylight-savings aware timezone library\n
        \ platform: ruby\n  rubygems_version: \">= 0\"\n  ruby_version: \n  prerelease:
        false\n  licenses: []\n  requirements: \n  sha: 1b72a19f2dd29c4937c9932c3c42db4722ffba37701dfc26838b969ca19567b6\n-
        authors: Philip Ross\n  built_at: '2012-11-04T00:00:00.000Z'\n  created_at:
        '2012-11-04T23:02:01.283Z'\n  description: TZInfo is a Ruby library that uses
        the standard tz (Olson) database\n    to provide daylight savings aware transformations
        between times in different time\n    zones.\n  downloads_count: 5892940\n
        \ metadata: {}\n  number: 0.3.35\n  summary: Daylight-savings aware timezone
        library\n  platform: ruby\n  rubygems_version: \">= 0\"\n  ruby_version: \n
        \ prerelease: false\n  licenses: \n  requirements: \n  sha: b72ee96326a85fd2d8ccef97d94d10d15e46194aae2fca28ecef768665b3a2b0\n-
        authors: Philip Ross\n  built_at: '2012-10-26T23:00:00.000Z'\n  created_at:
        '2012-10-27T15:25:22.896Z'\n  description: TZInfo is a Ruby library that uses
        the standard tz (Olson) database\n    to provide daylight savings aware transformations
        between times in different time\n    zones.\n  downloads_count: 185124\n  metadata:
        {}\n  number: 0.3.34\n  summary: Daylight-savings aware timezone library\n
        \ platform: ruby\n  rubygems_version: \">= 0\"\n  ruby_version: \n  prerelease:
        false\n  licenses: \n  requirements: \n  sha: ae9b5377a1fb01939a7751b4378a3ad36eadf93af4d3f2af431bad2712e30392\n-
        authors: Philip Ross\n  built_at: '2012-04-07T23:00:00.000Z'\n  created_at:
        '2012-04-08T15:47:06.586Z'\n  description: TZInfo is a Ruby library that uses
        the standard tz (Olson) database\n    to provide daylight savings aware transformations
        between times in different time\n    zones.\n  downloads_count: 4534397\n
        \ metadata: {}\n  number: 0.3.33\n  summary: Daylight-savings aware timezone
        library\n  platform: ruby\n  rubygems_version: \">= 0\"\n  ruby_version: \n
        \ prerelease: false\n  licenses: \n  requirements: \n  sha: 376cfdc347e0776348e20743e13edeaadeb908f737bce0aa328fb2aa445dee2d\n-
        authors: Philip Ross\n  built_at: '2012-03-04T00:00:00.000Z'\n  created_at:
        '2012-03-04T16:04:29.886Z'\n  description: TZInfo is a Ruby library that uses
        the standard tz (Olson) database\n    to provide daylight savings aware transformations
        between times in different time\n    zones.\n  downloads_count: 787754\n  metadata:
        {}\n  number: 0.3.32\n  summary: Daylight-savings aware timezone library\n
        \ platform: ruby\n  rubygems_version: \">= 0\"\n  ruby_version: \n  prerelease:
        false\n  licenses: \n  requirements: \n  sha: eb1c6d01783d17abf88229ca29676f930f6ba0cc05c6946b6defd6c4d26cc4e2\n-
        authors: Philip Ross\n  built_at: '2011-11-06T00:00:00.000Z'\n  created_at:
        '2011-11-06T16:45:39.224Z'\n  description: TZInfo is a Ruby library that uses
        the standard tz (Olson) database\n    to provide daylight savings aware transformations
        between times in different time\n    zones.\n  downloads_count: 1939419\n
        \ metadata: {}\n  number: 0.3.31\n  summary: Daylight-savings aware timezone
        library\n  platform: ruby\n  rubygems_version: \">= 0\"\n  ruby_version: \n
        \ prerelease: false\n  licenses: \n  requirements: \n  sha: 0b06e23121052135d228f750fdd24b10b5bc81e81add0ba5cf9ba11e58118ccf\n-
        authors: Philip Ross\n  built_at: '2011-09-28T23:00:00.000Z'\n  created_at:
        '2011-09-29T22:10:14.016Z'\n  description: TZInfo is a Ruby library that uses
        the standard tz (Olson) database\n    to provide daylight savings aware transformations
        between times in different time\n    zones.\n  downloads_count: 588358\n  metadata:
        {}\n  number: 0.3.30\n  summary: Daylight-savings aware timezone library\n
        \ platform: ruby\n  rubygems_version: \">= 0\"\n  ruby_version: \n  prerelease:
        false\n  licenses: \n  requirements: \n  sha: 522d7bac90426926ae80639d512f2ed6f2152ee5b58719cf4eb0fcc9d762ff8f\n-
        authors: Philip Ross\n  built_at: '2011-06-26T23:00:00.000Z'\n  created_at:
        '2011-06-27T22:08:56.375Z'\n  description: TZInfo is a Ruby library that uses
        the standard tz (Olson) database\n    to provide daylight savings aware transformations
        between times in different time\n    zones.\n  downloads_count: 1277142\n
        \ metadata: {}\n  number: 0.3.29\n  summary: Daylight-savings aware timezone
        library\n  platform: ruby\n  rubygems_version: \">= 0\"\n  ruby_version: \n
        \ prerelease: false\n  licenses: \n  requirements: \n  sha: 32e6ea4fbab70c29796ebc49b9de014b60203b10a92d6c45786f07123223a080\n-
        authors: Philip Ross\n  built_at: '2011-06-12T23:00:00.000Z'\n  created_at:
        '2011-06-13T21:41:04.133Z'\n  description: TZInfo is a Ruby library that uses
        the standard tz (Olson) database\n    to provide daylight savings aware transformations
        between times in different time\n    zones.\n  downloads_count: 207209\n  metadata:
        {}\n  number: 0.3.28\n  summary: Daylight-savings aware timezone library\n
        \ platform: ruby\n  rubygems_version: \">= 0\"\n  ruby_version: \n  prerelease:
        false\n  licenses: \n  requirements: \n  sha: 9e0be2c610006e2232b5e7590a72839a7662d758e080ffec5543d3b535e806f3\n-
        authors: Philip Ross\n  built_at: '2011-04-25T23:00:00.000Z'\n  created_at:
        '2011-04-26T20:01:16.241Z'\n  description: TZInfo is a Ruby library that uses
        the standard tz (Olson) database\n    to provide daylight savings aware transformations
        between times in different time\n    zones.\n  downloads_count: 549020\n  metadata:
        {}\n  number: 0.3.27\n  summary: Daylight-savings aware timezone library\n
        \ platform: ruby\n  rubygems_version: \">= 0\"\n  ruby_version: \n  prerelease:
        false\n  licenses: \n  requirements: \n  sha: 80c2feac5ecc7eaf2033e825519816d60edb1164c5f9bf7fd49aa4e660867e95\n-
        authors: Philip Ross\n  built_at: '2011-04-01T23:00:00.000Z'\n  created_at:
        '2011-04-02T16:11:49.930Z'\n  description: TZInfo is a Ruby library that uses
        the standard tz (Olson) database\n    to provide daylight savings aware transformations
        between times in different time\n    zones.\n  downloads_count: 340065\n  metadata:
        {}\n  number: 0.3.26\n  summary: Daylight-savings aware timezone library\n
        \ platform: ruby\n  rubygems_version: \">= 0\"\n  ruby_version: \n  prerelease:
        false\n  licenses: \n  requirements: \n  sha: 37288f4ab4148855b1c3e25e1a53573d8785d44a615383f12907ceec02146d2d\n-
        authors: Philip Ross\n  built_at: '2011-03-14T00:00:00.000Z'\n  created_at:
        '2011-03-14T20:29:36.254Z'\n  description: TZInfo is a Ruby library that uses
        the standard tz (Olson) database\n    to provide daylight savings aware transformations
        between times in different time\n    zones.\n  downloads_count: 209779\n  metadata:
        {}\n  number: 0.3.25\n  summary: Daylight-savings aware timezone library\n
        \ platform: ruby\n  rubygems_version: \">= 0\"\n  ruby_version: \n  prerelease:
        false\n  licenses: \n  requirements: \n  sha: a87a3809aaf94d7dd941db63450fccac1910ed886e61833269d0bb02e8f4d072\n-
        authors: Philip Ross\n  built_at: '2011-01-15T00:00:00.000Z'\n  created_at:
        '2011-01-15T12:47:49.060Z'\n  description: TZInfo is a Ruby library that uses
        the standard tz (Olson) database\n    to provide daylight savings aware transformations
        between times in different time\n    zones.\n  downloads_count: 1069942\n
        \ metadata: {}\n  number: 0.3.24\n  summary: Daylight-savings aware timezone
        library\n  platform: ruby\n  rubygems_version: \">= 0\"\n  ruby_version: \n
        \ prerelease: false\n  licenses: \n  requirements: \n  sha: a44418ed8b2422dd554d68a5d55d5f15b0777ae4f0a31745a638b812ade6d761\n-
        authors: Philip Ross\n  built_at: '2010-08-18T23:00:00.000Z'\n  created_at:
        '2010-08-19T22:03:00.115Z'\n  description: TZInfo is a Ruby library that uses
        the standard tz (Olson) database\n    to provide daylight savings aware transformations
        between times in different time\n    zones.\n  downloads_count: 1593959\n
        \ metadata: {}\n  number: 0.3.23\n  summary: Daylight-savings aware timezone
        library\n  platform: ruby\n  rubygems_version: \">= 0\"\n  ruby_version: \n
        \ prerelease: false\n  licenses: \n  requirements: \n  sha: eddd2989374c115b8f1fe8c43ce8988fd9054f4e5647224cac4513e67c9a1808\n-
        authors: Philip Ross\n  built_at: '2010-05-28T23:00:00.000Z'\n  created_at:
        '2010-05-29T08:12:11.023Z'\n  description: TZInfo is a Ruby library that uses
        the standard tz (Olson) database\n    to provide daylight savings aware transformations
        between times in different time\n    zones.\n  downloads_count: 344489\n  metadata:
        {}\n  number: 0.3.22\n  summary: Daylight-savings aware timezone library\n
        \ platform: ruby\n  rubygems_version: \">= 0\"\n  ruby_version: \n  prerelease:
        false\n  licenses: \n  requirements: \n  sha: 2cc82336ee43e4b3d974305d49bfa7b9d01e95f7b4438c397027a10b73fa192d\n-
        authors: Philip Ross\n  built_at: '2010-05-27T23:00:00.000Z'\n  created_at:
        '2010-05-28T21:34:40.856Z'\n  description: TZInfo is a Ruby library that uses
        the standard tz (Olson) database\n    to provide daylight savings aware transformations
        between times in different time\n    zones.\n  downloads_count: 2423\n  metadata:
        {}\n  number: 0.3.21\n  summary: Daylight-savings aware timezone library\n
        \ platform: ruby\n  rubygems_version: \">= 0\"\n  ruby_version: \n  prerelease:
        false\n  licenses: \n  requirements: \n  sha: 958e0f02f7371578afb1de32e4214605529c366279121419b174a823329edf5d\n-
        authors: Philip Ross\n  built_at: '2010-04-18T23:00:00.000Z'\n  created_at:
        '2010-04-19T21:37:54.076Z'\n  description: TZInfo is a Ruby library that uses
        the standard tz (Olson) database\n    to provide daylight savings aware transformations
        between times in different time\n    zones.\n  downloads_count: 32655\n  metadata:
        {}\n  number: 0.3.20\n  summary: Daylight-savings aware timezone library\n
        \ platform: ruby\n  rubygems_version: \">= 0\"\n  ruby_version: \n  prerelease:
        false\n  licenses: \n  requirements: \n  sha: 176afa57e9cb62f77e7e1ff82463f4a0531b82cf8f6317ee1a6887e6b3b9df88\n-
        authors: Philip Ross\n  built_at: '2010-04-04T23:00:00.000Z'\n  created_at:
        '2010-04-05T21:31:02.239Z'\n  description: TZInfo is a Ruby library that uses
        the standard tz (Olson) database\n    to provide daylight savings aware transformations
        between times in different time\n    zones.\n  downloads_count: 13880\n  metadata:
        {}\n  number: 0.3.19\n  summary: Daylight-savings aware timezone library\n
        \ platform: ruby\n  rubygems_version: \">= 0\"\n  ruby_version: \n  prerelease:
        false\n  licenses: \n  requirements: \n  sha: e8c439eb7ac84bef58c97f9bb61c7d18a2374cf66cb19baaf69122168d39e2ff\n-
        authors: Philip Ross\n  built_at: '2010-03-28T23:00:00.000Z'\n  created_at:
        '2010-03-29T21:45:30.888Z'\n  description: TZInfo is a Ruby library that uses
        the standard tz (Olson) database\n    to provide daylight savings aware transformations
        between times in different time\n    zones.\n  downloads_count: 8096\n  metadata:
        {}\n  number: 0.3.18\n  summary: Daylight-savings aware timezone library\n
        \ platform: ruby\n  rubygems_version: \">= 0\"\n  ruby_version: \n  prerelease:
        false\n  licenses: \n  requirements: \n  sha: fb11182d0a9019209484c1da17a96f18c795e4be0650e81eb50c369a830c9671\n-
        authors: Philip Ross\n  built_at: '2010-03-08T00:00:00.000Z'\n  created_at:
        '2010-03-08T22:03:14.686Z'\n  description: TZInfo is a Ruby library that uses
        the standard tz (Olson) database\n    to provide daylight savings aware transformations
        between times in different time\n    zones.\n  downloads_count: 13608\n  metadata:
        {}\n  number: 0.3.17\n  summary: Daylight-savings aware timezone library\n
        \ platform: ruby\n  rubygems_version: \">= 0\"\n  ruby_version: \n  prerelease:
        false\n  licenses: \n  requirements: \n  sha: 482b069c53ceacf2549704a6f9bcf181d3537a1a0e1f089f5a3c9d2545f0b21e\n-
        authors: Philip Ross\n  built_at: '2010-01-05T00:00:00.000Z'\n  created_at:
        '2010-01-05T22:14:28.892Z'\n  description: TZInfo is a Ruby library that uses
        the standard tz (Olson) database\n    to provide daylight savings aware transformations
        between times in different time\n    zones.\n  downloads_count: 141378\n  metadata:
        {}\n  number: 0.3.16\n  summary: Daylight-savings aware timezone library\n
        \ platform: ruby\n  rubygems_version: \">= 0\"\n  ruby_version: \n  prerelease:
        false\n  licenses: \n  requirements: \n  sha: 13ffd39dc065714fe054acf350ef4346a59c979a2c529d84a2a0704938287800\n-
        authors: Philip Ross\n  built_at: '2009-10-26T03:00:00.000Z'\n  created_at:
        '2009-10-27T01:50:05.200Z'\n  description: TZInfo is a Ruby library that uses
        the standard tz (Olson) database\n    to provide daylight savings aware transformations
        between times in different time\n    zones.\n  downloads_count: 13168\n  metadata:
        {}\n  number: 0.3.15\n  summary: Daylight-savings aware timezone library\n
        \ platform: ruby\n  rubygems_version: \">= 0\"\n  ruby_version: \n  prerelease:
        false\n  licenses: \n  requirements: \n  sha: 9ebdb9d5ece5e2bf4bca461ae00cd26097a51b56dfe0efff17ce05d7ffeabd02\n-
        authors: Philip Ross\n  built_at: '2009-08-19T02:00:00.000Z'\n  created_at:
        '2009-08-20T05:42:02.000Z'\n  description: ''\n  downloads_count: 5461\n  metadata:
        {}\n  number: 0.3.14\n  summary: Daylight-savings aware timezone library\n
        \ platform: ruby\n  rubygems_version: \">= 0\"\n  ruby_version: \n  prerelease:
        false\n  licenses: \n  requirements: \n  sha: cf04d428eab63c85d622689da9f889ada0512a8239916930c3088d6c54b2a007\n-
        authors: Philip Ross\n  built_at: '2009-04-14T23:00:00.000Z'\n  created_at:
        '2009-07-25T17:48:36.000Z'\n  description: ''\n  downloads_count: 50503\n
        \ metadata: {}\n  number: 0.3.13\n  summary: Daylight-savings aware timezone
        library\n  platform: ruby\n  rubygems_version: \">= 0\"\n  ruby_version: \n
        \ prerelease: false\n  licenses: \n  requirements: \n  sha: 5921930f55a19bbb80d2319479177c18aa4ea70993ece92f584206791dcecd7f\n-
        authors: Philip Ross\n  built_at: '2008-11-12T00:00:00.000Z'\n  created_at:
        '2009-07-25T17:48:36.000Z'\n  description: ''\n  downloads_count: 7939\n  metadata:
        {}\n  number: 0.3.12\n  summary: Daylight-savings aware timezone library\n
        \ platform: ruby\n  rubygems_version: \">= 0\"\n  ruby_version: \n  prerelease:
        false\n  licenses: \n  requirements: \n  sha: 509f647f6874c0852b7b9227592860e34bd3b506cfebca8b85fa392efc5a76df\n-
        authors: Philip Ross\n  built_at: '2008-10-06T23:00:00.000Z'\n  created_at:
        '2009-07-25T17:48:36.000Z'\n  description: ''\n  downloads_count: 2587\n  metadata:
        {}\n  number: 0.3.11\n  summary: Daylight-savings aware timezone library\n
        \ platform: ruby\n  rubygems_version: \">= 0\"\n  ruby_version: \n  prerelease:
        false\n  licenses: \n  requirements: \n  sha: 6ed99c3b2fdd10629acf9f1b5a5a2895f8f69af28019e256ad6fdaaeface28a9\n-
        authors: Philip Ross\n  built_at: '2008-09-15T23:00:00.000Z'\n  created_at:
        '2009-07-25T17:48:36.000Z'\n  description: ''\n  downloads_count: 2231\n  metadata:
        {}\n  number: 0.3.10\n  summary: Daylight-savings aware timezone library\n
        \ platform: ruby\n  rubygems_version: \">= 0\"\n  ruby_version: \n  prerelease:
        false\n  licenses: \n  requirements: \n  sha: 3f01fc1b08ba4eb874e01be32f063e2540a24574ae44271b7eeb88d5d49c0678\n-
        authors: Philip Ross\n  built_at: '2008-05-26T23:00:00.000Z'\n  created_at:
        '2009-07-25T17:48:35.000Z'\n  description: ''\n  downloads_count: 3729\n  metadata:
        {}\n  number: 0.3.9\n  summary: Daylight-savings aware timezone library\n
        \ platform: ruby\n  rubygems_version: \">= 0\"\n  ruby_version: \n  prerelease:
        false\n  licenses: \n  requirements: \n  sha: cc2c9816b7130e5096f9c377ad8f014295b2394529446a7b20a614fa7abcd886\n-
        authors: Philip Ross\n  built_at: '2008-03-24T00:00:00.000Z'\n  created_at:
        '2009-07-25T17:48:35.000Z'\n  description: ''\n  downloads_count: 2200\n  metadata:
        {}\n  number: 0.3.8\n  summary: Daylight-savings aware timezone library\n
        \ platform: ruby\n  rubygems_version: \">= 0\"\n  ruby_version: \n  prerelease:
        false\n  licenses: \n  requirements: \n  sha: 656fe8f6444bedfc1a9e4ccb11c7c9c2a030a76610ec92363559c958625ea884\n-
        authors: Philip Ross\n  built_at: '2008-03-10T00:00:00.000Z'\n  created_at:
        '2009-07-25T17:48:35.000Z'\n  description: ''\n  downloads_count: 1956\n  metadata:
        {}\n  number: 0.3.7\n  summary: Daylight-savings aware timezone library\n
        \ platform: ruby\n  rubygems_version: \">= 0\"\n  ruby_version: \n  prerelease:
        false\n  licenses: \n  requirements: \n  sha: 20b6713ae44c4146f998a564dc19cff824f090d35566f1bdb7bb56ed7315ae91\n-
        authors: Philip Ross\n  built_at: '2008-01-01T00:00:00.000Z'\n  created_at:
        '2009-07-25T17:48:35.000Z'\n  description: ''\n  downloads_count: 2198\n  metadata:
        {}\n  number: 0.3.6\n  summary: Daylight-savings aware timezone library\n
        \ platform: ruby\n  rubygems_version: \">= 0\"\n  ruby_version: \n  prerelease:
        false\n  licenses: \n  requirements: \n  sha: 323bd84db535687dba17c866ca1cbbfa23e630ae9bd2a1233e8fa2d331d7f64c\n-
        authors: Philip Ross\n  built_at: '2007-09-30T23:00:00.000Z'\n  created_at:
        '2009-07-25T17:48:35.000Z'\n  description: ''\n  downloads_count: 2561\n  metadata:
        {}\n  number: 0.3.5\n  summary: Daylight-savings aware timezone library\n
        \ platform: ruby\n  rubygems_version: \">= 0\"\n  ruby_version: \n  prerelease:
        false\n  licenses: \n  requirements: \n  sha: 05cebcf8784ff2b3ca96bb610bbbbe877f712631be7fd8d610044aac0ffaad8c\n-
        authors: Philip Ross\n  built_at: '2007-08-20T23:00:00.000Z'\n  created_at:
        '2009-07-25T17:48:35.000Z'\n  description: ''\n  downloads_count: 1938\n  metadata:
        {}\n  number: 0.3.4\n  summary: Daylight-savings aware timezone library\n
        \ platform: ruby\n  rubygems_version: \">= 0\"\n  ruby_version: \n  prerelease:
        false\n  licenses: \n  requirements: \n  sha: b6e89f588a478067b511bb013e7184f6ed4247f4a37315466b75f7de82154a62\n-
        authors: Philip Ross\n  built_at: '2006-11-27T00:00:00.000Z'\n  created_at:
        '2009-07-25T17:48:35.000Z'\n  description: ''\n  downloads_count: 2349\n  metadata:
        {}\n  number: 0.3.3\n  summary: Daylight-savings aware timezone library\n
        \ platform: ruby\n  rubygems_version: \">= 0\"\n  ruby_version: \n  prerelease:
        false\n  licenses: \n  requirements: \n  sha: f9222a8050410b8a035ca65652010771323f8178ccb4c9046a05216a939d017a\n-
        authors: Philip Ross\n  built_at: '2006-10-10T23:00:00.000Z'\n  created_at:
        '2009-07-25T17:48:35.000Z'\n  description: ''\n  downloads_count: 1943\n  metadata:
        {}\n  number: 0.3.2\n  summary: Daylight-savings aware timezone library\n
        \ platform: ruby\n  rubygems_version: \">= 0\"\n  ruby_version: \n  prerelease:
        false\n  licenses: \n  requirements: \n  sha: c322b0a666986e19d046363cb5aea644380723a225a1ab9f592f8ab040537d4d\n-
        authors: Philip Ross\n  built_at: '2006-08-20T23:00:00.000Z'\n  created_at:
        '2009-07-25T17:48:36.000Z'\n  description: ''\n  downloads_count: 1906\n  metadata:
        {}\n  number: 0.3.1\n  summary: Daylight-savings aware timezone library\n
        \ platform: ruby\n  rubygems_version: \">= 0\"\n  ruby_version: \n  prerelease:
        false\n  licenses: \n  requirements: \n  sha: 21d199e0c2c7eae3425ba754e0f8c9b215dde2582d6daa818d51e85a97542d32\n-
        authors: Philip Ross\n  built_at: '2006-07-16T23:00:00.000Z'\n  created_at:
        '2009-07-25T17:48:36.000Z'\n  description: ''\n  downloads_count: 2307\n  metadata:
        {}\n  number: 0.3.0\n  summary: Daylight-savings aware timezone library\n
        \ platform: ruby\n  rubygems_version: \">= 0\"\n  ruby_version: \n  prerelease:
        false\n  licenses: \n  requirements: \n  sha: f7b3e4e125e96457167101e223c5bf481fc7172703fed4a8834b0eef1226b45f\n-
        authors: Philip Ross\n  built_at: '2006-05-16T23:00:00.000Z'\n  created_at:
        '2009-07-25T17:48:37.000Z'\n  description: ''\n  downloads_count: 3753\n  metadata:
        {}\n  number: 0.2.2\n  summary: Daylight-savings aware timezone library\n
        \ platform: ruby\n  rubygems_version: \">= 0\"\n  ruby_version: \n  prerelease:
        false\n  licenses: \n  requirements: \n  sha: bb04510c88413365158a29ffee7032c7e4699623894d4d2862923689b9e2a432\n-
        authors: Philip Ross\n  built_at: '2006-04-16T23:00:00.000Z'\n  created_at:
        '2009-07-25T17:48:37.000Z'\n  description: ''\n  downloads_count: 1924\n  metadata:
        {}\n  number: 0.2.1\n  summary: Daylight-savings aware timezone library\n
        \ platform: ruby\n  rubygems_version: \">= 0\"\n  ruby_version: \n  prerelease:
        false\n  licenses: \n  requirements: \n  sha: 50deb24ece072659b946993ca2d1e1c3b286ceef9a6ab6a56a71eb70eb75ca7c\n-
        authors: Philip Ross\n  built_at: '2006-04-03T04:00:00.000Z'\n  created_at:
        '2009-07-25T17:48:37.000Z'\n  description: ''\n  downloads_count: 1920\n  metadata:
        {}\n  number: 0.2.0\n  summary: Daylight-savings aware timezone library\n
        \ platform: ruby\n  rubygems_version: \">= 0\"\n  ruby_version: \n  prerelease:
        false\n  licenses: \n  requirements: \n  sha: 2f56eb348dae07ee35340c215f8413479d5d0878a179e199ca1ba78dd52993f0\n-
        authors: Philip Ross\n  built_at: '2006-02-05T05:00:00.000Z'\n  created_at:
        '2009-07-25T17:48:37.000Z'\n  description: ''\n  downloads_count: 1899\n  metadata:
        {}\n  number: 0.1.2\n  summary: Daylight-savings aware timezone library\n
        \ platform: ruby\n  rubygems_version: \">= 0\"\n  ruby_version: \n  prerelease:
        false\n  licenses: \n  requirements: \n  sha: 9483b180f0d9a3b3c65ff15b3006c67679a91e4212aaaffc12d3058c7f1016ee\n-
        authors: Philip Ross\n  built_at: '2005-12-18T05:00:00.000Z'\n  created_at:
        '2009-07-25T17:48:37.000Z'\n  description: ''\n  downloads_count: 1868\n  metadata:
        {}\n  number: 0.1.1\n  summary: Daylight-savings aware timezone library\n
        \ platform: ruby\n  rubygems_version: \">= 0\"\n  ruby_version: \n  prerelease:
        false\n  licenses: \n  requirements: \n  sha: cff8552c1f45ac493003b32955ab2f188402b5f77d8885694eae32ab9a51a76c\n-
        authors: Philip Ross\n  built_at: '2005-11-27T05:00:00.000Z'\n  created_at:
        '2009-07-25T17:48:37.000Z'\n  description: ''\n  downloads_count: 1937\n  metadata:
        {}\n  number: 0.1.0\n  summary: Daylight-savings aware timezone library\n
        \ platform: ruby\n  rubygems_version: \">= 0\"\n  ruby_version: \n  prerelease:
        false\n  licenses: \n  requirements: \n  sha: bbc4b7284f6795b50d5bb1b0b092b7621821761b8a1e025c1e4a6c7ecb7c3623\n-
        authors: Philip Ross\n  built_at: '2005-09-18T04:00:00.000Z'\n  created_at:
        '2009-07-25T17:48:38.000Z'\n  description: ''\n  downloads_count: 1929\n  metadata:
        {}\n  number: 0.0.4\n  summary: Daylight-savings aware timezone library\n
        \ platform: ruby\n  rubygems_version: \">= 0\"\n  ruby_version: \n  prerelease:
        false\n  licenses: \n  requirements: \n  sha: 7fa5815927035b2fae0a6843073009ae3420ed8ab999dcd1582039414e6e74eb\n-
        authors: Philip Ross\n  built_at: '2005-09-17T04:00:00.000Z'\n  created_at:
        '2009-07-25T17:48:38.000Z'\n  description: ''\n  downloads_count: 1895\n  metadata:
        {}\n  number: 0.0.3\n  summary: Daylight-savings aware timezone library\n
        \ platform: ruby\n  rubygems_version: \">= 0\"\n  ruby_version: \n  prerelease:
        false\n  licenses: \n  requirements: \n  sha: 9affb2d9c084add97908800388fb5ef8c4f31733abb9c0b867936e1487e0cb82\n-
        authors: Philip Ross\n  built_at: '2005-09-13T04:00:00.000Z'\n  created_at:
        '2009-07-25T17:48:38.000Z'\n  description: ''\n  downloads_count: 1881\n  metadata:
        {}\n  number: 0.0.2\n  summary: Daylight-savings aware timezone library\n
        \ platform: ruby\n  rubygems_version: \">= 0\"\n  ruby_version: \n  prerelease:
        false\n  licenses: \n  requirements: \n  sha: 5da51b81c85cbe7bd5728756e4ed735cb024cbd06b277f4a108caa22fbd1a96f\n-
        authors: Philip Ross\n  built_at: '2005-08-30T04:00:00.000Z'\n  created_at:
        '2009-07-25T17:48:38.000Z'\n  description: ''\n  downloads_count: 1961\n  metadata:
        {}\n  number: 0.0.1\n  summary: Daylight-savings aware timezone library\n
        \ platform: ruby\n  rubygems_version: \">= 0\"\n  ruby_version: \n  prerelease:
        false\n  licenses: \n  requirements: \n  sha: 859413ad1026e079713dbf097cdd329cea09db6ef3ba10fc012718c849d09f33\n"
    http_version: 
  recorded_at: Fri, 06 Jan 2017 17:10:02 GMT
- request:
    method: get
    uri: https://rubygems.org/api/v1/gems/tzinfo/owners.yaml
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Gems 0.8.3
      - Ruby
      Authorization:
      - 1da62a2449ff2bdd425e9e82261f7b72
      Connection:
      - keep-alive
      Keep-Alive:
      - '30'
      Content-Type:
      - application/x-www-form-urlencoded
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - text/yaml
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
      Content-Disposition:
      - attachment
      Content-Transfer-Encoding:
      - binary
      Cache-Control:
      - private
      X-Request-Id:
      - cf3055a1-5676-4991-a5c5-dd589eb3674b
      X-Runtime:
      - '0.005688'
      X-Ua-Compatible:
      - IE=Edge,chrome=1
      X-Backend:
      - F_Rails 54.186.104.15:443
      Transfer-Encoding:
      - chunked
      Accept-Ranges:
      - bytes
      Date:
      - Fri, 06 Jan 2017 17:10:03 GMT
      Via:
      - 1.1 varnish
      Age:
      - '0'
      Connection:
      - keep-alive
      X-Served-By:
      - cache-bma7024-BMA
      X-Cache:
      - MISS
      X-Cache-Hits:
      - '0'
      X-Timer:
      - S1483722602.985548,VS0,VE196
      Vary:
      - Accept-Encoding,Fastly-SSL
      Etag:
      - '"d15b2bd9e382f24b11d1506a56e460ac"'
      Server:
      - RubyGems.org
    body:
      encoding: ASCII-8BIT
      string: |
        ---
        - id: 2981
          handle: PhilRoss
    http_version: 
  recorded_at: Fri, 06 Jan 2017 17:10:03 GMT
- request:
    method: get
    uri: https://rubygems.org/api/v1/gems/thread_safe.yaml
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Gems 0.8.3
      - Ruby
      Authorization:
      - 1da62a2449ff2bdd425e9e82261f7b72
      Connection:
      - keep-alive
      Keep-Alive:
      - '30'
      Content-Type:
      - application/x-www-form-urlencoded
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - text/yaml
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
      Content-Disposition:
      - attachment
      Content-Transfer-Encoding:
      - binary
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET
      Access-Control-Max-Age:
      - '1728000'
      Cache-Control:
      - private
      X-Request-Id:
      - 0a0cbea5-19dc-4361-8fbb-87f4aaee5f1a
      X-Runtime:
      - '0.012844'
      X-Ua-Compatible:
      - IE=Edge,chrome=1
      X-Backend:
      - F_Rails 54.186.104.15:443
      Transfer-Encoding:
      - chunked
      Accept-Ranges:
      - bytes
      Date:
      - Fri, 06 Jan 2017 17:10:03 GMT
      Via:
      - 1.1 varnish
      Connection:
      - keep-alive
      X-Served-By:
      - cache-bma7023-BMA
      X-Cache:
      - MISS
      X-Cache-Hits:
      - '0'
      X-Timer:
      - S1483722603.372611,VS0,VE203
      Vary:
      - Accept-Encoding,Fastly-SSL
      Etag:
      - '"37996593e38cf8b3c2ef3724ed4d72d7"'
      Server:
      - RubyGems.org
    body:
      encoding: ASCII-8BIT
      string: |
        ---
        name: thread_safe
        downloads: 66845432
        version: 0.3.5
        version_downloads: 30966244
        platform: ruby
        authors: Charles Oliver Nutter, thedarkone
        info: Thread-safe collections and utilities for Ruby
        licenses:
        - Apache-2.0
        metadata: {}
        sha: 993da065f98b8575c537ebf984ffb79eecdb6064559a3b9d2a9d7aaf313704c3
        project_uri: https://rubygems.org/gems/thread_safe
        gem_uri: https://rubygems.org/gems/thread_safe-0.3.5.gem
        homepage_uri: https://github.com/ruby-concurrency/thread_safe
        wiki_uri: ''
        documentation_uri: http://ruby-concurrency.github.io/thread_safe/frames.html
        mailing_list_uri: https://groups.google.com/forum/#!forum/concurrent-ruby
        source_code_uri: https://github.com/ruby-concurrency/thread_safe
        bug_tracker_uri: https://github.com/ruby-concurrency/thread_safe/issues
        dependencies:
          development:
          - name: atomic
            requirements: "= 1.1.16"
          - name: minitest
            requirements: ">= 4"
          - name: rake
            requirements: ">= 0"
          runtime: []
    http_version: 
  recorded_at: Fri, 06 Jan 2017 17:10:03 GMT
- request:
    method: get
    uri: https://rubygems.org/api/v1/versions/thread_safe.yaml
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Gems 0.8.3
      - Ruby
      Authorization:
      - 1da62a2449ff2bdd425e9e82261f7b72
      Connection:
      - keep-alive
      Keep-Alive:
      - '30'
      Content-Type:
      - application/x-www-form-urlencoded
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - text/yaml
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
      Etag:
      - '"189358694ff4d5e04d01703c596065be"'
      Last-Modified:
      - Mon, 27 Jun 2016 15:40:17 GMT
      Content-Disposition:
      - attachment
      Content-Transfer-Encoding:
      - binary
      Cache-Control:
      - max-age=0, public
      X-Request-Id:
      - b00a0644-f251-4660-b1ec-9711b8d11b45
      X-Runtime:
      - '0.052374'
      X-Ua-Compatible:
      - IE=Edge,chrome=1
      X-Backend:
      - F_Rails 54.186.104.15:443
      Content-Length:
      - '1802'
      Accept-Ranges:
      - bytes
      Date:
      - Fri, 06 Jan 2017 17:10:03 GMT
      Via:
      - 1.1 varnish
      Age:
      - '51'
      Connection:
      - keep-alive
      X-Served-By:
      - cache-bma7029-BMA
      X-Cache:
      - HIT
      X-Cache-Hits:
      - '2'
      X-Timer:
      - S1483722603.734589,VS0,VE0
      Vary:
      - Accept-Encoding,Fastly-SSL
      Server:
      - RubyGems.org
    body:
      encoding: ASCII-8BIT
      string: "---\n- authors: Charles Oliver Nutter, thedarkone\n  built_at: '2015-03-11T00:00:00.000Z'\n
        \ created_at: '2015-03-11T15:00:52.728Z'\n  description: Thread-safe collections
        and utilities for Ruby\n  downloads_count: 5962481\n  metadata: {}\n  number:
        0.3.5\n  summary: A collection of data structures and utilities to make thread-safe
        programming\n    in Ruby easier\n  platform: java\n  rubygems_version: \">=
        0\"\n  ruby_version: \">= 0\"\n  prerelease: false\n  licenses:\n  - Apache-2.0\n
        \ requirements: []\n  sha: 52976573c9934c696a0c577ea57f51e38714191cc6bd0fac499f9ad5843e060c\n-
        authors: Charles Oliver Nutter, thedarkone\n  built_at: '2015-03-11T00:00:00.000Z'\n
        \ created_at: '2015-03-11T15:00:41.140Z'\n  description: Thread-safe collections
        and utilities for Ruby\n  downloads_count: 30961771\n  metadata: {}\n  number:
        0.3.5\n  summary: A collection of data structures and utilities to make thread-safe
        programming\n    in Ruby easier\n  platform: ruby\n  rubygems_version: \">=
        0\"\n  ruby_version: \">= 0\"\n  prerelease: false\n  licenses:\n  - Apache-2.0\n
        \ requirements: []\n  sha: 993da065f98b8575c537ebf984ffb79eecdb6064559a3b9d2a9d7aaf313704c3\n-
        authors: Charles Oliver Nutter, thedarkone\n  built_at: '2014-05-27T00:00:00.000Z'\n
        \ created_at: '2014-05-27T20:10:29.698Z'\n  description: Thread-safe collections
        and utilities for Ruby\n  downloads_count: 20650972\n  metadata: {}\n  number:
        0.3.4\n  summary: A collection of data structures and utilities to make thread-safe
        programming\n    in Ruby easier\n  platform: ruby\n  rubygems_version: \">=
        0\"\n  ruby_version: \">= 0\"\n  prerelease: false\n  licenses:\n  - Apache-2.0\n
        \ requirements: []\n  sha: 16315baa971c48d00104bcd35e8934e3f9ccfd3b8f429e3fca7ee2dfd81734b2\n-
        authors: Charles Oliver Nutter, thedarkone\n  built_at: '2014-05-27T00:00:00.000Z'\n
        \ created_at: '2014-05-27T20:10:16.778Z'\n  description: Thread-safe collections
        and utilities for Ruby\n  downloads_count: 382704\n  metadata: {}\n  number:
        0.3.4\n  summary: A collection of data structures and utilities to make thread-safe
        programming\n    in Ruby easier\n  platform: java\n  rubygems_version: \">=
        0\"\n  ruby_version: \">= 0\"\n  prerelease: false\n  licenses:\n  - Apache-2.0\n
        \ requirements: []\n  sha: 903716024d787ea90b6647c81f3ff3710721279f1ed435fc0e219582ca851ba0\n-
        authors: Charles Oliver Nutter, thedarkone\n  built_at: '2014-04-07T00:00:00.000Z'\n
        \ created_at: '2014-04-07T10:05:01.221Z'\n  description: Thread-safe collections
        and utilities for Ruby\n  downloads_count: 59322\n  metadata: {}\n  number:
        0.3.3\n  summary: A collection of data structures and utilities to make thread-safe
        programming\n    in Ruby easier\n  platform: java\n  rubygems_version: \">=
        0\"\n  ruby_version: \">= 0\"\n  prerelease: false\n  licenses:\n  - Apache-2.0\n
        \ requirements: []\n  sha: e8122caeee98b9294f36760ca1fcf5589b4e27ead202296ffef6854b01693731\n-
        authors: Charles Oliver Nutter, thedarkone\n  built_at: '2014-04-07T00:00:00.000Z'\n
        \ created_at: '2014-04-07T10:04:43.000Z'\n  description: Thread-safe collections
        and utilities for Ruby\n  downloads_count: 1622351\n  metadata: {}\n  number:
        0.3.3\n  summary: A collection of data structures and utilities to make thread-safe
        programming\n    in Ruby easier\n  platform: ruby\n  rubygems_version: \">=
        0\"\n  ruby_version: \">= 0\"\n  prerelease: false\n  licenses:\n  - Apache-2.0\n
        \ requirements: []\n  sha: f0f4307ea85d6eff7f9c304587073e3465da58beb198ea686bf69ec87f2ddb7e\n-
        authors: Charles Oliver Nutter, thedarkone\n  built_at: '2014-04-05T00:00:00.000Z'\n
        \ created_at: '2014-04-05T12:15:16.825Z'\n  description: Thread-safe collections
        and utilities for Ruby\n  downloads_count: 2189\n  metadata: {}\n  number:
        0.3.2\n  summary: A collection of data structures and utilities to make thread-safe
        programming\n    in Ruby easier\n  platform: java\n  rubygems_version: \">=
        0\"\n  ruby_version: \">= 0\"\n  prerelease: false\n  licenses:\n  - Apache-2.0\n
        \ requirements: []\n  sha: a475303101015f279b2791ddcb821e275d0f76cbce46251359a15d39dfb69117\n-
        authors: Charles Oliver Nutter, thedarkone\n  built_at: '2014-04-05T00:00:00.000Z'\n
        \ created_at: '2014-04-05T12:14:51.531Z'\n  description: Thread-safe collections
        and utilities for Ruby\n  downloads_count: 46275\n  metadata: {}\n  number:
        0.3.2\n  summary: A collection of data structures and utilities to make thread-safe
        programming\n    in Ruby easier\n  platform: ruby\n  rubygems_version: \">=
        0\"\n  ruby_version: \">= 0\"\n  prerelease: false\n  licenses:\n  - Apache-2.0\n
        \ requirements: []\n  sha: e66e8c03414aa0e1982a5f505d659ed5fd1a411fee71b8e852ab57e0eb9e4853\n-
        authors: Charles Oliver Nutter, thedarkone\n  built_at: '2014-03-21T00:00:00.000Z'\n
        \ created_at: '2014-03-21T07:24:51.143Z'\n  description: Thread-safe collections
        and utilities for Ruby\n  downloads_count: 467232\n  metadata: {}\n  number:
        0.3.1\n  summary: A collection of data structures and utilities to make thread-safe
        programming\n    in Ruby easier\n  platform: ruby\n  rubygems_version: \">=
        0\"\n  ruby_version: \">= 0\"\n  prerelease: false\n  licenses:\n  - Apache-2.0\n
        \ requirements: []\n  sha: aff0cf52e87876f46767c5327b8c4332381c6f6f832dff36679e928c30b82f3d\n-
        authors: Charles Oliver Nutter, thedarkone\n  built_at: '2014-03-21T00:00:00.000Z'\n
        \ created_at: '2014-03-21T07:24:24.214Z'\n  description: Thread-safe collections
        and utilities for Ruby\n  downloads_count: 24204\n  metadata: {}\n  number:
        0.3.1\n  summary: A collection of data structures and utilities to make thread-safe
        programming\n    in Ruby easier\n  platform: java\n  rubygems_version: \">=
        0\"\n  ruby_version: \">= 0\"\n  prerelease: false\n  licenses:\n  - Apache-2.0\n
        \ requirements: []\n  sha: d71d0686a011d478562460c7734694c750afb03f769445bd46c6da740e869020\n-
        authors: Charles Oliver Nutter, thedarkone\n  built_at: '2014-02-26T00:00:00.000Z'\n
        \ created_at: '2014-02-26T17:43:22.372Z'\n  description: Thread-safe collections
        and utilities for Ruby\n  downloads_count: 28542\n  metadata: {}\n  number:
        0.2.0\n  summary: A collection of data structures and utilities to make thread-safe
        programming\n    in Ruby easier\n  platform: java\n  rubygems_version: \">=
        0\"\n  ruby_version: \n  prerelease: false\n  licenses:\n  - Apache-2.0\n
        \ requirements: []\n  sha: a184903697075973c6959e48ab28b8f6c3ad628728bb2817c2b0d0bc6aa67433\n-
        authors: Charles Oliver Nutter, thedarkone\n  built_at: '2014-02-26T00:00:00.000Z'\n
        \ created_at: '2014-02-26T17:40:40.192Z'\n  description: Thread-safe collections
        and utilities for Ruby\n  downloads_count: 650301\n  metadata: {}\n  number:
        0.2.0\n  summary: A collection of data structures and utilities to make thread-safe
        programming\n    in Ruby easier\n  platform: ruby\n  rubygems_version: \">=
        0\"\n  ruby_version: \n  prerelease: false\n  licenses:\n  - Apache-2.0\n
        \ requirements: []\n  sha: a85f7f14c3269fd6c77514aa4fdeef20bef19eee91839762b3b4a4f8cf323145\n-
        authors: Charles Oliver Nutter, thedarkone\n  built_at: '2013-09-10T00:00:00.000Z'\n
        \ created_at: '2013-09-10T14:35:21.960Z'\n  description: Thread-safe collections
        and utilities for Ruby\n  downloads_count: 4042217\n  metadata: {}\n  number:
        0.1.3\n  summary: A collection of data structures and utilities to make thread-safe
        programming\n    in Ruby easier\n  platform: ruby\n  rubygems_version: \">=
        0\"\n  ruby_version: \n  prerelease: false\n  licenses:\n  - Apache-2.0\n
        \ requirements: []\n  sha: f8b9f8db0889aa97676b4a1efe919b1e76601ed9c9662a986825755bba305c38\n-
        authors: Charles Oliver Nutter, thedarkone\n  built_at: '2013-09-10T00:00:00.000Z'\n
        \ created_at: '2013-09-10T14:34:01.740Z'\n  description: Thread-safe collections
        and utilities for Ruby\n  downloads_count: 145547\n  metadata: {}\n  number:
        0.1.3\n  summary: A collection of data structures and utilities to make thread-safe
        programming\n    in Ruby easier\n  platform: java\n  rubygems_version: \">=
        0\"\n  ruby_version: \n  prerelease: false\n  licenses:\n  - Apache-2.0\n
        \ requirements: []\n  sha: 24905e6433a692412ddfeb2105c4768266ef693b7e51d9b9dcdb789141b5a7e1\n-
        authors: Charles Oliver Nutter\n  built_at: '2013-07-24T00:00:00.000Z'\n  created_at:
        '2013-07-24T00:12:01.379Z'\n  description: Thread-safe collections and utilities
        for Ruby\n  downloads_count: 919880\n  metadata: {}\n  number: 0.1.2\n  summary:
        A collection of data structures and utilities to make thread-safe programming\n
        \   in Ruby easier\n  platform: ruby\n  rubygems_version: \">= 0\"\n  ruby_version:
        \n  prerelease: false\n  licenses:\n  - Apache-2.0\n  requirements: []\n  sha:
        7e2b957c28f2676b0a5ba5c0ad3a92988887922edfcb7be66acac6106881beaf\n- authors:
        Charles Oliver Nutter\n  built_at: '2013-07-24T00:00:00.000Z'\n  created_at:
        '2013-07-24T00:11:38.470Z'\n  description: Thread-safe collections and utilities
        for Ruby\n  downloads_count: 95918\n  metadata: {}\n  number: 0.1.2\n  summary:
        A collection of data structures and utilities to make thread-safe programming\n
        \   in Ruby easier\n  platform: java\n  rubygems_version: \">= 0\"\n  ruby_version:
        \n  prerelease: false\n  licenses:\n  - Apache-2.0\n  requirements: []\n  sha:
        d31bb9b0cafd67510f9d5d026064e00c99dcd2935fe310a9deba987788146da7\n- authors:
        Charles Oliver Nutter\n  built_at: '2013-07-23T00:00:00.000Z'\n  created_at:
        '2013-07-23T19:40:30.776Z'\n  description: Thread-safe collections and utilities
        for Ruby\n  downloads_count: 4830\n  metadata: {}\n  number: 0.1.1\n  summary:
        A collection of data structures and utilities to make thread-safe programming\n
        \   in Ruby easier\n  platform: ruby\n  rubygems_version: \">= 0\"\n  ruby_version:
        \n  prerelease: false\n  licenses:\n  - Apache-2.0\n  requirements: []\n  sha:
        3102637a5f58ebb8adfbffad76acd9d40b2f0889c3fb4959a9b5e45b6f82942b\n- authors:
        Charles Oliver Nutter\n  built_at: '2013-07-23T00:00:00.000Z'\n  created_at:
        '2013-07-23T19:39:55.576Z'\n  description: Thread-safe collections and utilities
        for Ruby\n  downloads_count: 1124\n  metadata: {}\n  number: 0.1.1\n  summary:
        A collection of data structures and utilities to make thread-safe programming\n
        \   in Ruby easier\n  platform: java\n  rubygems_version: \">= 0\"\n  ruby_version:
        \n  prerelease: false\n  licenses:\n  - Apache-2.0\n  requirements: []\n  sha:
        787f8084a847cbe26a9aad685a6e7b46ae113cd87aa144d78a9c3e4f631161db\n- authors:
        Charles Oliver Nutter, thedarkone\n  built_at: '2012-12-12T23:00:00.000Z'\n
        \ created_at: '2012-12-13T12:37:46.787Z'\n  description: Thread-safe collections
        and utilities for Ruby\n  downloads_count: 734850\n  metadata: {}\n  number:
        0.1.0\n  summary: A collection of data structures and utilities to make thread-safe
        programming\n    in Ruby easier\n  platform: ruby\n  rubygems_version: \">=
        0\"\n  ruby_version: \n  prerelease: false\n  licenses: []\n  requirements:
        \n  sha: 4ee7605080ea11b1bfd8a5d7ddeef97a73609d1ad8355e648c91d00842201d3a\n-
        authors: Charles Oliver Nutter\n  built_at: '2012-04-27T00:00:00.000Z'\n  created_at:
        '2012-04-27T16:52:19.721Z'\n  description: Thread-safe collections and utilities
        for Ruby\n  downloads_count: 3359\n  metadata: {}\n  number: 0.0.3\n  summary:
        A collection of data structures and utilities to make thread-safe programming\n
        \   in Ruby easier\n  platform: ruby\n  rubygems_version: \">= 0\"\n  ruby_version:
        \n  prerelease: false\n  licenses: \n  requirements: \n  sha: d4fac31142dd3262bcf4e66f730e8ef5d0f058e4f5bc43d510fc4db92a4085e9\n-
        authors: Charles Oliver Nutter\n  built_at: '2012-04-26T00:00:00.000Z'\n  created_at:
        '2012-04-26T00:12:31.448Z'\n  description: Thread-safe collections and utilities
        for Ruby\n  downloads_count: 1559\n  metadata: {}\n  number: 0.0.2\n  summary:
        A collection of data structures and utilities to make thread-safe programming\n
        \   in Ruby easier\n  platform: ruby\n  rubygems_version: \">= 0\"\n  ruby_version:
        \n  prerelease: false\n  licenses: \n  requirements: \n  sha: bd74ee7ad95567721f7cd5757d6fb5a6cbf21e6613cf6f187ad3d72c245c2b39\n-
        authors: Charles Oliver Nutter\n  built_at: '2012-04-26T00:00:00.000Z'\n  created_at:
        '2012-04-26T00:02:37.807Z'\n  description: Thread-safe collections and utilities
        for Ruby\n  downloads_count: 1570\n  metadata: {}\n  number: 0.0.1\n  summary:
        A collection of data structures and utilities to make thread-safe programming\n
        \   in Ruby easier\n  platform: ruby\n  rubygems_version: \">= 0\"\n  ruby_version:
        \n  prerelease: false\n  licenses: \n  requirements: \n  sha: b1f7dfeb8bc765e421a90836c6a7e7dbe587abe238b2f660a89c6ad6e8e4975d\n"
    http_version: 
  recorded_at: Fri, 06 Jan 2017 17:10:03 GMT
- request:
    method: get
    uri: https://rubygems.org/api/v1/gems/thread_safe/owners.yaml
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Gems 0.8.3
      - Ruby
      Authorization:
      - 1da62a2449ff2bdd425e9e82261f7b72
      Connection:
      - keep-alive
      Keep-Alive:
      - '30'
      Content-Type:
      - application/x-www-form-urlencoded
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - text/yaml
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
      Content-Disposition:
      - attachment
      Content-Transfer-Encoding:
      - binary
      Cache-Control:
      - private
      X-Request-Id:
      - cc1b8f6e-d67f-4c3f-9a0b-150abf057799
      X-Runtime:
      - '0.005649'
      X-Ua-Compatible:
      - IE=Edge,chrome=1
      X-Backend:
      - F_Rails 54.186.104.15:443
      Transfer-Encoding:
      - chunked
      Accept-Ranges:
      - bytes
      Date:
      - Fri, 06 Jan 2017 17:10:04 GMT
      Via:
      - 1.1 varnish
      Age:
      - '0'
      Connection:
      - keep-alive
      X-Served-By:
      - cache-bma7029-BMA
      X-Cache:
      - MISS
      X-Cache-Hits:
      - '0'
      X-Timer:
      - S1483722603.895282,VS0,VE197
      Vary:
      - Accept-Encoding,Fastly-SSL
      Etag:
      - '"7ddedc3a23b5f44be00e8ed8ccefa3c0"'
      Server:
      - RubyGems.org
    body:
      encoding: ASCII-8BIT
      string: |
        ---
        - id: 65379
          handle: jdantonio
        - id: 1825
          handle: headius
          email: headius@headius.com
        - id: 58885
          handle: thedarkone
          email: thedarkone2@gmail.com
    http_version: 
  recorded_at: Fri, 06 Jan 2017 17:10:04 GMT
recorded_with: VCR 3.0.3
